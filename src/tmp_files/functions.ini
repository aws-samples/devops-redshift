[sp1]
query1 = --DROP TABLE admin.generate_udf_ddl;CREATE TABLE IF NOT EXISTS admin.generate_udf_ddl(	schemaname VARCHAR(100) ENCODE lzo	  ,udfname VARCHAR(50) ENCODE lzo	  ,seq BIGINT ENCODE az64	  ,ddl VARCHAR(65535) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE admin.generate_udf_ddl owner to awsuser;--DROP TABLE adventure_admin.dimaccount;CREATE TABLE IF NOT EXISTS adventure_admin.dimaccount(	accountkey INTEGER NOT NULL  ENCODE zstd	  ,parentaccountkey INTEGER ENCODE zstd	  ,accountcodealternatekey INTEGER ENCODE zstd	  ,parentaccountcodealternatekey INTEGER ENCODE zstd	  ,accountdescription VARCHAR(150) ENCODE zstd	  ,accounttype VARCHAR(150) ENCODE zstd	  ,"operator" VARCHAR(150) ENCODE zstd	  ,custommembers VARCHAR(900) ENCODE zstd	  ,valuetype VARCHAR(150) ENCODE zstd	  ,custommemberoptions VARCHAR(600) ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimaccount owner to awsuser;--DROP TABLE adventure_admin.dimcurrency;CREATE TABLE IF NOT EXISTS adventure_admin.dimcurrency(	currencykey INTEGER NOT NULL  ENCODE zstd	  ,currencyalternatekey VARCHAR(9) NOT NULL  ENCODE zstd	  ,currencyname VARCHAR(150) NOT NULL  ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimcurrency owner to awsuser;--DROP TABLE adventure_admin.dimdate;CREATE TABLE IF NOT EXISTS adventure_admin.dimdate(	datekey INTEGER NOT NULL  ENCODE az64	  ,fulldatealternatekey DATE ENCODE zstd	  ,daynumberofweek INTEGER ENCODE zstd	  ,englishdaynameofweek VARCHAR(30) ENCODE zstd	  ,spanishdaynameofweek VARCHAR(30) ENCODE zstd	  ,frenchdaynameofweek VARCHAR(30) ENCODE zstd	  ,daynumberofmonth INTEGER ENCODE zstd	  ,daynumberofyear SMALLINT ENCODE zstd	  ,weeknumberofyear INTEGER ENCODE zstd	  ,englishmonthname VARCHAR(30) ENCODE zstd	  ,spanishmonthname VARCHAR(30) ENCODE zstd	  ,frenchmonthname VARCHAR(30) ENCODE zstd	  ,monthnumberofyear INTEGER ENCODE zstd	  ,calendarquarter SMALLINT ENCODE zstd	  ,calendaryear VARCHAR(12) ENCODE zstd	  ,calendarsemester SMALLINT ENCODE zstd	  ,fiscalquarter SMALLINT ENCODE zstd	  ,fiscalyear VARCHAR(12) ENCODE zstd	  ,fiscalsemester SMALLINT ENCODE zstd)DISTSTYLE KEY DISTKEY (datekey);ALTER TABLE adventure_admin.dimdate owner to awsuser;--DROP TABLE adventure_admin.dimdepartmentgroup;CREATE TABLE IF NOT EXISTS adventure_admin.dimdepartmentgroup(	departmentgroupkey INTEGER NOT NULL  ENCODE zstd	  ,parentdepartmentgroupkey INTEGER ENCODE zstd	  ,departmentgroupname VARCHAR(150) ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimdepartmentgroup owner to awsuser;--DROP TABLE adventure_admin.dimemployee;CREATE TABLE IF NOT EXISTS adventure_admin.dimemployee(	employeephoto VARCHAR(300) ENCODE zstd	  ,employeekey INTEGER NOT NULL  ENCODE zstd	  ,parentemployeekey INTEGER ENCODE zstd	  ,employeenationalidalternatekey VARCHAR(45) ENCODE zstd	  ,parentemployeenationalidaltkey VARCHAR(45) ENCODE zstd	  ,salesterritorykey INTEGER ENCODE zstd	  ,firstname VARCHAR(150) NOT NULL  ENCODE zstd	  ,lastname VARCHAR(150) NOT NULL  ENCODE zstd	  ,middlename VARCHAR(150) ENCODE zstd	  ,namestyle INTEGER NOT NULL  ENCODE zstd	  ,title VARCHAR(150) ENCODE zstd	  ,hiredate DATE ENCODE zstd	  ,birthdate DATE ENCODE zstd	  ,loginid VARCHAR(768) ENCODE zstd	  ,emailaddress VARCHAR(150) ENCODE zstd	  ,phone VARCHAR(75) ENCODE zstd	  ,maritalstatus VARCHAR(3) ENCODE zstd	  ,emergencycontactname VARCHAR(150) ENCODE zstd	  ,emergencycontactphone VARCHAR(75) ENCODE zstd	  ,salariedflag INTEGER ENCODE zstd	  ,gender VARCHAR(3) ENCODE zstd	  ,payfrequency INTEGER ENCODE zstd	  ,baserate REAL ENCODE zstd	  ,vacationhours SMALLINT ENCODE zstd	  ,sickleavehours SMALLINT ENCODE zstd	  ,currentflag INTEGER NOT NULL  ENCODE zstd	  ,salespersonflag INTEGER NOT NULL  ENCODE zstd	  ,departmentname VARCHAR(150) ENCODE zstd	  ,startdate DATE ENCODE zstd	  ,enddate DATE ENCODE zstd	  ,status VARCHAR(150) ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimemployee owner to awsuser;--DROP TABLE adventure_admin.dimgeography;CREATE TABLE IF NOT EXISTS adventure_admin.dimgeography(	geographykey INTEGER NOT NULL  ENCODE zstd	  ,city VARCHAR(90) ENCODE zstd	  ,stateprovincecode VARCHAR(9) ENCODE zstd	  ,stateprovincename VARCHAR(150) ENCODE zstd	  ,countryregioncode VARCHAR(9) ENCODE zstd	  ,englishcountryregionname VARCHAR(150) ENCODE zstd	  ,spanishcountryregionname VARCHAR(150) ENCODE zstd	  ,frenchcountryregionname VARCHAR(150) ENCODE zstd	  ,postalcode VARCHAR(45) ENCODE zstd	  ,salesterritorykey INTEGER ENCODE zstd	  ,ipaddresslocator VARCHAR(45) ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimgeography owner to awsuser;--DROP TABLE adventure_admin.dimorganization;CREATE TABLE IF NOT EXISTS adventure_admin.dimorganization(	organizationkey INTEGER NOT NULL  ENCODE zstd	  ,parentorganizationkey INTEGER ENCODE zstd	  ,percentageofownership VARCHAR(48) ENCODE zstd	  ,organizationname VARCHAR(150) ENCODE zstd	  ,currencykey INTEGER ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimorganization owner to awsuser;--DROP TABLE adventure_admin.dimproduct;CREATE TABLE IF NOT EXISTS adventure_admin.dimproduct(	largephoto VARCHAR(3000) ENCODE zstd	  ,productkey INTEGER ENCODE zstd	  ,productalternatekey VARCHAR(75) ENCODE zstd	  ,productsubcategorykey INTEGER ENCODE zstd	  ,weightunitmeasurecode VARCHAR(9) ENCODE zstd	  ,sizeunitmeasurecode VARCHAR(9) ENCODE zstd	  ,englishproductname VARCHAR(150) ENCODE zstd	  ,spanishproductname VARCHAR(150) ENCODE zstd	  ,frenchproductname VARCHAR(150) ENCODE zstd	  ,standardcost REAL ENCODE zstd	  ,finishedgoodsflag INTEGER ENCODE zstd	  ,color VARCHAR(45) ENCODE zstd	  ,safetystocklevel SMALLINT ENCODE zstd	  ,reorderpoint SMALLINT ENCODE zstd	  ,listprice REAL ENCODE zstd	  ,size VARCHAR(150) ENCODE zstd	  ,sizerange VARCHAR(150) ENCODE zstd	  ,weight REAL ENCODE zstd	  ,daystomanufacture INTEGER ENCODE zstd	  ,productline VARCHAR(6) ENCODE zstd	  ,dealerprice REAL ENCODE zstd	  ,"class" VARCHAR(6) ENCODE zstd	  ,style VARCHAR(6) ENCODE zstd	  ,modelname VARCHAR(150) ENCODE zstd	  ,englishdescription VARCHAR(1200) ENCODE zstd	  ,frenchdescription VARCHAR(1200) ENCODE zstd	  ,chinesedescription VARCHAR(1200) ENCODE zstd	  ,arabicdescription VARCHAR(1200) ENCODE zstd	  ,hebrewdescription VARCHAR(1200) ENCODE zstd	  ,thaidescription VARCHAR(1200) ENCODE zstd	  ,germandescription VARCHAR(1200) ENCODE zstd	  ,japanesedescription VARCHAR(1200) ENCODE zstd	  ,turkishdescription VARCHAR(1200) ENCODE zstd	  ,startdate DATE ENCODE zstd	  ,enddate DATE ENCODE zstd	  ,status VARCHAR(21) ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimproduct owner to awsuser;--DROP TABLE adventure_admin.dimproductcategory;CREATE TABLE IF NOT EXISTS adventure_admin.dimproductcategory(	productcategorykey INTEGER NOT NULL  ENCODE zstd	  ,productcategoryalternatekey INTEGER ENCODE zstd	  ,englishproductcategoryname VARCHAR(150) NOT NULL  ENCODE zstd	  ,spanishproductcategoryname VARCHAR(150) NOT NULL  ENCODE zstd	  ,frenchproductcategoryname VARCHAR(150) NOT NULL  ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimproductcategory owner to awsuser;--DROP TABLE adventure_admin.dimproductsubcategory;CREATE TABLE IF NOT EXISTS adventure_admin.dimproductsubcategory(	productsubcategorykey INTEGER NOT NULL  ENCODE zstd	  ,productsubcategoryalternatekey INTEGER ENCODE zstd	  ,englishproductsubcategoryname VARCHAR(150) NOT NULL  ENCODE zstd	  ,spanishproductsubcategoryname VARCHAR(150) NOT NULL  ENCODE zstd	  ,frenchproductsubcategoryname VARCHAR(150) NOT NULL  ENCODE zstd	  ,productcategorykey INTEGER ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimproductsubcategory owner to awsuser;--DROP TABLE adventure_admin.dimpromotion;CREATE TABLE IF NOT EXISTS adventure_admin.dimpromotion(	promotionkey INTEGER NOT NULL  ENCODE zstd	  ,promotionalternatekey INTEGER ENCODE zstd	  ,englishpromotionname VARCHAR(765) ENCODE zstd	  ,spanishpromotionname VARCHAR(765) ENCODE zstd	  ,frenchpromotionname VARCHAR(765) ENCODE zstd	  ,discountpct DOUBLE PRECISION ENCODE zstd	  ,englishpromotiontype VARCHAR(150) ENCODE zstd	  ,spanishpromotiontype VARCHAR(150) ENCODE zstd	  ,frenchpromotiontype VARCHAR(150) ENCODE zstd	  ,englishpromotioncategory VARCHAR(150) ENCODE zstd	  ,spanishpromotioncategory VARCHAR(150) ENCODE zstd	  ,frenchpromotioncategory VARCHAR(150) ENCODE zstd	  ,startdate DATE ENCODE zstd	  ,enddate DATE ENCODE zstd	  ,minqty INTEGER ENCODE zstd	  ,maxqty INTEGER ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimpromotion owner to awsuser;--DROP TABLE adventure_admin.dimsalesreason;CREATE TABLE IF NOT EXISTS adventure_admin.dimsalesreason(	salesreasonkey INTEGER NOT NULL  ENCODE zstd	  ,salesreasonalternatekey INTEGER NOT NULL  ENCODE zstd	  ,salesreasonname VARCHAR(150) NOT NULL  ENCODE zstd	  ,salesreasonreasontype VARCHAR(150) NOT NULL  ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimsalesreason owner to awsuser;--DROP TABLE adventure_admin.dimsalesterritory;CREATE TABLE IF NOT EXISTS adventure_admin.dimsalesterritory(	salesterritoryimage VARCHAR(3000) ENCODE zstd	  ,salesterritorykey INTEGER NOT NULL  ENCODE zstd	  ,salesterritoryalternatekey INTEGER ENCODE zstd	  ,salesterritoryregion VARCHAR(150) NOT NULL  ENCODE zstd	  ,salesterritorycountry VARCHAR(150) NOT NULL  ENCODE zstd	  ,salesterritorygroup VARCHAR(150) ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimsalesterritory owner to awsuser;--DROP TABLE adventure_admin.dimscenario;CREATE TABLE IF NOT EXISTS adventure_admin.dimscenario(	scenariokey INTEGER NOT NULL  ENCODE zstd	  ,scenarioname VARCHAR(150) ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.dimscenario owner to awsuser;--DROP TABLE adventure_admin.factadditionalinternationalproductdescription;CREATE TABLE IF NOT EXISTS adventure_admin.factadditionalinternationalproductdescription(	productkey INTEGER NOT NULL  ENCODE az64	  ,culturename VARCHAR(150) NOT NULL  ENCODE zstd	  ,productdescription VARCHAR(65535) NOT NULL  ENCODE zstd)DISTSTYLE KEY DISTKEY (productkey);ALTER TABLE adventure_admin.factadditionalinternationalproductdescription owner to awsuser;--DROP TABLE adventure_admin.factcallcenter;CREATE TABLE IF NOT EXISTS adventure_admin.factcallcenter(	factcallcenterid INTEGER NOT NULL  ENCODE zstd	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,wagetype VARCHAR(45) NOT NULL  ENCODE zstd	  ,shift VARCHAR(60) NOT NULL  ENCODE zstd	  ,leveloneoperators SMALLINT NOT NULL  ENCODE zstd	  ,leveltwooperators SMALLINT NOT NULL  ENCODE zstd	  ,totaloperators SMALLINT NOT NULL  ENCODE zstd	  ,calls INTEGER NOT NULL  ENCODE zstd	  ,automaticresponses INTEGER NOT NULL  ENCODE zstd	  ,orders INTEGER NOT NULL  ENCODE zstd	  ,issuesraised SMALLINT NOT NULL  ENCODE zstd	  ,averagetimeperissue SMALLINT NOT NULL  ENCODE zstd	  ,servicegrade DOUBLE PRECISION NOT NULL  ENCODE zstd	  ,callcenterdate DATE ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.factcallcenter owner to awsuser;--DROP TABLE adventure_admin.factcurrencyrate;CREATE TABLE IF NOT EXISTS adventure_admin.factcurrencyrate(	currencykey INTEGER NOT NULL  ENCODE az64	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,averagerate DOUBLE PRECISION NOT NULL  ENCODE zstd	  ,endofdayrate DOUBLE PRECISION NOT NULL  ENCODE zstd	  ,currencyratedate DATE ENCODE zstd)DISTSTYLE KEY DISTKEY (currencykey);ALTER TABLE adventure_admin.factcurrencyrate owner to awsuser;--DROP TABLE adventure_admin.factfinance;CREATE TABLE IF NOT EXISTS adventure_admin.factfinance(	financekey INTEGER NOT NULL  ENCODE az64	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,organizationkey INTEGER NOT NULL  ENCODE zstd	  ,departmentgroupkey INTEGER NOT NULL  ENCODE zstd	  ,scenariokey INTEGER NOT NULL  ENCODE zstd	  ,accountkey INTEGER NOT NULL  ENCODE zstd	  ,amount DOUBLE PRECISION NOT NULL  ENCODE zstd	  ,factfinancedate DATE ENCODE zstd)DISTSTYLE KEY DISTKEY (financekey);ALTER TABLE adventure_admin.factfinance owner to awsuser;--DROP TABLE adventure_admin.factinternetsales;CREATE TABLE IF NOT EXISTS adventure_admin.factinternetsales(	productkey INTEGER NOT NULL  ENCODE az64	  ,orderdatekey INTEGER NOT NULL  ENCODE zstd	  ,duedatekey INTEGER NOT NULL  ENCODE zstd	  ,shipdatekey INTEGER NOT NULL  ENCODE zstd	  ,customerkey INTEGER NOT NULL  ENCODE zstd	  ,promotionkey INTEGER NOT NULL  ENCODE zstd	  ,currencykey INTEGER NOT NULL  ENCODE zstd	  ,salesterritorykey INTEGER NOT NULL  ENCODE zstd	  ,salesorderfloat VARCHAR(60) NOT NULL  ENCODE zstd	  ,salesorderlinefloat SMALLINT NOT NULL  ENCODE zstd	  ,revisionfloat INTEGER NOT NULL  ENCODE zstd	  ,orderquantity SMALLINT NOT NULL  ENCODE zstd	  ,unitprice REAL NOT NULL  ENCODE zstd	  ,extendedamount REAL NOT NULL  ENCODE zstd	  ,unitpricediscountpct REAL NOT NULL  ENCODE zstd	  ,discountamount DOUBLE PRECISION NOT NULL  ENCODE zstd	  ,productstandardcost REAL NOT NULL  ENCODE zstd	  ,totalproductcost REAL NOT NULL  ENCODE zstd	  ,salesamount REAL NOT NULL  ENCODE zstd	  ,taxamt REAL NOT NULL  ENCODE zstd	  ,freight REAL NOT NULL  ENCODE zstd	  ,carriertrackingfloat VARCHAR(75) ENCODE zstd	  ,customerpofloat VARCHAR(75) ENCODE zstd	  ,orderdate DATE ENCODE zstd	  ,duedate DATE ENCODE zstd	  ,shipdate DATE ENCODE zstd)DISTSTYLE KEY DISTKEY (productkey);ALTER TABLE adventure_admin.factinternetsales owner to awsuser;--DROP TABLE adventure_admin.factinternetsalesreason;CREATE TABLE IF NOT EXISTS adventure_admin.factinternetsalesreason(	salesorderfloat VARCHAR(60) NOT NULL  ENCODE lzo	  ,salesorderlinefloat SMALLINT NOT NULL  ENCODE zstd	  ,salesreasonkey INTEGER NOT NULL  ENCODE zstd)DISTSTYLE KEY DISTKEY (salesorderfloat);ALTER TABLE adventure_admin.factinternetsalesreason owner to awsuser;--DROP TABLE adventure_admin.factproductinventory;CREATE TABLE IF NOT EXISTS adventure_admin.factproductinventory(	productkey INTEGER NOT NULL  ENCODE az64	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,movementdate DATE ENCODE zstd	  ,unitcost REAL NOT NULL  ENCODE zstd	  ,unitsin INTEGER NOT NULL  ENCODE zstd	  ,unitsout INTEGER NOT NULL  ENCODE zstd	  ,unitsbalance INTEGER NOT NULL  ENCODE zstd)DISTSTYLE KEY DISTKEY (productkey);ALTER TABLE adventure_admin.factproductinventory owner to awsuser;--DROP TABLE adventure_admin.factresellersales;CREATE TABLE IF NOT EXISTS adventure_admin.factresellersales(	productkey INTEGER NOT NULL  ENCODE az64	  ,orderdatekey INTEGER NOT NULL  ENCODE zstd	  ,duedatekey INTEGER NOT NULL  ENCODE zstd	  ,shipdatekey INTEGER NOT NULL  ENCODE zstd	  ,resellerkey INTEGER NOT NULL  ENCODE zstd	  ,employeekey INTEGER NOT NULL  ENCODE zstd	  ,promotionkey INTEGER NOT NULL  ENCODE zstd	  ,currencykey INTEGER NOT NULL  ENCODE zstd	  ,salesterritorykey INTEGER NOT NULL  ENCODE zstd	  ,salesorderfloat VARCHAR(60) NOT NULL  ENCODE zstd	  ,salesorderlinefloat INTEGER NOT NULL  ENCODE zstd	  ,revisionfloat INTEGER ENCODE zstd	  ,orderquantity SMALLINT ENCODE zstd	  ,unitprice REAL ENCODE zstd	  ,extendedamount REAL ENCODE zstd	  ,unitpricediscountpct DOUBLE PRECISION ENCODE zstd	  ,discountamount DOUBLE PRECISION ENCODE zstd	  ,productstandardcost REAL ENCODE zstd	  ,totalproductcost REAL ENCODE zstd	  ,salesamount REAL ENCODE zstd	  ,taxamt REAL ENCODE zstd	  ,freight REAL ENCODE zstd	  ,carriertrackingfloat VARCHAR(75) ENCODE zstd	  ,customerpofloat VARCHAR(75) ENCODE zstd	  ,orderdate DATE ENCODE zstd	  ,duedate DATE ENCODE zstd	  ,shipdate DATE ENCODE zstd)DISTSTYLE KEY DISTKEY (productkey);ALTER TABLE adventure_admin.factresellersales owner to awsuser;--DROP TABLE adventure_admin.factsalesquota;CREATE TABLE IF NOT EXISTS adventure_admin.factsalesquota(	salesquotakey INTEGER NOT NULL  ENCODE zstd	  ,employeekey INTEGER NOT NULL  ENCODE zstd	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,calendaryear SMALLINT NOT NULL  ENCODE zstd	  ,calendarquarter INTEGER NOT NULL  ENCODE zstd	  ,salesamountquota REAL NOT NULL  ENCODE zstd	  ,factsalesquotadate DATE ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.factsalesquota owner to awsuser;--DROP TABLE adventure_admin.factsurveyresponse;CREATE TABLE IF NOT EXISTS adventure_admin.factsurveyresponse(	surveyresponsekey INTEGER NOT NULL  ENCODE zstd	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,customerkey INTEGER NOT NULL  ENCODE zstd	  ,productcategorykey INTEGER NOT NULL  ENCODE zstd	  ,englishproductcategoryname VARCHAR(150) NOT NULL  ENCODE zstd	  ,productsubcategorykey INTEGER NOT NULL  ENCODE zstd	  ,englishproductsubcategoryname VARCHAR(150) NOT NULL  ENCODE zstd	  ,responsedate DATE ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.factsurveyresponse owner to awsuser;--DROP TABLE adventure_admin.newfactcurrencyrate;CREATE TABLE IF NOT EXISTS adventure_admin.newfactcurrencyrate(	currencyid VARCHAR(9) ENCODE lzo	  ,datekey INTEGER ENCODE zstd	  ,averagerate DOUBLE PRECISION ENCODE zstd	  ,endofdayrate DOUBLE PRECISION ENCODE zstd	  ,currencydate DATE ENCODE zstd)DISTSTYLE KEY DISTKEY (currencyid);ALTER TABLE adventure_admin.newfactcurrencyrate owner to awsuser;--DROP TABLE adventure_admin.prospectivebuyer;CREATE TABLE IF NOT EXISTS adventure_admin.prospectivebuyer(	prospectivebuyerkey INTEGER NOT NULL  ENCODE zstd	  ,prospectalternatekey VARCHAR(45) ENCODE zstd	  ,firstname VARCHAR(150) ENCODE zstd	  ,middlename VARCHAR(150) ENCODE zstd	  ,lastname VARCHAR(150) ENCODE zstd	  ,birthdate DATE ENCODE zstd	  ,maritalstatus VARCHAR(3) ENCODE zstd	  ,gender VARCHAR(3) ENCODE zstd	  ,emailaddress VARCHAR(150) ENCODE zstd	  ,yearlyincome REAL ENCODE zstd	  ,totalchildren INTEGER ENCODE zstd	  ,floatchildrenathome INTEGER ENCODE zstd	  ,education VARCHAR(120) ENCODE zstd	  ,occupation VARCHAR(300) ENCODE zstd	  ,houseownerflag VARCHAR(3) ENCODE zstd	  ,floatcarsowned INTEGER ENCODE zstd	  ,addressline1 VARCHAR(360) ENCODE zstd	  ,addressline2 VARCHAR(360) ENCODE zstd	  ,city VARCHAR(90) ENCODE zstd	  ,stateprovincecode VARCHAR(9) ENCODE zstd	  ,postalcode VARCHAR(45) ENCODE zstd	  ,phone VARCHAR(60) ENCODE zstd	  ,salutation VARCHAR(24) ENCODE zstd	  ,"unknown" INTEGER ENCODE zstd)DISTSTYLE AUTO;ALTER TABLE adventure_admin.prospectivebuyer owner to awsuser;--DROP TABLE adventureworksdw.adventureworksdwbuildversion;CREATE TABLE IF NOT EXISTS adventureworksdw.adventureworksdwbuildversion(	dbversion VARCHAR(100) ENCODE RAW	  ,versiondate TIMESTAMP WITHOUT TIME ZONE ENCODE zstd)DISTSTYLE KEY DISTKEY (dbversion) SORTKEY (	dbversion	);ALTER TABLE adventureworksdw.adventureworksdwbuildversion owner to awsuser;--DROP TABLE adventureworksdw.dimaccount;CREATE TABLE IF NOT EXISTS adventureworksdw.dimaccount(	accountkey INTEGER NOT NULL  ENCODE zstd	  ,parentaccountkey INTEGER ENCODE zstd	  ,accountcodealternatekey INTEGER ENCODE zstd	  ,parentaccountcodealternatekey INTEGER ENCODE zstd	  ,accountdescription VARCHAR(50) NOT NULL  ENCODE zstd	  ,accounttype VARCHAR(50) ENCODE zstd	  ,"operator" VARCHAR(50) ENCODE zstd	  ,custommembers VARCHAR(300) ENCODE zstd	  ,valuetype VARCHAR(50) ENCODE zstd	  ,custommemberoptions VARCHAR(200) ENCODE zstd	  ,PRIMARY KEY (accountkey))DISTSTYLE AUTO DISTKEY (accountkey);ALTER TABLE adventureworksdw.dimaccount owner to awsuser;ALTER TABLE adventureworksdw.dimaccount ADD FOREIGN KEY (parentaccountkey) REFERENCES adventureworksdw.dimaccount(accountkey);--DROP TABLE adventureworksdw.dimcurrency;CREATE TABLE IF NOT EXISTS adventureworksdw.dimcurrency(	currencykey INTEGER NOT NULL  ENCODE zstd	  ,currencyalternatekey CHAR(3) NOT NULL  ENCODE zstd	  ,currencyname VARCHAR(100) NOT NULL  ENCODE zstd	  ,PRIMARY KEY (currencykey))DISTSTYLE AUTO DISTKEY (currencykey);ALTER TABLE adventureworksdw.dimcurrency owner to awsuser;--DROP TABLE adventureworksdw.dimcustomer;CREATE TABLE IF NOT EXISTS adventureworksdw.dimcustomer(	customerkey INTEGER NOT NULL  ENCODE zstd	  ,geographykey INTEGER ENCODE zstd	  ,customeralternatekey VARCHAR(15) NOT NULL  ENCODE zstd	  ,title VARCHAR(16) ENCODE zstd	  ,firstname VARCHAR(100) ENCODE zstd	  ,middlename VARCHAR(100) ENCODE zstd	  ,lastname VARCHAR(100) ENCODE zstd	  ,namestyle SMALLINT ENCODE zstd	  ,birthdate DATE ENCODE zstd	  ,maritalstatus CHAR(1) ENCODE zstd	  ,suffix VARCHAR(20) ENCODE zstd	  ,gender CHAR(1) ENCODE zstd	  ,emailaddress VARCHAR(100) ENCODE zstd	  ,yearlyincome NUMERIC(18 ,4) ENCODE zstd	  ,totalchildren SMALLINT ENCODE zstd	  ,numberchildrenathome SMALLINT ENCODE zstd	  ,englisheducation VARCHAR(40) ENCODE zstd	  ,spanisheducation VARCHAR(40) ENCODE zstd	  ,frencheducation VARCHAR(40) ENCODE zstd	  ,englishoccupation VARCHAR(100) ENCODE zstd	  ,spanishoccupation VARCHAR(100) ENCODE zstd	  ,frenchoccupation VARCHAR(100) ENCODE zstd	  ,houseownerflag CHAR(1) ENCODE zstd	  ,numbercarsowned SMALLINT ENCODE zstd	  ,addressline1 VARCHAR(240) ENCODE zstd	  ,addressline2 VARCHAR(240) ENCODE zstd	  ,phone VARCHAR(20) ENCODE zstd	  ,datefirstpurchase DATE ENCODE zstd	  ,commutedistance VARCHAR(15) ENCODE zstd	  ,PRIMARY KEY (customerkey))DISTSTYLE AUTO DISTKEY (customerkey);ALTER TABLE adventureworksdw.dimcustomer owner to awsuser;ALTER TABLE adventureworksdw.dimcustomer ADD FOREIGN KEY (geographykey) REFERENCES adventureworksdw.dimgeography(geographykey);--DROP TABLE adventureworksdw.dimdate;CREATE TABLE IF NOT EXISTS adventureworksdw.dimdate(	datekey INTEGER NOT NULL  ENCODE zstd	  ,fulldatealternatekey DATE ENCODE zstd	  ,daynumberofweek SMALLINT ENCODE zstd	  ,englishdaynameofweek VARCHAR(10) ENCODE zstd	  ,spanishdaynameofweek VARCHAR(10) ENCODE zstd	  ,frenchdaynameofweek VARCHAR(10) ENCODE zstd	  ,daynumberofmonth SMALLINT ENCODE zstd	  ,daynumberofyear SMALLINT ENCODE zstd	  ,weeknumberofyear SMALLINT ENCODE zstd	  ,englishmonthname VARCHAR(10) ENCODE zstd	  ,spanishmonthname VARCHAR(10) ENCODE zstd	  ,frenchmonthname VARCHAR(10) ENCODE zstd	  ,monthnumberofyear SMALLINT ENCODE zstd	  ,calendarquarter SMALLINT ENCODE zstd	  ,calendaryear CHAR(4) ENCODE zstd	  ,calendarsemester SMALLINT ENCODE zstd	  ,fiscalquarter SMALLINT ENCODE zstd	  ,fiscalyear CHAR(4) ENCODE zstd	  ,fiscalsemester SMALLINT ENCODE zstd	  ,PRIMARY KEY (datekey))DISTSTYLE AUTO DISTKEY (datekey);ALTER TABLE adventureworksdw.dimdate owner to awsuser;--DROP TABLE adventureworksdw.dimdepartmentgroup;CREATE TABLE IF NOT EXISTS adventureworksdw.dimdepartmentgroup(	departmentgroupkey INTEGER NOT NULL  ENCODE zstd	  ,parentdepartmentgroupkey INTEGER ENCODE zstd	  ,departmentgroupname VARCHAR(50) ENCODE zstd	  ,PRIMARY KEY (departmentgroupkey))DISTSTYLE AUTO DISTKEY (departmentgroupkey);ALTER TABLE adventureworksdw.dimdepartmentgroup owner to awsuser;ALTER TABLE adventureworksdw.dimdepartmentgroup ADD FOREIGN KEY (parentdepartmentgroupkey) REFERENCES adventureworksdw.dimdepartmentgroup(departmentgroupkey);--DROP TABLE adventureworksdw.dimemployee;CREATE TABLE IF NOT EXISTS adventureworksdw.dimemployee(	employeekey INTEGER NOT NULL  ENCODE zstd	  ,parentemployeekey INTEGER ENCODE zstd	  ,employeenationalidalternatekey VARCHAR(15) ENCODE zstd	  ,parentemployeenationalidaltkey VARCHAR(15) ENCODE zstd	  ,salesterritorykey INTEGER ENCODE zstd	  ,firstname VARCHAR(100) NOT NULL  ENCODE zstd	  ,lastname VARCHAR(100) NOT NULL  ENCODE zstd	  ,middlename VARCHAR(100) ENCODE zstd	  ,namestyle SMALLINT NOT NULL  ENCODE zstd	  ,title VARCHAR(100) ENCODE zstd	  ,hiredate DATE ENCODE zstd	  ,birthdate DATE ENCODE zstd	  ,loginid VARCHAR(512) ENCODE zstd	  ,emailaddress VARCHAR(100) ENCODE zstd	  ,phone VARCHAR(50) ENCODE zstd	  ,maritalstatus CHAR(1) ENCODE zstd	  ,emergencycontactname VARCHAR(100) ENCODE zstd	  ,emergencycontactphone VARCHAR(25) ENCODE zstd	  ,salariedflag SMALLINT ENCODE zstd	  ,gender CHAR(1) ENCODE zstd	  ,payfrequency SMALLINT ENCODE zstd	  ,baserate NUMERIC(18 ,4) ENCODE zstd	  ,vacationhours SMALLINT ENCODE zstd	  ,sickleavehours SMALLINT ENCODE zstd	  ,currentflag SMALLINT NOT NULL  ENCODE zstd	  ,salespersonflag SMALLINT NOT NULL  ENCODE zstd	  ,departmentname VARCHAR(50) ENCODE zstd	  ,startdate DATE ENCODE zstd	  ,enddate DATE ENCODE zstd	  ,status VARCHAR(100) ENCODE zstd	  ,employeephoto VARCHAR(1300) ENCODE zstd	  ,PRIMARY KEY (employeekey))DISTSTYLE AUTO DISTKEY (employeekey);ALTER TABLE adventureworksdw.dimemployee owner to awsuser;ALTER TABLE adventureworksdw.dimemployee ADD FOREIGN KEY (parentemployeekey) REFERENCES adventureworksdw.dimemployee(employeekey);ALTER TABLE adventureworksdw.dimemployee ADD FOREIGN KEY (salesterritorykey) REFERENCES adventureworksdw.dimsalesterritory(salesterritorykey);--DROP TABLE adventureworksdw.dimgeography;CREATE TABLE IF NOT EXISTS adventureworksdw.dimgeography(	geographykey INTEGER NOT NULL  ENCODE zstd	  ,city VARCHAR(60) ENCODE zstd	  ,stateprovincecode VARCHAR(3) ENCODE zstd	  ,stateprovincename VARCHAR(50) ENCODE zstd	  ,countryregioncode VARCHAR(3) ENCODE zstd	  ,englishcountryregionname VARCHAR(50) ENCODE zstd	  ,spanishcountryregionname VARCHAR(50) ENCODE zstd	  ,frenchcountryregionname VARCHAR(50) ENCODE zstd	  ,postalcode VARCHAR(15) ENCODE zstd	  ,salesterritorykey INTEGER ENCODE zstd	  ,ipaddresslocator VARCHAR(15) ENCODE zstd	  ,PRIMARY KEY (geographykey))DISTSTYLE AUTO DISTKEY (geographykey);ALTER TABLE adventureworksdw.dimgeography owner to awsuser;ALTER TABLE adventureworksdw.dimgeography ADD FOREIGN KEY (salesterritorykey) REFERENCES adventureworksdw.dimsalesterritory(salesterritorykey);--DROP TABLE adventureworksdw.dimorganization;CREATE TABLE IF NOT EXISTS adventureworksdw.dimorganization(	organizationkey INTEGER NOT NULL  ENCODE zstd	  ,parentorganizationkey INTEGER ENCODE zstd	  ,percentageofownership VARCHAR(16) ENCODE zstd	  ,organizationname VARCHAR(50) ENCODE zstd	  ,currencykey INTEGER ENCODE zstd	  ,PRIMARY KEY (organizationkey))DISTSTYLE AUTO DISTKEY (organizationkey);ALTER TABLE adventureworksdw.dimorganization owner to awsuser;ALTER TABLE adventureworksdw.dimorganization ADD FOREIGN KEY (currencykey) REFERENCES adventureworksdw.dimcurrency(currencykey);ALTER TABLE adventureworksdw.dimorganization ADD FOREIGN KEY (parentorganizationkey) REFERENCES adventureworksdw.dimorganization(organizationkey);--DROP TABLE adventureworksdw.dimproduct;CREATE TABLE IF NOT EXISTS adventureworksdw.dimproduct(	productkey INTEGER NOT NULL  ENCODE zstd	  ,productalternatekey VARCHAR(25) ENCODE zstd	  ,productsubcategorykey INTEGER ENCODE zstd	  ,weightunitmeasurecode CHAR(3) ENCODE zstd	  ,sizeunitmeasurecode CHAR(3) ENCODE zstd	  ,englishproductname VARCHAR(50) NOT NULL  ENCODE zstd	  ,spanishproductname VARCHAR(50) NOT NULL  ENCODE zstd	  ,frenchproductname VARCHAR(50) NOT NULL  ENCODE zstd	  ,standardcost NUMERIC(18 ,4) ENCODE zstd	  ,finishedgoodsflag SMALLINT NOT NULL  ENCODE zstd	  ,color VARCHAR(15) NOT NULL  ENCODE zstd	  ,safetystocklevel SMALLINT ENCODE zstd	  ,reorderpoint SMALLINT ENCODE zstd	  ,listprice NUMERIC(18 ,4) ENCODE zstd	  ,size VARCHAR(50) ENCODE zstd	  ,sizerange VARCHAR(50) ENCODE zstd	  ,weight VARCHAR(144) ENCODE zstd	  ,daystomanufacture INTEGER ENCODE zstd	  ,productline VARCHAR(4) ENCODE zstd	  ,dealerprice NUMERIC(18 ,4) ENCODE zstd	  ,"class" VARCHAR(4) ENCODE zstd	  ,style VARCHAR(4) ENCODE zstd	  ,modelname VARCHAR(100) ENCODE zstd	  ,largephoto VARCHAR(1300) ENCODE zstd	  ,englishdescription VARCHAR(400) ENCODE zstd	  ,frenchdescription VARCHAR(400) ENCODE zstd	  ,chinesedescription VARCHAR(800) ENCODE zstd	  ,arabicdescription VARCHAR(800) ENCODE zstd	  ,hebrewdescription VARCHAR(800) ENCODE zstd	  ,thaidescription VARCHAR(800) ENCODE zstd	  ,germandescription VARCHAR(400) ENCODE zstd	  ,japanesedescription VARCHAR(800) ENCODE zstd	  ,turkishdescription VARCHAR(800) ENCODE zstd	  ,startdate DATE ENCODE zstd	  ,enddate DATE ENCODE zstd	  ,status VARCHAR(7) ENCODE zstd	  ,PRIMARY KEY (productkey))DISTSTYLE AUTO;ALTER TABLE adventureworksdw.dimproduct owner to awsuser;ALTER TABLE adventureworksdw.dimproduct ADD FOREIGN KEY (productsubcategorykey) REFERENCES adventureworksdw.dimproductsubcategory(productsubcategorykey);--DROP TABLE adventureworksdw.dimproductcategory;CREATE TABLE IF NOT EXISTS adventureworksdw.dimproductcategory(	productcategorykey INTEGER NOT NULL  ENCODE zstd	  ,productcategoryalternatekey INTEGER ENCODE zstd	  ,englishproductcategoryname VARCHAR(50) NOT NULL  ENCODE zstd	  ,spanishproductcategoryname VARCHAR(50) NOT NULL  ENCODE zstd	  ,frenchproductcategoryname VARCHAR(50) NOT NULL  ENCODE zstd	  ,PRIMARY KEY (productcategorykey))DISTSTYLE AUTO DISTKEY (productcategorykey);ALTER TABLE adventureworksdw.dimproductcategory owner to awsuser;--DROP TABLE adventureworksdw.dimproductsubcategory;CREATE TABLE IF NOT EXISTS adventureworksdw.dimproductsubcategory(	productsubcategorykey INTEGER NOT NULL  ENCODE zstd	  ,productsubcategoryalternatekey INTEGER ENCODE zstd	  ,englishproductsubcategoryname VARCHAR(50) NOT NULL  ENCODE zstd	  ,spanishproductsubcategoryname VARCHAR(50) NOT NULL  ENCODE zstd	  ,frenchproductsubcategoryname VARCHAR(50) NOT NULL  ENCODE zstd	  ,productcategorykey INTEGER ENCODE zstd	  ,PRIMARY KEY (productsubcategorykey))DISTSTYLE AUTO DISTKEY (productsubcategorykey);ALTER TABLE adventureworksdw.dimproductsubcategory owner to awsuser;ALTER TABLE adventureworksdw.dimproductsubcategory ADD FOREIGN KEY (productcategorykey) REFERENCES adventureworksdw.dimproductcategory(productcategorykey);--DROP TABLE adventureworksdw.dimpromotion;CREATE TABLE IF NOT EXISTS adventureworksdw.dimpromotion(	promotionkey INTEGER NOT NULL  ENCODE zstd	  ,promotionalternatekey INTEGER ENCODE zstd	  ,englishpromotionname VARCHAR(255) ENCODE zstd	  ,spanishpromotionname VARCHAR(510) ENCODE zstd	  ,frenchpromotionname VARCHAR(510) ENCODE zstd	  ,discountpct VARCHAR(144) ENCODE zstd	  ,englishpromotiontype VARCHAR(50) ENCODE zstd	  ,spanishpromotiontype VARCHAR(100) ENCODE zstd	  ,frenchpromotiontype VARCHAR(100) ENCODE zstd	  ,englishpromotioncategory VARCHAR(50) ENCODE zstd	  ,spanishpromotioncategory VARCHAR(100) ENCODE zstd	  ,frenchpromotioncategory VARCHAR(100) ENCODE zstd	  ,startdate DATE NOT NULL  ENCODE zstd	  ,enddate DATE ENCODE zstd	  ,minqty INTEGER ENCODE zstd	  ,maxqty INTEGER ENCODE zstd	  ,PRIMARY KEY (promotionkey))DISTSTYLE AUTO DISTKEY (promotionkey);ALTER TABLE adventureworksdw.dimpromotion owner to awsuser;--DROP TABLE adventureworksdw.dimreseller;CREATE TABLE IF NOT EXISTS adventureworksdw.dimreseller(	resellerkey INTEGER NOT NULL  ENCODE zstd	  ,geographykey INTEGER ENCODE zstd	  ,reselleralternatekey VARCHAR(15) ENCODE zstd	  ,phone VARCHAR(25) ENCODE zstd	  ,businesstype VARCHAR(20) NOT NULL  ENCODE zstd	  ,resellername VARCHAR(100) NOT NULL  ENCODE zstd	  ,numberemployees INTEGER ENCODE zstd	  ,orderfrequency VARCHAR(2) ENCODE zstd	  ,ordermonth SMALLINT ENCODE zstd	  ,firstorderyear INTEGER ENCODE zstd	  ,lastorderyear INTEGER ENCODE zstd	  ,productline VARCHAR(50) ENCODE zstd	  ,addressline1 VARCHAR(120) ENCODE zstd	  ,addressline2 VARCHAR(120) ENCODE zstd	  ,annualsales NUMERIC(18 ,4) ENCODE zstd	  ,bankname VARCHAR(100) ENCODE zstd	  ,minpaymenttype SMALLINT ENCODE zstd	  ,minpaymentamount NUMERIC(18 ,4) ENCODE zstd	  ,annualrevenue NUMERIC(18 ,4) ENCODE zstd	  ,yearopened INTEGER ENCODE zstd	  ,PRIMARY KEY (resellerkey))DISTSTYLE AUTO DISTKEY (resellerkey);ALTER TABLE adventureworksdw.dimreseller owner to awsuser;ALTER TABLE adventureworksdw.dimreseller ADD FOREIGN KEY (geographykey) REFERENCES adventureworksdw.dimgeography(geographykey);--DROP TABLE adventureworksdw.dimsalesreason;CREATE TABLE IF NOT EXISTS adventureworksdw.dimsalesreason(	salesreasonkey INTEGER NOT NULL  ENCODE zstd	  ,salesreasonalternatekey INTEGER NOT NULL  ENCODE zstd	  ,salesreasonname VARCHAR(50) NOT NULL  ENCODE zstd	  ,salesreasonreasontype VARCHAR(50) NOT NULL  ENCODE zstd	  ,PRIMARY KEY (salesreasonkey))DISTSTYLE AUTO DISTKEY (salesreasonkey);ALTER TABLE adventureworksdw.dimsalesreason owner to awsuser;--DROP TABLE adventureworksdw.dimsalesterritory;CREATE TABLE IF NOT EXISTS adventureworksdw.dimsalesterritory(	salesterritorykey INTEGER NOT NULL  ENCODE zstd	  ,salesterritoryalternatekey INTEGER ENCODE zstd	  ,salesterritoryregion VARCHAR(50) NOT NULL  ENCODE zstd	  ,salesterritorycountry VARCHAR(50) NOT NULL  ENCODE zstd	  ,salesterritorygroup VARCHAR(50) ENCODE zstd	  ,salesterritoryimage VARCHAR(1300) ENCODE zstd	  ,PRIMARY KEY (salesterritorykey))DISTSTYLE AUTO DISTKEY (salesterritorykey);ALTER TABLE adventureworksdw.dimsalesterritory owner to awsuser;--DROP TABLE adventureworksdw.dimscenario;CREATE TABLE IF NOT EXISTS adventureworksdw.dimscenario(	scenariokey INTEGER NOT NULL  ENCODE zstd	  ,scenarioname VARCHAR(50) ENCODE zstd	  ,PRIMARY KEY (scenariokey))DISTSTYLE AUTO DISTKEY (scenariokey);ALTER TABLE adventureworksdw.dimscenario owner to awsuser;--DROP TABLE adventureworksdw.factadditionalinternationalproductdescription;CREATE TABLE IF NOT EXISTS adventureworksdw.factadditionalinternationalproductdescription(	productkey INTEGER NOT NULL  ENCODE RAW	  ,culturename VARCHAR(50) NOT NULL  ENCODE zstd	  ,productdescription VARCHAR(64000) NOT NULL  ENCODE zstd)DISTSTYLE KEY DISTKEY (productkey) SORTKEY (	productkey	);ALTER TABLE adventureworksdw.factadditionalinternationalproductdescription owner to awsuser;--DROP TABLE adventureworksdw.factcallcenter;CREATE TABLE IF NOT EXISTS adventureworksdw.factcallcenter(	factcallcenterid INTEGER NOT NULL  ENCODE zstd	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,wagetype VARCHAR(30) NOT NULL  ENCODE zstd	  ,shift VARCHAR(40) NOT NULL  ENCODE zstd	  ,leveloneoperators SMALLINT NOT NULL  ENCODE zstd	  ,leveltwooperators SMALLINT NOT NULL  ENCODE zstd	  ,totaloperators SMALLINT NOT NULL  ENCODE zstd	  ,calls INTEGER NOT NULL  ENCODE zstd	  ,automaticresponses INTEGER NOT NULL  ENCODE zstd	  ,orders INTEGER NOT NULL  ENCODE zstd	  ,issuesraised SMALLINT NOT NULL  ENCODE zstd	  ,averagetimeperissue SMALLINT NOT NULL  ENCODE zstd	  ,servicegrade VARCHAR(144) ENCODE zstd	  ,date DATE ENCODE zstd	  ,PRIMARY KEY (factcallcenterid))DISTSTYLE AUTO DISTKEY (factcallcenterid);ALTER TABLE adventureworksdw.factcallcenter owner to awsuser;ALTER TABLE adventureworksdw.factcallcenter ADD FOREIGN KEY (datekey) REFERENCES adventureworksdw.dimdate(datekey);--DROP TABLE adventureworksdw.factcurrencyrate;CREATE TABLE IF NOT EXISTS adventureworksdw.factcurrencyrate(	currencykey INTEGER NOT NULL  ENCODE zstd	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,averagerate VARCHAR(144) ENCODE zstd	  ,endofdayrate VARCHAR(144) ENCODE zstd	  ,date DATE ENCODE zstd	  ,PRIMARY KEY (currencykey , datekey))DISTSTYLE AUTO;ALTER TABLE adventureworksdw.factcurrencyrate owner to awsuser;ALTER TABLE adventureworksdw.factcurrencyrate ADD FOREIGN KEY (currencykey) REFERENCES adventureworksdw.dimcurrency(currencykey);ALTER TABLE adventureworksdw.factcurrencyrate ADD FOREIGN KEY (datekey) REFERENCES adventureworksdw.dimdate(datekey);--DROP TABLE adventureworksdw.factfinance;CREATE TABLE IF NOT EXISTS adventureworksdw.factfinance(	financekey INTEGER NOT NULL  ENCODE zstd	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,organizationkey INTEGER NOT NULL  ENCODE zstd	  ,departmentgroupkey INTEGER NOT NULL  ENCODE zstd	  ,scenariokey INTEGER NOT NULL  ENCODE zstd	  ,accountkey INTEGER NOT NULL  ENCODE zstd	  ,amount VARCHAR(144) ENCODE zstd	  ,date DATE ENCODE zstd	  ,PRIMARY KEY (financekey))DISTSTYLE AUTO DISTKEY (financekey);ALTER TABLE adventureworksdw.factfinance owner to awsuser;ALTER TABLE adventureworksdw.factfinance ADD FOREIGN KEY (accountkey) REFERENCES adventureworksdw.dimaccount(accountkey);ALTER TABLE adventureworksdw.factfinance ADD FOREIGN KEY (datekey) REFERENCES adventureworksdw.dimdate(datekey);ALTER TABLE adventureworksdw.factfinance ADD FOREIGN KEY (departmentgroupkey) REFERENCES adventureworksdw.dimdepartmentgroup(departmentgroupkey);ALTER TABLE adventureworksdw.factfinance ADD FOREIGN KEY (organizationkey) REFERENCES adventureworksdw.dimorganization(organizationkey);ALTER TABLE adventureworksdw.factfinance ADD FOREIGN KEY (scenariokey) REFERENCES adventureworksdw.dimscenario(scenariokey);--DROP TABLE adventureworksdw.factinternetsales;CREATE TABLE IF NOT EXISTS adventureworksdw.factinternetsales(	productkey INTEGER NOT NULL  ENCODE zstd	  ,orderdatekey INTEGER NOT NULL  ENCODE zstd	  ,duedatekey INTEGER NOT NULL  ENCODE zstd	  ,shipdatekey INTEGER NOT NULL  ENCODE zstd	  ,customerkey INTEGER NOT NULL  ENCODE zstd	  ,promotionkey INTEGER NOT NULL  ENCODE zstd	  ,currencykey INTEGER NOT NULL  ENCODE zstd	  ,salesterritorykey INTEGER NOT NULL  ENCODE zstd	  ,salesordernumber VARCHAR(20) NOT NULL  ENCODE RAW	  ,salesorderlinenumber SMALLINT NOT NULL  ENCODE zstd	  ,revisionnumber SMALLINT NOT NULL  ENCODE zstd	  ,orderquantity SMALLINT NOT NULL  ENCODE zstd	  ,unitprice NUMERIC(18 ,4) NOT NULL  ENCODE zstd	  ,extendedamount NUMERIC(18 ,4) NOT NULL  ENCODE zstd	  ,unitpricediscountpct VARCHAR(144) ENCODE zstd	  ,discountamount VARCHAR(144) ENCODE zstd	  ,productstandardcost NUMERIC(18 ,4) NOT NULL  ENCODE zstd	  ,totalproductcost NUMERIC(18 ,4) NOT NULL  ENCODE zstd	  ,salesamount NUMERIC(18 ,4) NOT NULL  ENCODE zstd	  ,taxamt NUMERIC(18 ,4) NOT NULL  ENCODE zstd	  ,freight NUMERIC(18 ,4) NOT NULL  ENCODE zstd	  ,carriertrackingnumber VARCHAR(25) ENCODE zstd	  ,customerponumber VARCHAR(25) ENCODE zstd	  ,orderdate DATE ENCODE zstd	  ,duedate DATE ENCODE zstd	  ,shipdate DATE ENCODE zstd)DISTSTYLE KEY DISTKEY (salesordernumber) SORTKEY (	salesordernumber	);ALTER TABLE adventureworksdw.factinternetsales owner to awsuser;ALTER TABLE adventureworksdw.factinternetsales ADD FOREIGN KEY (currencykey) REFERENCES adventureworksdw.dimcurrency(currencykey);ALTER TABLE adventureworksdw.factinternetsales ADD FOREIGN KEY (customerkey) REFERENCES adventureworksdw.dimcustomer(customerkey);ALTER TABLE adventureworksdw.factinternetsales ADD FOREIGN KEY (orderdatekey) REFERENCES adventureworksdw.dimdate(datekey);ALTER TABLE adventureworksdw.factinternetsales ADD FOREIGN KEY (duedatekey) REFERENCES adventureworksdw.dimdate(datekey);ALTER TABLE adventureworksdw.factinternetsales ADD FOREIGN KEY (shipdatekey) REFERENCES adventureworksdw.dimdate(datekey);ALTER TABLE adventureworksdw.factinternetsales ADD FOREIGN KEY (productkey) REFERENCES adventureworksdw.dimproduct(productkey);ALTER TABLE adventureworksdw.factinternetsales ADD FOREIGN KEY (promotionkey) REFERENCES adventureworksdw.dimpromotion(promotionkey);ALTER TABLE adventureworksdw.factinternetsales ADD FOREIGN KEY (salesterritorykey) REFERENCES adventureworksdw.dimsalesterritory(salesterritorykey);--DROP TABLE adventureworksdw.factinternetsalesreason;CREATE TABLE IF NOT EXISTS adventureworksdw.factinternetsalesreason(	salesordernumber VARCHAR(20) NOT NULL  ENCODE RAW	  ,salesorderlinenumber SMALLINT NOT NULL  ENCODE zstd	  ,salesreasonkey INTEGER NOT NULL  ENCODE zstd)DISTSTYLE KEY DISTKEY (salesordernumber) SORTKEY (	salesordernumber	);ALTER TABLE adventureworksdw.factinternetsalesreason owner to awsuser;ALTER TABLE adventureworksdw.factinternetsalesreason ADD FOREIGN KEY (salesreasonkey) REFERENCES adventureworksdw.dimsalesreason(salesreasonkey);--DROP TABLE adventureworksdw.factproductinventory;CREATE TABLE IF NOT EXISTS adventureworksdw.factproductinventory(	productkey INTEGER NOT NULL  ENCODE zstd	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,movementdate DATE NOT NULL  ENCODE zstd	  ,unitcost NUMERIC(18 ,4) NOT NULL  ENCODE zstd	  ,unitsin INTEGER NOT NULL  ENCODE zstd	  ,unitsout INTEGER NOT NULL  ENCODE zstd	  ,unitsbalance INTEGER NOT NULL  ENCODE zstd	  ,PRIMARY KEY (productkey , datekey))DISTSTYLE AUTO;ALTER TABLE adventureworksdw.factproductinventory owner to awsuser;ALTER TABLE adventureworksdw.factproductinventory ADD FOREIGN KEY (datekey) REFERENCES adventureworksdw.dimdate(datekey);ALTER TABLE adventureworksdw.factproductinventory ADD FOREIGN KEY (productkey) REFERENCES adventureworksdw.dimproduct(productkey);--DROP TABLE adventureworksdw.factresellersales;CREATE TABLE IF NOT EXISTS adventureworksdw.factresellersales(	productkey INTEGER NOT NULL  ENCODE zstd	  ,orderdatekey INTEGER NOT NULL  ENCODE zstd	  ,duedatekey INTEGER NOT NULL  ENCODE zstd	  ,shipdatekey INTEGER NOT NULL  ENCODE zstd	  ,resellerkey INTEGER NOT NULL  ENCODE zstd	  ,employeekey INTEGER NOT NULL  ENCODE zstd	  ,promotionkey INTEGER NOT NULL  ENCODE zstd	  ,currencykey INTEGER NOT NULL  ENCODE zstd	  ,salesterritorykey INTEGER NOT NULL  ENCODE zstd	  ,salesordernumber VARCHAR(20) NOT NULL  ENCODE RAW	  ,salesorderlinenumber SMALLINT NOT NULL  ENCODE zstd	  ,revisionnumber SMALLINT ENCODE zstd	  ,orderquantity SMALLINT ENCODE zstd	  ,unitprice NUMERIC(18 ,4) ENCODE zstd	  ,extendedamount NUMERIC(18 ,4) ENCODE zstd	  ,unitpricediscountpct VARCHAR(144) ENCODE zstd	  ,discountamount VARCHAR(144) ENCODE zstd	  ,productstandardcost NUMERIC(18 ,4) ENCODE zstd	  ,totalproductcost NUMERIC(18 ,4) ENCODE zstd	  ,salesamount NUMERIC(18 ,4) ENCODE zstd	  ,taxamt NUMERIC(18 ,4) ENCODE zstd	  ,freight NUMERIC(18 ,4) ENCODE zstd	  ,carriertrackingnumber VARCHAR(25) ENCODE zstd	  ,customerponumber VARCHAR(25) ENCODE zstd	  ,orderdate DATE ENCODE zstd	  ,duedate DATE ENCODE zstd	  ,shipdate DATE ENCODE zstd)DISTSTYLE KEY DISTKEY (salesordernumber) SORTKEY (	salesordernumber	);ALTER TABLE adventureworksdw.factresellersales owner to awsuser;ALTER TABLE adventureworksdw.factresellersales ADD FOREIGN KEY (currencykey) REFERENCES adventureworksdw.dimcurrency(currencykey);ALTER TABLE adventureworksdw.factresellersales ADD FOREIGN KEY (orderdatekey) REFERENCES adventureworksdw.dimdate(datekey);ALTER TABLE adventureworksdw.factresellersales ADD FOREIGN KEY (duedatekey) REFERENCES adventureworksdw.dimdate(datekey);ALTER TABLE adventureworksdw.factresellersales ADD FOREIGN KEY (shipdatekey) REFERENCES adventureworksdw.dimdate(datekey);ALTER TABLE adventureworksdw.factresellersales ADD FOREIGN KEY (employeekey) REFERENCES adventureworksdw.dimemployee(employeekey);ALTER TABLE adventureworksdw.factresellersales ADD FOREIGN KEY (productkey) REFERENCES adventureworksdw.dimproduct(productkey);ALTER TABLE adventureworksdw.factresellersales ADD FOREIGN KEY (promotionkey) REFERENCES adventureworksdw.dimpromotion(promotionkey);ALTER TABLE adventureworksdw.factresellersales ADD FOREIGN KEY (resellerkey) REFERENCES adventureworksdw.dimreseller(resellerkey);ALTER TABLE adventureworksdw.factresellersales ADD FOREIGN KEY (salesterritorykey) REFERENCES adventureworksdw.dimsalesterritory(salesterritorykey);--DROP TABLE adventureworksdw.factsalesquota;CREATE TABLE IF NOT EXISTS adventureworksdw.factsalesquota(	salesquotakey INTEGER NOT NULL  ENCODE zstd	  ,employeekey INTEGER NOT NULL  ENCODE zstd	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,calendaryear SMALLINT NOT NULL  ENCODE zstd	  ,calendarquarter SMALLINT NOT NULL  ENCODE zstd	  ,salesamountquota NUMERIC(18 ,4) NOT NULL  ENCODE zstd	  ,date DATE ENCODE zstd	  ,PRIMARY KEY (salesquotakey))DISTSTYLE AUTO DISTKEY (salesquotakey);ALTER TABLE adventureworksdw.factsalesquota owner to awsuser;ALTER TABLE adventureworksdw.factsalesquota ADD FOREIGN KEY (datekey) REFERENCES adventureworksdw.dimdate(datekey);ALTER TABLE adventureworksdw.factsalesquota ADD FOREIGN KEY (employeekey) REFERENCES adventureworksdw.dimemployee(employeekey);--DROP TABLE adventureworksdw.factsurveyresponse;CREATE TABLE IF NOT EXISTS adventureworksdw.factsurveyresponse(	surveyresponsekey INTEGER NOT NULL  ENCODE zstd	  ,datekey INTEGER NOT NULL  ENCODE zstd	  ,customerkey INTEGER NOT NULL  ENCODE zstd	  ,productcategorykey INTEGER NOT NULL  ENCODE zstd	  ,englishproductcategoryname VARCHAR(50) NOT NULL  ENCODE zstd	  ,productsubcategorykey INTEGER NOT NULL  ENCODE zstd	  ,englishproductsubcategoryname VARCHAR(50) NOT NULL  ENCODE zstd	  ,date DATE ENCODE zstd	  ,PRIMARY KEY (surveyresponsekey))DISTSTYLE AUTO DISTKEY (surveyresponsekey);ALTER TABLE adventureworksdw.factsurveyresponse owner to awsuser;ALTER TABLE adventureworksdw.factsurveyresponse ADD FOREIGN KEY (customerkey) REFERENCES adventureworksdw.dimcustomer(customerkey);ALTER TABLE adventureworksdw.factsurveyresponse ADD FOREIGN KEY (datekey) REFERENCES adventureworksdw.dimdate(datekey);--DROP TABLE adventureworksdw.newfactcurrencyrate;CREATE TABLE IF NOT EXISTS adventureworksdw.newfactcurrencyrate(	averagerate VARCHAR(144) ENCODE zstd	  ,currencyid VARCHAR(6) ENCODE RAW	  ,currencydate DATE ENCODE RAW	  ,endofdayrate VARCHAR(144) ENCODE zstd	  ,currencykey INTEGER ENCODE zstd	  ,datekey INTEGER ENCODE zstd)DISTSTYLE AUTO SORTKEY (	currencyid	  , currencydate	);ALTER TABLE adventureworksdw.newfactcurrencyrate owner to awsuser;--DROP TABLE adventureworksdw.prospectivebuyer;CREATE TABLE IF NOT EXISTS adventureworksdw.prospectivebuyer(	prospectivebuyerkey INTEGER NOT NULL  ENCODE zstd	  ,prospectalternatekey VARCHAR(15) ENCODE zstd	  ,firstname VARCHAR(100) ENCODE zstd	  ,middlename VARCHAR(100) ENCODE zstd	  ,lastname VARCHAR(100) ENCODE zstd	  ,birthdate DATE ENCODE zstd	  ,maritalstatus CHAR(1) ENCODE zstd	  ,gender CHAR(1) ENCODE zstd	  ,emailaddress VARCHAR(100) ENCODE zstd	  ,yearlyincome NUMERIC(18 ,4) ENCODE zstd	  ,totalchildren SMALLINT ENCODE zstd	  ,numberchildrenathome SMALLINT ENCODE zstd	  ,education VARCHAR(40) ENCODE zstd	  ,occupation VARCHAR(100) ENCODE zstd	  ,houseownerflag CHAR(1) ENCODE zstd	  ,numbercarsowned SMALLINT ENCODE zstd	  ,addressline1 VARCHAR(240) ENCODE zstd	  ,addressline2 VARCHAR(240) ENCODE zstd	  ,city VARCHAR(60) ENCODE zstd	  ,stateprovincecode VARCHAR(3) ENCODE zstd	  ,postalcode VARCHAR(15) ENCODE zstd	  ,phone VARCHAR(20) ENCODE zstd	  ,salutation VARCHAR(16) ENCODE zstd	  ,"unknown" INTEGER ENCODE zstd	  ,PRIMARY KEY (prospectivebuyerkey))DISTSTYLE AUTO DISTKEY (prospectivebuyerkey);ALTER TABLE adventureworksdw.prospectivebuyer owner to awsuser;--DROP TABLE airline.l_airline_id;CREATE TABLE IF NOT EXISTS airline.l_airline_id(	code INTEGER ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_airline_id owner to awsuser;--DROP TABLE airline.l_airport_id;CREATE TABLE IF NOT EXISTS airline.l_airport_id(	code INTEGER ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_airport_id owner to awsuser;--DROP TABLE airline.l_airport_seq_id;CREATE TABLE IF NOT EXISTS airline.l_airport_seq_id(	code INTEGER ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_airport_seq_id owner to awsuser;--DROP TABLE airline.l_cancellation;CREATE TABLE IF NOT EXISTS airline.l_cancellation(	code CHAR(1) ENCODE lzo	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_cancellation owner to awsuser;--DROP TABLE airline.l_city_market_id;CREATE TABLE IF NOT EXISTS airline.l_city_market_id(	code INTEGER ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_city_market_id owner to awsuser;--DROP TABLE airline.l_deparrblk;CREATE TABLE IF NOT EXISTS airline.l_deparrblk(	code CHAR(9) ENCODE lzo	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_deparrblk owner to awsuser;--DROP TABLE airline.l_distance_group_250;CREATE TABLE IF NOT EXISTS airline.l_distance_group_250(	code INTEGER NOT NULL  ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_distance_group_250 owner to awsuser;--DROP TABLE airline.l_diversions;CREATE TABLE IF NOT EXISTS airline.l_diversions(	code INTEGER NOT NULL  ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_diversions owner to awsuser;--DROP TABLE airline.l_months;CREATE TABLE IF NOT EXISTS airline.l_months(	code INTEGER NOT NULL  ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_months owner to awsuser;--DROP TABLE airline.l_ontime_delay_groups;CREATE TABLE IF NOT EXISTS airline.l_ontime_delay_groups(	code INTEGER NOT NULL  ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_ontime_delay_groups owner to awsuser;--DROP TABLE airline.l_quarters;CREATE TABLE IF NOT EXISTS airline.l_quarters(	code INTEGER NOT NULL  ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_quarters owner to awsuser;--DROP TABLE airline.l_state_abr_aviation;CREATE TABLE IF NOT EXISTS airline.l_state_abr_aviation(	code CHAR(2) NOT NULL  ENCODE lzo	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_state_abr_aviation owner to awsuser;--DROP TABLE airline.l_state_fips;CREATE TABLE IF NOT EXISTS airline.l_state_fips(	code INTEGER NOT NULL  ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_state_fips owner to awsuser;--DROP TABLE airline.l_unique_carriers;CREATE TABLE IF NOT EXISTS airline.l_unique_carriers(	code VARCHAR(255) NOT NULL  ENCODE lzo	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_unique_carriers owner to awsuser;--DROP TABLE airline.l_weekdays;CREATE TABLE IF NOT EXISTS airline.l_weekdays(	code INTEGER NOT NULL  ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_weekdays owner to awsuser;--DROP TABLE airline.l_world_area_codes;CREATE TABLE IF NOT EXISTS airline.l_world_area_codes(	code INTEGER NOT NULL  ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_world_area_codes owner to awsuser;--DROP TABLE airline.l_yesno_resp;CREATE TABLE IF NOT EXISTS airline.l_yesno_resp(	code INTEGER NOT NULL  ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE airline.l_yesno_resp owner to awsuser;--DROP TABLE airline.mv_tbl__cancelled_flights__0;CREATE TABLE IF NOT EXISTS airline.mv_tbl__cancelled_flights__0(	grvar_1 INTEGER ENCODE az64	  ,grvar_2 INTEGER ENCODE az64	  ,grvar_3 VARCHAR(255) ENCODE lzo	  ,grvar_4 INTEGER ENCODE az64	  ,grvar_5 VARCHAR(46) ENCODE lzo	  ,grvar_6 CHAR(1) ENCODE lzo	  ,grvar_7 VARCHAR(255) ENCODE lzo	  ,aggvar_1 BIGINT ENCODE az64	  ,aggvar_2 NUMERIC(38 ,2) ENCODE az64	  ,num_rec BIGINT ENCODE az64)DISTSTYLE EVEN;ALTER TABLE airline.mv_tbl__cancelled_flights__0 owner to rdsdb;--DROP TABLE airline.on_time_on_time_performance_2016;CREATE TABLE IF NOT EXISTS airline.on_time_on_time_performance_2016(	"year" INTEGER ENCODE az64	  ,quarter INTEGER ENCODE az64	  ,"month" INTEGER ENCODE az64	  ,dayofmonth INTEGER ENCODE az64	  ,dayofweek INTEGER ENCODE az64	  ,flightdate DATE ENCODE az64	  ,uniquecarrier VARCHAR(255)  DEFAULT 'NULL'::character varying ENCODE lzo	  ,airlineid INTEGER NOT NULL  ENCODE az64	  ,carrier CHAR(2) ENCODE lzo	  ,tailnum VARCHAR(6) ENCODE lzo	  ,flightnum INTEGER ENCODE az64	  ,originairportid INTEGER ENCODE az64	  ,originairportseqid INTEGER ENCODE az64	  ,origincitymarketid INTEGER ENCODE az64	  ,origin CHAR(3) ENCODE lzo	  ,origincityname VARCHAR(34) ENCODE lzo	  ,originstate CHAR(2) ENCODE lzo	  ,originstatefips INTEGER ENCODE az64	  ,originstatename VARCHAR(46) ENCODE lzo	  ,originwac INTEGER ENCODE az64	  ,destairportid INTEGER ENCODE az64	  ,destairportseqid INTEGER ENCODE az64	  ,destcitymarketid INTEGER ENCODE az64	  ,dest CHAR(3) ENCODE lzo	  ,destcityname VARCHAR(34) ENCODE lzo	  ,deststate CHAR(2) ENCODE lzo	  ,deststatefips INTEGER ENCODE az64	  ,deststatename VARCHAR(46) ENCODE lzo	  ,destwac INTEGER ENCODE az64	  ,crsdeptime INTEGER ENCODE az64	  ,deptime INTEGER ENCODE az64	  ,depdelay NUMERIC(30 ,2) ENCODE az64	  ,depdelayminutes DOUBLE PRECISION ENCODE RAW	  ,depdel15 INTEGER ENCODE az64	  ,departuredelaygroups INTEGER ENCODE az64	  ,deptimeblk CHAR(9) ENCODE lzo	  ,taxiout DOUBLE PRECISION ENCODE RAW	  ,wheelsoff INTEGER ENCODE az64	  ,wheelson INTEGER ENCODE az64	  ,taxiin DOUBLE PRECISION ENCODE RAW	  ,crsarrtime INTEGER ENCODE az64	  ,arrtime INTEGER ENCODE az64	  ,arrdelay NUMERIC(30 ,2) ENCODE az64	  ,arrdelayminutes DOUBLE PRECISION ENCODE RAW	  ,arrdel15 INTEGER ENCODE az64	  ,arrivaldelaygroups INTEGER ENCODE az64	  ,arrtimeblk CHAR(9) ENCODE lzo	  ,cancelled INTEGER ENCODE az64	  ,cancellationcode CHAR(1) ENCODE lzo	  ,diverted INTEGER ENCODE az64	  ,crselapsedtime DOUBLE PRECISION ENCODE RAW	  ,actualelapsedtime DOUBLE PRECISION ENCODE RAW	  ,airtime DOUBLE PRECISION ENCODE RAW	  ,flights DOUBLE PRECISION ENCODE RAW	  ,distance DOUBLE PRECISION ENCODE RAW	  ,distancegroup INTEGER ENCODE az64	  ,carrierdelay NUMERIC(30 ,2) ENCODE az64	  ,weatherdelay NUMERIC(30 ,2) ENCODE az64	  ,nasdelay NUMERIC(30 ,2) ENCODE az64	  ,securitydelay NUMERIC(30 ,2) ENCODE az64	  ,lateaircraftdelay NUMERIC(30 ,2) ENCODE az64	  ,firstdeptime NUMERIC(30 ,2) ENCODE az64	  ,totaladdgtime NUMERIC(30 ,2) ENCODE az64	  ,longestaddgtime NUMERIC(30 ,2) ENCODE az64	  ,divairportlandings INTEGER ENCODE az64	  ,divreacheddest NUMERIC(30 ,2) ENCODE az64	  ,divactualelapsedtime NUMERIC(30 ,2) ENCODE az64	  ,divarrdelay NUMERIC(30 ,2) ENCODE az64	  ,divdistance NUMERIC(30 ,2) ENCODE az64	  ,div1airport CHAR(3) ENCODE lzo	  ,div1airportid INTEGER ENCODE az64	  ,div1airportseqid INTEGER ENCODE az64	  ,div1wheelson NUMERIC(30 ,2) ENCODE az64	  ,div1totalgtime NUMERIC(30 ,2) ENCODE az64	  ,div1longestgtime NUMERIC(30 ,2) ENCODE az64	  ,div1wheelsoff NUMERIC(30 ,2) ENCODE az64	  ,div1tailnum VARCHAR(6) ENCODE lzo	  ,div2airport CHAR(3) ENCODE lzo	  ,div2airportid INTEGER ENCODE az64	  ,div2airportseqid INTEGER ENCODE az64	  ,div2wheelson NUMERIC(30 ,2) ENCODE az64	  ,div2totalgtime NUMERIC(30 ,2) ENCODE az64	  ,div2longestgtime NUMERIC(30 ,2) ENCODE az64)DISTSTYLE AUTO;ALTER TABLE airline.on_time_on_time_performance_2016 owner to awsuser;--DROP TABLE appdb.results;CREATE TABLE IF NOT EXISTS appdb.results(	order_id INTEGER NOT NULL  ENCODE RAW	  ,status VARCHAR(20) ENCODE zstd	  ,order_date DATE ENCODE zstd	  ,UNIQUE (order_id))DISTSTYLE KEY DISTKEY (order_id) SORTKEY (	order_id	);ALTER TABLE appdb.results owner to awsuser;--DROP TABLE aws_netezza_ext.versions;CREATE TABLE IF NOT EXISTS aws_netezza_ext.versions(	extpackcomponentname VARCHAR(256) NOT NULL  ENCODE lzo	  ,componentversion VARCHAR(256) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE aws_netezza_ext.versions owner to awsuser;--DROP TABLE aws_teradata_ext.versions;CREATE TABLE IF NOT EXISTS aws_teradata_ext.versions(	extpackcomponentname VARCHAR(256) ENCODE lzo	  ,componentversion VARCHAR(256) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE aws_teradata_ext.versions owner to awsuser;--DROP TABLE cdedm.cdm_active_suppliers;CREATE TABLE IF NOT EXISTS cdedm.cdm_active_suppliers(	ky_supplier_id VARCHAR(16383) ENCODE lzo	  ,tx_sup_descr VARCHAR(16383) ENCODE lzo	  ,ky_supplier_group VARCHAR(16383) ENCODE lzo	  ,crowid VARCHAR(16383) ENCODE lzo	  ,arowid VARCHAR(16383) ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE cdedm.cdm_active_suppliers owner to awsuser;--DROP TABLE cdedm.cdm_bill_accounts;CREATE TABLE IF NOT EXISTS cdedm.cdm_bill_accounts(	bill_acct_gk_pk BIGINT ENCODE az64	  ,bill_acct_num VARCHAR(16383) ENCODE lzo	  ,location_fk BIGINT ENCODE az64	  ,revenue_class_fk BIGINT ENCODE az64	  ,electric_tariff_sched_fk BIGINT ENCODE az64	  ,lighting_tariff_sched_fk BIGINT ENCODE az64	  ,service_supplier_fk BIGINT ENCODE az64	  ,offer_fk BIGINT ENCODE az64	  ,bill_acct_status_cd BIGINT ENCODE az64	  ,bill_acct_status VARCHAR(16383) ENCODE lzo	  ,bill_acct_type_cd BIGINT ENCODE az64	  ,bill_acct_type VARCHAR(16383) ENCODE lzo	  ,bill_acct_open_dt VARCHAR(16383) ENCODE lzo	  ,bill_acct_closed_dt VARCHAR(16383) ENCODE lzo	  ,bill_extend_pgm_yn VARCHAR(16383) ENCODE lzo	  ,budget_billing_start_dt VARCHAR(16383) ENCODE lzo	  ,budget_billing_end_dt VARCHAR(16383) ENCODE lzo	  ,cares_eff_start_dt VARCHAR(16383) ENCODE lzo	  ,care_eff_end_dt VARCHAR(16383) ENCODE lzo	  ,cash_only_yn VARCHAR(16383) ENCODE lzo	  ,asst_agncy_ky VARCHAR(16383) ENCODE lzo	  ,customer_agency_oper_help VARCHAR(16383) ENCODE lzo	  ,customer_id BIGINT ENCODE az64	  ,customer_type_cd VARCHAR(16383) ENCODE lzo	  ,customer_type VARCHAR(16383) ENCODE lzo	  ,eft_start_dt VARCHAR(16383) ENCODE lzo	  ,eft_yn VARCHAR(16383) ENCODE lzo	  ,eft_susp_period_cd VARCHAR(16383) ENCODE lzo	  ,eft_susp_period VARCHAR(16383) ENCODE lzo	  ,electric_service_dt VARCHAR(16383) ENCODE lzo	  ,employee_of_ppl_yn VARCHAR(16383) ENCODE lzo	  ,heating_cd VARCHAR(16383) ENCODE lzo	  ,heating VARCHAR(16383) ENCODE lzo	  ,household_mbr_under_12_yn VARCHAR(16383) ENCODE lzo	  ,household_mbr_over_60_yn VARCHAR(16383) ENCODE lzo	  ,number_in_household VARCHAR(16383) ENCODE lzo	  ,income VARCHAR(16383) ENCODE lzo	  ,income_level VARCHAR(16383) ENCODE lzo	  ,last_wrapped_dt VARCHAR(16383) ENCODE lzo	  ,load_survey_id VARCHAR(16383) ENCODE lzo	  ,on_track_eff_start_dt VARCHAR(16383) ENCODE lzo	  ,on_track_eff_end_dt VARCHAR(16383) ENCODE lzo	  ,power_watch_start_dt VARCHAR(16383) ENCODE lzo	  ,power_watch_end_dt VARCHAR(16383) ENCODE lzo	  ,premise_id BIGINT ENCODE az64	  ,premise_type_cd BIGINT ENCODE az64	  ,premise_type VARCHAR(16383) ENCODE lzo	  ,primary_phn_area_cd VARCHAR(16383) ENCODE lzo	  ,primary_phone_num VARCHAR(16383) ENCODE lzo	  ,occupant_is_ratepayer_yn VARCHAR(16383) ENCODE lzo	  ,address_rsn_cd BIGINT ENCODE az64	  ,address_reason VARCHAR(16383) ENCODE lzo	  ,sales_tax_exempt_license_num VARCHAR(16383) ENCODE lzo	  ,sales_tax_exempt_expire_dt VARCHAR(16383) ENCODE lzo	  ,service_county_cd VARCHAR(16383) ENCODE lzo	  ,service_county VARCHAR(16383) ENCODE lzo	  ,social_security_num VARCHAR(16383) ENCODE lzo	  ,mailing_city VARCHAR(16383) ENCODE lzo	  ,mailing_state VARCHAR(16383) ENCODE lzo	  ,mailing_zip_cd BIGINT ENCODE az64	  ,service_city VARCHAR(16383) ENCODE lzo	  ,service_state VARCHAR(16383) ENCODE lzo	  ,service_zip_cd BIGINT ENCODE az64	  ,taxing_area_cd VARCHAR(16383) ENCODE lzo	  ,taxing_area VARCHAR(16383) ENCODE lzo	  ,number_of_dwelling_units VARCHAR(16383) ENCODE lzo	  ,service_grid VARCHAR(16383) ENCODE lzo	  ,transformer_grid VARCHAR(16383) ENCODE lzo	  ,choice_enrollment_yn VARCHAR(16383) ENCODE lzo	  ,serv_supp_bill_acct_num VARCHAR(16383) ENCODE lzo	  ,contract_eff_term_dt VARCHAR(16383) ENCODE lzo	  ,contract_eff_start_dt VARCHAR(16383) ENCODE lzo	  ,bill_option BIGINT ENCODE az64	  ,other_ba_relationship_1 VARCHAR(16383) ENCODE lzo	  ,other_ba_relationship_2 VARCHAR(16383) ENCODE lzo	  ,strata VARCHAR(16383) ENCODE lzo	  ,offer_cd VARCHAR(16383) ENCODE lzo	  ,oper_cntr_cd VARCHAR(16383) ENCODE lzo	  ,revenue_class_cd VARCHAR(16383) ENCODE lzo	  ,electric_tar_sch_cd VARCHAR(16383) ENCODE lzo	  ,lighting_tar_sch_cd VARCHAR(16383) ENCODE lzo	  ,service_supplier_cd VARCHAR(16383) ENCODE lzo	  ,insert_dt VARCHAR(16383) ENCODE lzo	  ,update_dt VARCHAR(16383) ENCODE lzo	  ,acct_reference_num VARCHAR(16383) ENCODE lzo	  ,collection_handling_cd VARCHAR(16383) ENCODE lzo	  ,collection_handling VARCHAR(16383) ENCODE lzo	  ,supplier_rate VARCHAR(16383) ENCODE lzo	  ,local_exempt_percent_electric BIGINT ENCODE az64	  ,local_exempt_percent_lighting BIGINT ENCODE az64	  ,state_exempt_percent_electric BIGINT ENCODE az64	  ,state_exempt_percent_lighting BIGINT ENCODE az64	  ,poverty_level_cd VARCHAR(16383) ENCODE lzo	  ,poverty_level VARCHAR(16383) ENCODE lzo	  ,number_of_adults VARCHAR(16383) ENCODE lzo	  ,number_of_children VARCHAR(16383) ENCODE lzo	  ,number_of_seniors VARCHAR(16383) ENCODE lzo	  ,major_income_source VARCHAR(16383) ENCODE lzo	  ,puc_eligible_expenses VARCHAR(16383) ENCODE lzo	  ,financial_stmt_dt VARCHAR(16383) ENCODE lzo	  ,reason_no_financial_stmt VARCHAR(16383) ENCODE lzo	  ,financial_stmt_confirmed_yn VARCHAR(16383) ENCODE lzo	  ,reason_no_financial_stmt_cd VARCHAR(16383) ENCODE lzo	  ,collection_status_cd VARCHAR(16383) ENCODE lzo	  ,collection_status VARCHAR(16383) ENCODE lzo	  ,sic_cd VARCHAR(16383) ENCODE lzo	  ,market_segment_cd VARCHAR(16383) ENCODE lzo	  ,market_segment VARCHAR(16383) ENCODE lzo	  ,feeder_cd VARCHAR(16383) ENCODE lzo	  ,edi_yn VARCHAR(16383) ENCODE lzo	  ,idi_yn VARCHAR(16383) ENCODE lzo	  ,meter_number VARCHAR(16383) ENCODE lzo	  ,meter_pt_type_cd VARCHAR(16383) ENCODE lzo	  ,meter_pt_type VARCHAR(16383) ENCODE lzo	  ,profile_group VARCHAR(16383) ENCODE lzo	  ,capacity_obligation_amt DOUBLE PRECISION ENCODE RAW	  ,transmission_obligation_amt DOUBLE PRECISION ENCODE RAW	  ,supplier_rate_desc VARCHAR(16383) ENCODE lzo	  ,payment_due_days BIGINT ENCODE az64	  ,supplier_rate_pricing_cd VARCHAR(16383) ENCODE lzo	  ,customer_care_cd VARCHAR(16383) ENCODE lzo	  ,customer_care VARCHAR(16383) ENCODE lzo	  ,client_comments VARCHAR(16383) ENCODE lzo	  ,billing_cycle BIGINT ENCODE az64	  ,service_end_dt VARCHAR(16383) ENCODE lzo	  ,drop_effective_dt VARCHAR(16383) ENCODE lzo	  ,sales_tax_exempt_pct BIGINT ENCODE az64	  ,account_type_cd VARCHAR(16383) ENCODE lzo	  ,account_type VARCHAR(16383) ENCODE lzo	  ,doing_business_as VARCHAR(16383) ENCODE lzo	  ,sic_desc VARCHAR(16383) ENCODE lzo	  ,supplier_fk BIGINT ENCODE az64	  ,supplier_cd VARCHAR(16383) ENCODE lzo	  ,utility_cd VARCHAR(16383) ENCODE lzo	  ,er_premise_type_cd VARCHAR(16383) ENCODE lzo	  ,er_premise_type VARCHAR(16383) ENCODE lzo	  ,er_service_zip_plus4 BIGINT ENCODE az64	  ,er_mailing_zip_plus4 BIGINT ENCODE az64	  ,er_contract_name VARCHAR(16383) ENCODE lzo	  ,er_ppl_supply_start_dt VARCHAR(16383) ENCODE lzo	  ,er_bdm_cd VARCHAR(16383) ENCODE lzo	  ,er_bdm VARCHAR(16383) ENCODE lzo	  ,er_client_account_num VARCHAR(16383) ENCODE lzo	  ,er_account_subtype_cd VARCHAR(16383) ENCODE lzo	  ,er_account_subtype VARCHAR(16383) ENCODE lzo	  ,er_occ_num BIGINT ENCODE az64	  ,er_language_cd VARCHAR(16383) ENCODE lzo	  ,er_language VARCHAR(16383) ENCODE lzo	  ,er_affinity_group_1_cd VARCHAR(16383) ENCODE lzo	  ,er_affinity_group_1 VARCHAR(16383) ENCODE lzo	  ,er_affinity_group_2_cd VARCHAR(16383) ENCODE lzo	  ,er_affinity_group_2 VARCHAR(16383) ENCODE lzo	  ,er_status_cd VARCHAR(16383) ENCODE lzo	  ,er_status VARCHAR(16383) ENCODE lzo	  ,er_tracking_id VARCHAR(16383) ENCODE lzo	  ,pt_client_customer_num VARCHAR(16383) ENCODE lzo	  ,pt_customer_duns_num VARCHAR(16383) ENCODE lzo	  ,pt_association_cd VARCHAR(16383) ENCODE lzo	  ,pt_association VARCHAR(16383) ENCODE lzo	  ,pt_load_asset_id VARCHAR(16383) ENCODE lzo	  ,pt_line_loss_factor_qty BIGINT ENCODE az64	  ,pt_summary_bill_yn VARCHAR(16383) ENCODE lzo	  ,pt_commencement_dt VARCHAR(16383) ENCODE lzo	  ,pt_ammendment VARCHAR(16383) ENCODE lzo	  ,pt_meter_service_charge BIGINT ENCODE az64	  ,pt_meter_service_start_dt VARCHAR(16383) ENCODE lzo	  ,pt_enrollment_entry_dt VARCHAR(16383) ENCODE lzo	  ,pt_welcome_letter_sent_dt VARCHAR(16383) ENCODE lzo	  ,pt_client_contract_num VARCHAR(16383) ENCODE lzo	  ,pt_broker_fee BIGINT ENCODE az64	  ,enrollment_num BIGINT ENCODE az64	  ,er_contract_signed_dt VARCHAR(16383) ENCODE lzo	  ,er_energy_price DOUBLE PRECISION ENCODE RAW	  ,er_delivery_point VARCHAR(16383) ENCODE lzo	  ,er_pool_cd VARCHAR(16383) ENCODE lzo	  ,er_pool VARCHAR(16383) ENCODE lzo	  ,er_product_cd VARCHAR(16383) ENCODE lzo	  ,er_product VARCHAR(16383) ENCODE lzo	  ,er_utility_program_cd VARCHAR(16383) ENCODE lzo	  ,er_utility_program VARCHAR(16383) ENCODE lzo	  ,er_estimated_kw BIGINT ENCODE az64	  ,er_total_kwh_months BIGINT ENCODE az64	  ,er_total_kwh BIGINT ENCODE az64	  ,er_enrollment_hold_dt VARCHAR(16383) ENCODE lzo	  ,er_key_customer_yn VARCHAR(16383) ENCODE lzo	  ,er_meter_num VARCHAR(16383) ENCODE lzo	  ,er_special_handling_yn VARCHAR(16383) ENCODE lzo	  ,er_voltage_cd VARCHAR(16383) ENCODE lzo	  ,er_payment_terms_cd VARCHAR(16383) ENCODE lzo	  ,er_payment_terms VARCHAR(16383) ENCODE lzo	  ,er_unit_of_measure_cd VARCHAR(16383) ENCODE lzo	  ,er_unit_of_measure VARCHAR(16383) ENCODE lzo	  ,er_special_needs_yn VARCHAR(16383) ENCODE lzo	  ,er_new_customer_yn VARCHAR(16383) ENCODE lzo	  ,er_new_premise_yn VARCHAR(16383) ENCODE lzo	  ,er_special_read_dt VARCHAR(16383) ENCODE lzo	  ,er_udc_cd VARCHAR(16383) ENCODE lzo	  ,er_notification_waiver_yn VARCHAR(16383) ENCODE lzo	  ,er_enrollment_type_cd VARCHAR(16383) ENCODE lzo	  ,er_service_level_cd BIGINT ENCODE az64	  ,er_service_level VARCHAR(16383) ENCODE lzo	  ,er_deal_type_cd VARCHAR(16383) ENCODE lzo	  ,er_deal_type VARCHAR(16383) ENCODE lzo	  ,er_update_timestamp VARCHAR(16383) ENCODE lzo	  ,drop_status_cd BIGINT ENCODE az64	  ,drop_status VARCHAR(16383) ENCODE lzo	  ,drop_utility_response_dt VARCHAR(16383) ENCODE lzo	  ,drop_requested_dt VARCHAR(16383) ENCODE lzo	  ,drop_direction VARCHAR(16383) ENCODE lzo	  ,drop_reason VARCHAR(16383) ENCODE lzo	  ,css_bill_account_created_dt VARCHAR(16383) ENCODE lzo	  ,last_bill_period_from_dt VARCHAR(16383) ENCODE lzo	  ,last_bill_period_to_dt VARCHAR(16383) ENCODE lzo	  ,last_bill_dt VARCHAR(16383) ENCODE lzo	  ,last_bill_amt DOUBLE PRECISION ENCODE RAW	  ,last_bill_account_balance DOUBLE PRECISION ENCODE RAW	  ,last_bill_usage DOUBLE PRECISION ENCODE RAW	  ,"zone" VARCHAR(16383) ENCODE lzo	  ,meter_cycle BIGINT ENCODE az64	  ,grt_tax_exempt_pct BIGINT ENCODE az64	  ,local_grt_tax_exempt_pct BIGINT ENCODE az64	  ,local_util_user_tax_exempt_pct BIGINT ENCODE az64	  ,pub_util_assess_tax_exempt_pct BIGINT ENCODE az64	  ,er_voltage VARCHAR(16383) ENCODE lzo	  ,er_enrollment_type VARCHAR(16383) ENCODE lzo	  ,er_customer_tar_type_cd VARCHAR(16383) ENCODE lzo	  ,er_customer_tar_type VARCHAR(16383) ENCODE lzo	  ,max_billed_to_dt VARCHAR(16383) ENCODE lzo	  ,community VARCHAR(16383) ENCODE lzo	  ,customer_class_cd VARCHAR(16383) ENCODE lzo	  ,duns_grp_cd VARCHAR(16383) ENCODE lzo	  ,er_promotion_cd BIGINT ENCODE az64	  ,er_deposit_amt BIGINT ENCODE az64	  ,er_broker_cd VARCHAR(16383) ENCODE lzo	  ,bill_type VARCHAR(16383) ENCODE lzo	  ,er_contract_enroll_dt VARCHAR(16383) ENCODE lzo	  ,er_contract_register_dt VARCHAR(16383) ENCODE lzo	  ,er_sent_to_enrollment_dt VARCHAR(16383) ENCODE lzo	  ,er_sent_to_cpm_dt VARCHAR(16383) ENCODE lzo	  ,er_site_info VARCHAR(16383) ENCODE lzo	  ,er_cas_account_id BIGINT ENCODE az64	  ,enrollment_recvd_in_cas_dt VARCHAR(16383) ENCODE lzo	  ,pt_payment_arrangment_ind VARCHAR(16383) ENCODE lzo	  ,pt_dispute_ind VARCHAR(16383) ENCODE lzo	  ,pt_prevent_disconect_ind VARCHAR(16383) ENCODE lzo	  ,pt_critical_care_ind VARCHAR(16383) ENCODE lzo	  ,pt_critical_care_effective_dt VARCHAR(16383) ENCODE lzo	  ,critical_care_end_dt VARCHAR(16383) ENCODE lzo	  ,critical_care_type VARCHAR(16383) ENCODE lzo	  ,pt_puc_dispute_ind VARCHAR(16383) ENCODE lzo	  ,pt_customer_dispute_ind VARCHAR(16383) ENCODE lzo	  ,pt_account_on_csa_ind VARCHAR(16383) ENCODE lzo	  ,pt_low_income_ind VARCHAR(16383) ENCODE lzo	  ,pt_geocode_source_cd VARCHAR(16383) ENCODE lzo	  ,pt_geocode_id VARCHAR(16383) ENCODE lzo	  ,pt_inout_city_cd VARCHAR(16383) ENCODE lzo	  ,pt_inout_local_cd VARCHAR(16383) ENCODE lzo	  ,pt_special_rules VARCHAR(16383) ENCODE lzo	  ,pt_867_hold_reason VARCHAR(16383) ENCODE lzo	  ,pt_switch_hold_status_cd VARCHAR(16383) ENCODE lzo	  ,pt_switch_hold_start_dt VARCHAR(16383) ENCODE lzo	  ,pt_switch_hold_end_dt VARCHAR(16383) ENCODE lzo	  ,er_cas_customer_id BIGINT ENCODE az64	  ,er_cas_offer_id BIGINT ENCODE az64	  ,er_customer_care_id VARCHAR(16383) ENCODE lzo	  ,er_old_edc_acctno BIGINT ENCODE az64	  ,contract_renewal_window_dt VARCHAR(16383) ENCODE lzo	  ,current_product_cd BIGINT ENCODE az64	  ,current_product_name VARCHAR(16383) ENCODE lzo	  ,current_price DOUBLE PRECISION ENCODE RAW	  ,current_effective_start_dt VARCHAR(16383) ENCODE lzo	  ,current_effective_to_dt VARCHAR(16383) ENCODE lzo	  ,first_bill_from_dt VARCHAR(16383) ENCODE lzo	  ,first_bill_to_dt VARCHAR(16383) ENCODE lzo	  ,first_bill_processed_dt VARCHAR(16383) ENCODE lzo	  ,total_electric_usage_qty DOUBLE PRECISION ENCODE RAW	  ,total_gas_usage_qty DOUBLE PRECISION ENCODE RAW	  ,est_bb_next_settle_yr_mth_vlu VARCHAR(16383) ENCODE lzo	  ,pt_bb_eff_from_dt VARCHAR(16383) ENCODE lzo	  ,pt_bb_eff_to_dt VARCHAR(16383) ENCODE lzo	  ,pt_bb_monthly_budget_amt VARCHAR(16383) ENCODE lzo	  ,pt_bb_mths_since_settle_num VARCHAR(16383) ENCODE lzo	  ,pt_bb_stat_cd VARCHAR(16383) ENCODE lzo	  ,pt_bb_stat_descr VARCHAR(16383) ENCODE lzo	  ,pt_total_actual_to_date_amt VARCHAR(16383) ENCODE lzo	  ,pt_tot_bb_to_date_amt VARCHAR(16383) ENCODE lzo	  ,pt_tot_deferred_to_date_amt VARCHAR(16383) ENCODE lzo	  ,pt_bb_last_upd_dt VARCHAR(16383) ENCODE lzo	  ,er_enroll_create_dt VARCHAR(16383) ENCODE lzo	  ,er_enroll_comments_descr VARCHAR(16383) ENCODE lzo	  ,er_cancel_comments_descr VARCHAR(16383) ENCODE lzo	  ,prospect_fk BIGINT ENCODE az64	  ,er_accpt_enroll_recvd_dt VARCHAR(16383) ENCODE lzo	  ,contract_term BIGINT ENCODE az64	  ,er_enrollment_status VARCHAR(16383) ENCODE lzo	  ,rate_plan_fk BIGINT ENCODE az64	  ,rate_plan BIGINT ENCODE az64	  ,fl_seamlessmovin VARCHAR(16383) ENCODE lzo	  ,dt_sent_seamlessmovin VARCHAR(16383) ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE cdedm.cdm_bill_accounts owner to awsuser;--DROP TABLE cdedm.cdm_bill_tran_hdr_mv_raw;CREATE TABLE IF NOT EXISTS cdedm.cdm_bill_tran_hdr_mv_raw(	bill_acct_fk BIGINT ENCODE az64	  ,supplier_utility_fk BIGINT ENCODE az64	  ,supplier_cd VARCHAR(16383) ENCODE lzo	  ,utility_cd VARCHAR(16383) ENCODE lzo	  ,inv_dt_created_id VARCHAR(16383) ENCODE lzo	  ,inv_dt_billed_id VARCHAR(16383) ENCODE lzo	  ,ky_pnd_seq_trans BIGINT ENCODE az64	  ,inv_supplier_cd VARCHAR(16383) ENCODE lzo	  ,cd_tran_type_867 VARCHAR(16383) ENCODE lzo	  ,inv_867_dt_created VARCHAR(16383) ENCODE lzo	  ,inv_867_dt_procesed VARCHAR(16383) ENCODE lzo	  ,inv_810_dt_created VARCHAR(16383) ENCODE lzo	  ,inv_810_dtprocessed VARCHAR(16383) ENCODE lzo	  ,inv_dt_relat_mb BIGINT ENCODE az64	  ,inv_dt_mrdg VARCHAR(16383) ENCODE lzo	  ,inv_dt_nxt_sch_rdg VARCHAR(16383) ENCODE lzo	  ,inv_dt_period_start VARCHAR(16383) ENCODE lzo	  ,inv_dt_period_end VARCHAR(16383) ENCODE lzo	  ,inv_ts_idr_start VARCHAR(16383) ENCODE lzo	  ,inv_ts_idr_end VARCHAR(16383) ENCODE lzo	  ,inv_dt_doc_due VARCHAR(16383) ENCODE lzo	  ,inv_ts_sent_to_css VARCHAR(16383) ENCODE lzo	  ,inv_dt_billed_by_css VARCHAR(16383) ENCODE lzo	  ,inv_dt_bill VARCHAR(16383) ENCODE lzo	  ,inv_dt_prnt VARCHAR(16383) ENCODE lzo	  ,inv_dt_bill_to_cust VARCHAR(16383) ENCODE lzo	  ,inv_dt_due VARCHAR(16383) ENCODE lzo	  ,inv_dt_extn_to VARCHAR(16383) ENCODE lzo	  ,inv_bh_dt_stat VARCHAR(16383) ENCODE lzo	  ,inv_ts_last_updated VARCHAR(16383) ENCODE lzo	  ,inv_ts_created VARCHAR(16383) ENCODE lzo	  ,inv_billed_on_time VARCHAR(16383) ENCODE lzo	  ,inv_status_cd VARCHAR(16383) ENCODE lzo	  ,inv_cd_tran_type_867 VARCHAR(16383) ENCODE lzo	  ,inv_bh_cd_bill_stat VARCHAR(16383) ENCODE lzo	  ,inv_cd_curr_rdg_gas VARCHAR(16383) ENCODE lzo	  ,inv_cd_bill_sch VARCHAR(16383) ENCODE lzo	  ,inv_cd_curr_rdg_ele VARCHAR(16383) ENCODE lzo	  ,inv_cd_orig_rdg_gas VARCHAR(16383) ENCODE lzo	  ,inv_cd_purpose VARCHAR(16383) ENCODE lzo	  ,inv_cd_fault_reason VARCHAR(16383) ENCODE lzo	  ,inv_cd_bill_type VARCHAR(16383) ENCODE lzo	  ,inv_cd_bill_calc_method VARCHAR(16383) ENCODE lzo	  ,inv_fl_retag VARCHAR(16383) ENCODE lzo	  ,inv_fl_internal_rebill VARCHAR(16383) ENCODE lzo	  ,inv_cd_gas_graph VARCHAR(16383) ENCODE lzo	  ,inv_cd_ele_graph VARCHAR(16383) ENCODE lzo	  ,inv_cd_bill_litr VARCHAR(16383) ENCODE lzo	  ,inv_cd_stn VARCHAR(16383) ENCODE lzo	  ,inv_cd_stn_2 VARCHAR(16383) ENCODE lzo	  ,inv_cd_stn_3 VARCHAR(16383) ENCODE lzo	  ,inv_cd_stn_4 VARCHAR(16383) ENCODE lzo	  ,inv_cd_stn_5 VARCHAR(16383) ENCODE lzo	  ,inv_cd_stn_6 VARCHAR(16383) ENCODE lzo	  ,inv_cd_stn_7 VARCHAR(16383) ENCODE lzo	  ,inv_cd_stn_8 VARCHAR(16383) ENCODE lzo	  ,inv_cd_bill_rlse_2 VARCHAR(16383) ENCODE lzo	  ,inv_cd_gg_indic VARCHAR(16383) ENCODE lzo	  ,inv_fl_cd_acctno VARCHAR(16383) ENCODE lzo	  ,inv_fl_excs_cr_on_bill VARCHAR(16383) ENCODE lzo	  ,inv_cd_print_stub VARCHAR(16383) ENCODE lzo	  ,inv_cd_co VARCHAR(16383) ENCODE lzo	  ,inv_cd_oper_cntr VARCHAR(16383) ENCODE lzo	  ,inv_cd_final VARCHAR(16383) ENCODE lzo	  ,inv_cd_service VARCHAR(16383) ENCODE lzo	  ,inv_cd_old_exist VARCHAR(16383) ENCODE lzo	  ,inv_cd_rdg_srce_ele VARCHAR(16383) ENCODE lzo	  ,inv_cd_orig_rdg_el VARCHAR(16383) ENCODE lzo	  ,inv_cd_tar_type VARCHAR(16383) ENCODE lzo	  ,inv_cd_bill_prcs_instr BIGINT ENCODE az64	  ,inv_bh_cd_stat VARCHAR(16383) ENCODE lzo	  ,inv_fl_solution_fault VARCHAR(16383) ENCODE lzo	  ,inv_fl_no_amt_due VARCHAR(16383) ENCODE lzo	  ,inv_fl_lpc VARCHAR(16383) ENCODE lzo	  ,inv_bd_use_start_or_end VARCHAR(16383) ENCODE lzo	  ,inv_category_id VARCHAR(16383) ENCODE lzo	  ,inv_wl_corrections VARCHAR(16383) ENCODE lzo	  ,inv_wl_not_corrected VARCHAR(16383) ENCODE lzo	  ,inv_bill_window VARCHAR(16383) ENCODE lzo	  ,inv_cd_billing_option VARCHAR(16383) ENCODE lzo	  ,inv_id_edc_duns VARCHAR(16383) ENCODE lzo	  ,inv_id_edc_acct_num VARCHAR(16383) ENCODE lzo	  ,invid_ba_esco VARCHAR(16383) ENCODE lzo	  ,inv_id_trans_ref_num_867 VARCHAR(16383) ENCODE lzo	  ,inv_ky_row_seq_trans_867 VARCHAR(16383) ENCODE lzo	  ,inv_id_trans_ref_num_810 VARCHAR(16383) ENCODE lzo	  ,inv_ky_row_seq_trans_810 VARCHAR(16383) ENCODE lzo	  ,inv_comment VARCHAR(16383) ENCODE lzo	  ,inv_bill_seq_no VARCHAR(16383) ENCODE lzo	  ,inv_run_seq_no VARCHAR(16383) ENCODE lzo	  ,inv_mtr_bill_grp VARCHAR(16383) ENCODE lzo	  ,invoice_no VARCHAR(16383) ENCODE lzo	  ,inv_at_chg DOUBLE PRECISION ENCODE RAW	  ,inv_at_chg_iit DOUBLE PRECISION ENCODE RAW	  ,inv_at_chg_swb DOUBLE PRECISION ENCODE RAW	  ,inv_cnt_charges BIGINT ENCODE az64	  ,inv_at_tot_net DOUBLE PRECISION ENCODE RAW	  ,inv_at_accum_bb_td BIGINT ENCODE az64	  ,inv_at_accum_use_td BIGINT ENCODE az64	  ,inv_at_excr_unapl BIGINT ENCODE az64	  ,inv_at_unpd_gr BIGINT ENCODE az64	  ,inv_at_pr_unpd_net BIGINT ENCODE az64	  ,inv_at_bill_ab BIGINT ENCODE az64	  ,inv_at_net_serv_memo BIGINT ENCODE az64	  ,inv_at_rfnd BIGINT ENCODE az64	  ,inv_at_svc_current DOUBLE PRECISION ENCODE RAW	  ,inv_at_nonsvc_current BIGINT ENCODE az64	  ,inv_at_svc_arrears BIGINT ENCODE az64	  ,inv_at_nonsvc_arrears BIGINT ENCODE az64	  ,inv_qy_prim BIGINT ENCODE az64	  ,inv_qy_bill_copy BIGINT ENCODE az64	  ,inv_day_use BIGINT ENCODE az64	  ,inv_days_to_bill BIGINT ENCODE az64	  ,inv_days_doc_due BIGINT ENCODE az64	  ,inv_days_ready_to_bill BIGINT ENCODE az64	  ,thrid VARCHAR(16383) ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE cdedm.cdm_bill_tran_hdr_mv_raw owner to awsuser;--DROP TABLE cdedm.cdm_calendar;CREATE TABLE IF NOT EXISTS cdedm.cdm_calendar(	calendar_dt_pk BIGINT ENCODE RAW	  ,calendar_dt VARCHAR(16383) ENCODE lzo	  ,calendar_yr_mo VARCHAR(16383) ENCODE lzo	  ,calendar_yr BIGINT ENCODE az64	  ,rev_yr_mo VARCHAR(16383) ENCODE lzo	  ,rev_yr_qtr VARCHAR(16383) ENCODE lzo	  ,rev_yr BIGINT ENCODE az64	  ,insert_dt VARCHAR(16383) ENCODE lzo	  ,update_dt VARCHAR(16383) ENCODE lzo	  ,company_work_day_ind VARCHAR(16383) ENCODE lzo	  ,holiday_ind VARCHAR(16383) ENCODE lzo	  ,work_day_seq_num BIGINT ENCODE az64)DISTSTYLE EVEN SORTKEY (	calendar_dt_pk	);ALTER TABLE cdedm.cdm_calendar owner to awsuser;--DROP TABLE cdedm.cdm_supplier_utility;CREATE TABLE IF NOT EXISTS cdedm.cdm_supplier_utility(	supplier_utility_gk_pk BIGINT ENCODE az64	  ,supplier_cd VARCHAR(16383) ENCODE lzo	  ,supplier VARCHAR(16383) ENCODE lzo	  ,utility_cd VARCHAR(16383) ENCODE lzo	  ,utility VARCHAR(16383) ENCODE lzo	  ,utility_duns_num VARCHAR(16383) ENCODE lzo	  ,state VARCHAR(16383) ENCODE lzo	  ,supplier_group_id VARCHAR(16383) ENCODE lzo	  ,supplier_group VARCHAR(16383) ENCODE lzo	  ,service_type VARCHAR(16383) ENCODE lzo	  ,supplier_duns_num BIGINT ENCODE az64	  ,insert_dt VARCHAR(16383) ENCODE lzo	  ,update_dt VARCHAR(16383) ENCODE lzo	  ,bill_option BIGINT ENCODE az64	  ,bill_delivery_type VARCHAR(16383) ENCODE lzo	  ,bill_calculation_method VARCHAR(16383) ENCODE lzo	  ,contract_renew_window_days BIGINT ENCODE az64	  ,price_change_days BIGINT ENCODE az64)DISTSTYLE EVEN;ALTER TABLE cdedm.cdm_supplier_utility owner to awsuser;--DROP TABLE cdedm.lu_bill_category;CREATE TABLE IF NOT EXISTS cdedm.lu_bill_category(	cd_bill_cat BIGINT ENCODE az64	  ,bill_cat_desc VARCHAR(16383) ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE cdedm.lu_bill_category owner to awsuser;--DROP TABLE cdedm.lu_billing_option;CREATE TABLE IF NOT EXISTS cdedm.lu_billing_option(	ky_cpm_cd_bill_option VARCHAR(16383) ENCODE lzo	  ,cd_bill_type VARCHAR(16383) ENCODE lzo	  ,cd_bill_calc_method VARCHAR(16383) ENCODE lzo	  ,fl_active VARCHAR(16383) ENCODE lzo	  ,qy_display_sequence BIGINT ENCODE az64	  ,bill_option VARCHAR(16383) ENCODE lzo	  ,bill_option_type BIGINT ENCODE az64)DISTSTYLE EVEN;ALTER TABLE cdedm.lu_billing_option owner to awsuser;--DROP TABLE cdedm.lu_cd_purpose;CREATE TABLE IF NOT EXISTS cdedm.lu_cd_purpose(	ky_cpm_cd_purpose BIGINT ENCODE az64	  ,cd_major_type VARCHAR(16383) ENCODE lzo	  ,tx_description VARCHAR(16383) ENCODE lzo	  ,fl_active VARCHAR(16383) ENCODE lzo	  ,qy_display_sequence BIGINT ENCODE az64)DISTSTYLE EVEN;ALTER TABLE cdedm.lu_cd_purpose owner to awsuser;--DROP TABLE cdedm.lu_cd_tran_status;CREATE TABLE IF NOT EXISTS cdedm.lu_cd_tran_status(	cd_tran_status VARCHAR(16383) ENCODE lzo	  ,tx_description VARCHAR(16383) ENCODE lzo	  ,qy_days_to_wait BIGINT ENCODE az64	  ,fl_active VARCHAR(16383) ENCODE lzo	  ,qy_display_sequence BIGINT ENCODE az64)DISTSTYLE EVEN;ALTER TABLE cdedm.lu_cd_tran_status owner to awsuser;--DROP TABLE crown.dim_eqpmnt;CREATE TABLE IF NOT EXISTS crown.dim_eqpmnt(	dim_eqpmnt_id BIGINT NOT NULL DEFAULT default_identity(100560 , 0 , '1 ,1'::text) ENCODE az64	  ,eqpmnt_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,customer_oprtnl_id BIGINT NOT NULL  ENCODE az64	  ,location_oprtnl_id BIGINT ENCODE az64	  ,mfr_serial_number VARCHAR(30) ENCODE lzo	  ,eqpmnt_bk VARCHAR(166) ENCODE lzo	  ,eqpmnt_name VARCHAR(30) ENCODE lzo	  ,birth_year SMALLINT ENCODE az64	  ,service_weight_kg NUMERIC(13 ,3) ENCODE az64	  ,capacity_weight_kg NUMERIC(13 ,3) ENCODE az64	  ,impact_setting_disabled_flag BOOLEAN ENCODE RAW	  ,sense_at_rest_flag BOOLEAN ENCODE RAW	  ,eqpmnt_source_type_text_id VARCHAR(256) ENCODE lzo	  ,eqpmnt_source_ref_id VARCHAR(100) ENCODE lzo	  ,module_bk VARCHAR(18) ENCODE lzo	  ,assctn_user_oprtnl_id BIGINT ENCODE az64	  ,assctn_auto_flag BOOLEAN ENCODE RAW	  ,assctn_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,eqpmnt_avail_status VARCHAR(50) ENCODE lzo	  ,dim_pin_setting_id BIGINT NOT NULL  ENCODE az64	  ,dim_meter_setting_id BIGINT NOT NULL  ENCODE az64	  ,dim_impact_setting_id BIGINT NOT NULL  ENCODE az64	  ,eqpmnt_model_oprtnl_id BIGINT NOT NULL  ENCODE az64	  ,eqpmnt_model_name VARCHAR(65) ENCODE lzo	  ,eqpmnt_model_desc VARCHAR(100) ENCODE lzo	  ,model_engine_type_text_id VARCHAR(6) ENCODE lzo	  ,model_wired_io_flag BOOLEAN ENCODE RAW	  ,model_source_type_text_id VARCHAR(256) ENCODE lzo	  ,model_source_ref_id VARCHAR(100) ENCODE lzo	  ,model_dim_pin_setting_id BIGINT NOT NULL  ENCODE az64	  ,model_dim_meter_setting_id BIGINT NOT NULL  ENCODE az64	  ,model_dim_impact_setting_id BIGINT NOT NULL  ENCODE az64	  ,eqpmnt_type_oprtnl_id BIGINT NOT NULL  ENCODE az64	  ,eqpmnt_type_name VARCHAR(65) ENCODE lzo	  ,eqpmnt_type_desc VARCHAR(100) ENCODE lzo	  ,eqpmnt_mfr_oprtnl_id BIGINT NOT NULL  ENCODE az64	  ,eqpmnt_mfr_bk VARCHAR(4) ENCODE lzo	  ,eqpmnt_mfr_name VARCHAR(100) ENCODE lzo	  ,fltstts_mfr_bk CHAR(3) ENCODE lzo	  ,deleted_flag BOOLEAN NOT NULL DEFAULT 0 ENCODE RAW	  ,start_dt_utc TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE RAW	  ,end_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,current_flag BOOLEAN NOT NULL DEFAULT 1 ENCODE RAW	  ,force_valid_hour_meter_flag BOOLEAN NOT NULL DEFAULT 0 ENCODE RAW	  ,insert_dt_utc TIMESTAMP WITHOUT TIME ZONE  DEFAULT ('now'::text)::timestamp without time zone ENCODE az64	  ,update_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,PRIMARY KEY (dim_eqpmnt_id))DISTSTYLE ALL SORTKEY (	eqpmnt_oprtnl_id	  , start_dt_utc	);ALTER TABLE crown.dim_eqpmnt owner to awsuser;--DROP TABLE crown.dim_location;CREATE TABLE IF NOT EXISTS crown.dim_location(	dim_location_id BIGINT NOT NULL DEFAULT default_identity(100577 , 0 , '1 ,1'::text) ENCODE az64	  ,location_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,location_name VARCHAR(100) ENCODE lzo	  ,location_bk VARCHAR(50) ENCODE lzo	  ,customer_oprtnl_id BIGINT NOT NULL  ENCODE az64	  ,customer_name VARCHAR(100) ENCODE lzo	  ,customer_bk VARCHAR(50) ENCODE lzo	  ,address_line1 VARCHAR(50) ENCODE lzo	  ,address_line2 VARCHAR(50) ENCODE lzo	  ,address_line3 VARCHAR(50) ENCODE lzo	  ,address_line4 VARCHAR(50) ENCODE lzo	  ,address_line5 VARCHAR(50) ENCODE lzo	  ,address_city VARCHAR(50) ENCODE lzo	  ,address_province VARCHAR(50) ENCODE lzo	  ,address_postal_code VARCHAR(20) ENCODE lzo	  ,address_country_code VARCHAR(2) ENCODE lzo	  ,tz_bk VARCHAR(50) ENCODE lzo	  ,retailer_oprtnl_id BIGINT NOT NULL  ENCODE az64	  ,retailer_name VARCHAR(100) ENCODE lzo	  ,retailer_bk VARCHAR(50) ENCODE lzo	  ,retailer_type VARCHAR(6) ENCODE lzo	  ,erased_user_id BIGINT ENCODE az64	  ,customer_pii_retained_months SMALLINT ENCODE az64	  ,customer_data_retained_months SMALLINT NOT NULL  ENCODE az64	  ,dim_customer_region_id BIGINT ENCODE az64	  ,deleted_flag BOOLEAN NOT NULL DEFAULT 0 ENCODE RAW	  ,start_dt_utc TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE RAW	  ,end_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,current_flag BOOLEAN NOT NULL DEFAULT 1 ENCODE RAW	  ,insert_dt_utc TIMESTAMP WITHOUT TIME ZONE  DEFAULT ('now'::text)::timestamp without time zone ENCODE az64	  ,update_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,PRIMARY KEY (dim_location_id))DISTSTYLE ALL SORTKEY (	location_oprtnl_id	  , start_dt_utc	);ALTER TABLE crown.dim_location owner to awsuser;--DROP TABLE crown.dim_user;CREATE TABLE IF NOT EXISTS crown.dim_user(	dim_user_id BIGINT NOT NULL DEFAULT default_identity(100569 , 0 , '1 ,1'::text) ENCODE az64	  ,user_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,first_name VARCHAR(50) ENCODE lzo	  ,last_name VARCHAR(50) ENCODE lzo	  ,middle_name VARCHAR(50) ENCODE lzo	  ,employee_number VARCHAR(30) ENCODE lzo	  ,eqpmnt_role_id BIGINT ENCODE az64	  ,eqpmnt_role_text_id VARCHAR(6) ENCODE lzo	  ,shift_oprtnl_id BIGINT ENCODE az64	  ,shift_name VARCHAR(50) ENCODE lzo	  ,user_type VARCHAR(10) ENCODE lzo	  ,deleted_flag BOOLEAN NOT NULL DEFAULT 0 ENCODE RAW	  ,start_dt_utc TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE RAW	  ,end_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,current_flag BOOLEAN NOT NULL DEFAULT 1 ENCODE RAW	  ,insert_dt_utc TIMESTAMP WITHOUT TIME ZONE  DEFAULT ('now'::text)::timestamp without time zone ENCODE az64	  ,update_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,PRIMARY KEY (dim_user_id))DISTSTYLE ALL SORTKEY (	user_oprtnl_id	  , start_dt_utc	);ALTER TABLE crown.dim_user owner to awsuser;--DROP TABLE crown.fact_operator_session;CREATE TABLE IF NOT EXISTS crown.fact_operator_session(	fact_operator_session_id BIGINT NOT NULL DEFAULT default_identity(108963 , 0 , '1 ,1'::text) ENCODE az64	  ,eqpmnt_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,location_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,user_oprtnl_id BIGINT NOT NULL  ENCODE zstd	  ,start_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE RAW	  ,end_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,start_meter_type_text_id VARCHAR(3) ENCODE lzo	  ,end_meter_type_text_id VARCHAR(3) ENCODE lzo	  ,start_hour_meter_sec BIGINT ENCODE az64	  ,end_hour_meter_sec BIGINT ENCODE az64	  ,start_logon_meter_sec BIGINT ENCODE az64	  ,end_logon_meter_sec BIGINT ENCODE az64	  ,start_key_meter_sec BIGINT ENCODE az64	  ,end_key_meter_sec BIGINT ENCODE az64	  ,start_travel_meter_sec BIGINT ENCODE az64	  ,end_travel_meter_sec BIGINT ENCODE az64	  ,start_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_work_meter_sec BIGINT ENCODE az64	  ,end_work_meter_sec BIGINT ENCODE az64	  ,start_presence_meter_sec BIGINT ENCODE az64	  ,end_presence_meter_sec BIGINT ENCODE az64	  ,start_odometer_m DOUBLE PRECISION ENCODE RAW	  ,end_odometer_m DOUBLE PRECISION ENCODE RAW	  ,start_qpr_travel_meter_sec BIGINT ENCODE az64	  ,end_qpr_travel_meter_sec BIGINT ENCODE az64	  ,start_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_module_server_outbound_guid VARCHAR(36) ENCODE lzo	  ,end_module_server_outbound_guid VARCHAR(36) ENCODE lzo	  ,start_date_utc_int BIGINT ENCODE az64	  ,end_date_utc_int BIGINT ENCODE az64	  ,dim_eqpmnt_id BIGINT NOT NULL  ENCODE az64	  ,dim_location_id BIGINT NOT NULL  ENCODE az64	  ,dim_user_id BIGINT NOT NULL  ENCODE az64	  ,insert_dt_utc TIMESTAMP WITHOUT TIME ZONE  DEFAULT ('now'::text)::timestamp without time zone ENCODE az64	  ,update_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,PRIMARY KEY (fact_operator_session_id))DISTSTYLE KEY DISTKEY (start_dt_utc) SORTKEY (	start_dt_utc	  , end_dt_utc	  , eqpmnt_oprtnl_id	  , location_oprtnl_id	  , user_oprtnl_id	);ALTER TABLE crown.fact_operator_session owner to awsuser;ALTER TABLE crown.fact_operator_session ADD FOREIGN KEY (dim_eqpmnt_id) REFERENCES crown.dim_eqpmnt(dim_eqpmnt_id);ALTER TABLE crown.fact_operator_session ADD FOREIGN KEY (dim_location_id) REFERENCES crown.dim_location(dim_location_id);ALTER TABLE crown.fact_operator_session ADD FOREIGN KEY (dim_user_id) REFERENCES crown.dim_user(dim_user_id);--DROP TABLE crown.fact_operator_session_v1;CREATE TABLE IF NOT EXISTS crown.fact_operator_session_v1(	fact_operator_session_id BIGINT NOT NULL DEFAULT default_identity(100585 , 0 , '1 ,1'::text) ENCODE zstd	  ,eqpmnt_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,location_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,user_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,start_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE RAW	  ,end_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE RAW	  ,start_meter_type_text_id VARCHAR(3) ENCODE zstd	  ,end_meter_type_text_id VARCHAR(3) ENCODE zstd	  ,start_hour_meter_sec BIGINT ENCODE az64	  ,end_hour_meter_sec BIGINT ENCODE az64	  ,start_logon_meter_sec BIGINT ENCODE az64	  ,end_logon_meter_sec BIGINT ENCODE az64	  ,start_key_meter_sec BIGINT ENCODE az64	  ,end_key_meter_sec BIGINT ENCODE az64	  ,start_travel_meter_sec BIGINT ENCODE az64	  ,end_travel_meter_sec BIGINT ENCODE az64	  ,start_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_work_meter_sec BIGINT ENCODE az64	  ,end_work_meter_sec BIGINT ENCODE az64	  ,start_presence_meter_sec BIGINT ENCODE az64	  ,end_presence_meter_sec BIGINT ENCODE az64	  ,start_odometer_m DOUBLE PRECISION ENCODE zstd	  ,end_odometer_m DOUBLE PRECISION ENCODE zstd	  ,start_qpr_travel_meter_sec BIGINT ENCODE az64	  ,end_qpr_travel_meter_sec BIGINT ENCODE az64	  ,start_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_module_server_outbound_guid VARCHAR(36) ENCODE zstd	  ,end_module_server_outbound_guid VARCHAR(36) ENCODE zstd	  ,start_date_utc_int BIGINT ENCODE zstd	  ,end_date_utc_int BIGINT ENCODE zstd	  ,dim_eqpmnt_id BIGINT NOT NULL  ENCODE delta32k	  ,dim_location_id BIGINT NOT NULL  ENCODE az64	  ,dim_user_id BIGINT NOT NULL  ENCODE zstd	  ,insert_dt_utc TIMESTAMP WITHOUT TIME ZONE  DEFAULT ('now'::text)::timestamp without time zone ENCODE zstd	  ,update_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE zstd	  ,start_date DATE ENCODE az64	  ,end_date DATE ENCODE az64	  ,PRIMARY KEY (fact_operator_session_id))DISTSTYLE KEY DISTKEY (start_dt_utc) SORTKEY (	start_dt_utc	  , end_dt_utc	  , location_oprtnl_id	  , eqpmnt_oprtnl_id	  , user_oprtnl_id	);ALTER TABLE crown.fact_operator_session_v1 owner to awsuser;ALTER TABLE crown.fact_operator_session_v1 ADD FOREIGN KEY (dim_eqpmnt_id) REFERENCES crown.dim_eqpmnt(dim_eqpmnt_id);ALTER TABLE crown.fact_operator_session_v1 ADD FOREIGN KEY (dim_location_id) REFERENCES crown.dim_location(dim_location_id);ALTER TABLE crown.fact_operator_session_v1 ADD FOREIGN KEY (dim_user_id) REFERENCES crown.dim_user(dim_user_id);--DROP TABLE crown.fact_operator_session_v1_main;CREATE TABLE IF NOT EXISTS crown.fact_operator_session_v1_main(	keyvalue BIGINT ENCODE az64	  ,fact_operator_session_id BIGINT ENCODE az64	  ,eqpmnt_oprtnl_id BIGINT ENCODE az64	  ,location_oprtnl_id BIGINT ENCODE az64	  ,user_oprtnl_id BIGINT ENCODE az64	  ,start_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,end_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,start_meter_type_text_id VARCHAR(3) ENCODE lzo	  ,end_meter_type_text_id VARCHAR(3) ENCODE lzo	  ,start_hour_meter_sec BIGINT ENCODE az64	  ,end_hour_meter_sec BIGINT ENCODE az64	  ,start_logon_meter_sec BIGINT ENCODE az64	  ,end_logon_meter_sec BIGINT ENCODE az64	  ,start_key_meter_sec BIGINT ENCODE az64	  ,end_key_meter_sec BIGINT ENCODE az64	  ,start_travel_meter_sec BIGINT ENCODE az64	  ,end_travel_meter_sec BIGINT ENCODE az64	  ,start_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_work_meter_sec BIGINT ENCODE az64	  ,end_work_meter_sec BIGINT ENCODE az64	  ,start_presence_meter_sec BIGINT ENCODE az64	  ,end_presence_meter_sec BIGINT ENCODE az64	  ,start_odometer_m DOUBLE PRECISION ENCODE RAW	  ,end_odometer_m DOUBLE PRECISION ENCODE RAW	  ,start_qpr_travel_meter_sec BIGINT ENCODE az64	  ,end_qpr_travel_meter_sec BIGINT ENCODE az64	  ,start_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_module_server_outbound_guid VARCHAR(36) ENCODE lzo	  ,end_module_server_outbound_guid VARCHAR(36) ENCODE lzo	  ,start_date_utc_int BIGINT ENCODE az64	  ,end_date_utc_int BIGINT ENCODE az64	  ,dim_eqpmnt_id BIGINT ENCODE az64	  ,dim_location_id BIGINT ENCODE az64	  ,dim_user_id BIGINT ENCODE az64	  ,insert_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,update_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,start_date DATE ENCODE az64	  ,end_date DATE ENCODE az64)DISTSTYLE EVEN;ALTER TABLE crown.fact_operator_session_v1_main owner to awsuser;--DROP TABLE crown.fact_operator_session_v1_stg;CREATE TABLE IF NOT EXISTS crown.fact_operator_session_v1_stg(	fact_operator_session_id BIGINT ENCODE az64	  ,eqpmnt_oprtnl_id BIGINT ENCODE az64	  ,location_oprtnl_id BIGINT ENCODE az64	  ,user_oprtnl_id BIGINT ENCODE az64	  ,start_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,end_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,start_meter_type_text_id VARCHAR(3) ENCODE lzo	  ,end_meter_type_text_id VARCHAR(3) ENCODE lzo	  ,start_hour_meter_sec BIGINT ENCODE az64	  ,end_hour_meter_sec BIGINT ENCODE az64	  ,start_logon_meter_sec BIGINT ENCODE az64	  ,end_logon_meter_sec BIGINT ENCODE az64	  ,start_key_meter_sec BIGINT ENCODE az64	  ,end_key_meter_sec BIGINT ENCODE az64	  ,start_travel_meter_sec BIGINT ENCODE az64	  ,end_travel_meter_sec BIGINT ENCODE az64	  ,start_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_work_meter_sec BIGINT ENCODE az64	  ,end_work_meter_sec BIGINT ENCODE az64	  ,start_presence_meter_sec BIGINT ENCODE az64	  ,end_presence_meter_sec BIGINT ENCODE az64	  ,start_odometer_m DOUBLE PRECISION ENCODE RAW	  ,end_odometer_m DOUBLE PRECISION ENCODE RAW	  ,start_qpr_travel_meter_sec BIGINT ENCODE az64	  ,end_qpr_travel_meter_sec BIGINT ENCODE az64	  ,start_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_module_server_outbound_guid VARCHAR(36) ENCODE lzo	  ,end_module_server_outbound_guid VARCHAR(36) ENCODE lzo	  ,start_date_utc_int BIGINT ENCODE az64	  ,end_date_utc_int BIGINT ENCODE az64	  ,dim_eqpmnt_id BIGINT ENCODE az64	  ,dim_location_id BIGINT ENCODE az64	  ,dim_user_id BIGINT ENCODE az64	  ,insert_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,update_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,start_date DATE ENCODE az64	  ,end_date DATE ENCODE az64)DISTSTYLE EVEN;ALTER TABLE crown.fact_operator_session_v1_stg owner to awsuser;--DROP TABLE crown.fact_operator_session_v1_stg1;CREATE TABLE IF NOT EXISTS crown.fact_operator_session_v1_stg1(	keyvalue BIGINT ENCODE az64	  ,fact_operator_session_id BIGINT ENCODE az64	  ,eqpmnt_oprtnl_id BIGINT ENCODE az64	  ,location_oprtnl_id BIGINT ENCODE az64	  ,user_oprtnl_id BIGINT ENCODE az64	  ,start_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,end_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,start_meter_type_text_id VARCHAR(3) ENCODE lzo	  ,end_meter_type_text_id VARCHAR(3) ENCODE lzo	  ,start_hour_meter_sec BIGINT ENCODE az64	  ,end_hour_meter_sec BIGINT ENCODE az64	  ,start_logon_meter_sec BIGINT ENCODE az64	  ,end_logon_meter_sec BIGINT ENCODE az64	  ,start_key_meter_sec BIGINT ENCODE az64	  ,end_key_meter_sec BIGINT ENCODE az64	  ,start_travel_meter_sec BIGINT ENCODE az64	  ,end_travel_meter_sec BIGINT ENCODE az64	  ,start_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_work_meter_sec BIGINT ENCODE az64	  ,end_work_meter_sec BIGINT ENCODE az64	  ,start_presence_meter_sec BIGINT ENCODE az64	  ,end_presence_meter_sec BIGINT ENCODE az64	  ,start_odometer_m DOUBLE PRECISION ENCODE RAW	  ,end_odometer_m DOUBLE PRECISION ENCODE RAW	  ,start_qpr_travel_meter_sec BIGINT ENCODE az64	  ,end_qpr_travel_meter_sec BIGINT ENCODE az64	  ,start_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_module_server_outbound_guid VARCHAR(36) ENCODE lzo	  ,end_module_server_outbound_guid VARCHAR(36) ENCODE lzo	  ,start_date_utc_int BIGINT ENCODE az64	  ,end_date_utc_int BIGINT ENCODE az64	  ,dim_eqpmnt_id BIGINT ENCODE az64	  ,dim_location_id BIGINT ENCODE az64	  ,dim_user_id BIGINT ENCODE az64	  ,insert_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,update_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,start_date DATE ENCODE az64	  ,end_date DATE ENCODE az64)DISTSTYLE EVEN;ALTER TABLE crown.fact_operator_session_v1_stg1 owner to awsuser;--DROP TABLE crown.fact_operator_session_v3;CREATE TABLE IF NOT EXISTS crown.fact_operator_session_v3(	fact_operator_session_id BIGINT NOT NULL DEFAULT default_identity(170591 , 0 , ('1 ,1'::character varying)::text) ENCODE az64	  ,eqpmnt_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,location_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,user_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,start_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE RAW	  ,end_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE RAW	  ,start_meter_type_text_id VARCHAR(3) ENCODE lzo	  ,end_meter_type_text_id VARCHAR(3) ENCODE lzo	  ,start_hour_meter_sec BIGINT ENCODE az64	  ,end_hour_meter_sec BIGINT ENCODE az64	  ,start_logon_meter_sec BIGINT ENCODE az64	  ,end_logon_meter_sec BIGINT ENCODE az64	  ,start_key_meter_sec BIGINT ENCODE az64	  ,end_key_meter_sec BIGINT ENCODE az64	  ,start_travel_meter_sec BIGINT ENCODE az64	  ,end_travel_meter_sec BIGINT ENCODE az64	  ,start_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_work_meter_sec BIGINT ENCODE az64	  ,end_work_meter_sec BIGINT ENCODE az64	  ,start_presence_meter_sec BIGINT ENCODE az64	  ,end_presence_meter_sec BIGINT ENCODE az64	  ,start_odometer_m DOUBLE PRECISION ENCODE RAW	  ,end_odometer_m DOUBLE PRECISION ENCODE RAW	  ,start_qpr_travel_meter_sec BIGINT ENCODE az64	  ,end_qpr_travel_meter_sec BIGINT ENCODE az64	  ,start_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_module_server_outbound_guid VARCHAR(36) ENCODE lzo	  ,end_module_server_outbound_guid VARCHAR(36) ENCODE lzo	  ,start_date_utc_int BIGINT ENCODE az64	  ,end_date_utc_int BIGINT ENCODE az64	  ,dim_eqpmnt_id BIGINT NOT NULL  ENCODE az64	  ,insert_dt_utc TIMESTAMP WITHOUT TIME ZONE  DEFAULT ('now'::character varying)::timestamp without time zone ENCODE az64	  ,update_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,PRIMARY KEY (fact_operator_session_id))DISTSTYLE KEY DISTKEY (start_dt_utc) SORTKEY (	start_dt_utc	  , end_dt_utc	  , eqpmnt_oprtnl_id	  , location_oprtnl_id	  , user_oprtnl_id	);ALTER TABLE crown.fact_operator_session_v3 owner to awsuser;--DROP TABLE crown.fact_operator_session_v4;CREATE TABLE IF NOT EXISTS crown.fact_operator_session_v4(	fact_operator_session_id BIGINT NOT NULL DEFAULT default_identity(170630 , 0 , ('1 ,1'::character varying)::text) ENCODE zstd	  ,eqpmnt_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,location_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,user_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,start_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE RAW	  ,end_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE RAW	  ,start_meter_type_text_id VARCHAR(3) ENCODE zstd	  ,end_meter_type_text_id VARCHAR(3) ENCODE zstd	  ,start_hour_meter_sec BIGINT ENCODE zstd	  ,end_hour_meter_sec BIGINT ENCODE zstd	  ,start_logon_meter_sec BIGINT ENCODE zstd	  ,end_logon_meter_sec BIGINT ENCODE zstd	  ,start_key_meter_sec BIGINT ENCODE zstd	  ,end_key_meter_sec BIGINT ENCODE zstd	  ,start_travel_meter_sec BIGINT ENCODE zstd	  ,end_travel_meter_sec BIGINT ENCODE zstd	  ,start_hydrlc_meter_sec BIGINT ENCODE zstd	  ,end_hydrlc_meter_sec BIGINT ENCODE zstd	  ,start_work_meter_sec BIGINT ENCODE zstd	  ,end_work_meter_sec BIGINT ENCODE zstd	  ,start_presence_meter_sec BIGINT ENCODE zstd	  ,end_presence_meter_sec BIGINT ENCODE zstd	  ,start_odometer_m DOUBLE PRECISION ENCODE zstd	  ,end_odometer_m DOUBLE PRECISION ENCODE zstd	  ,start_qpr_travel_meter_sec BIGINT ENCODE az64	  ,end_qpr_travel_meter_sec BIGINT ENCODE az64	  ,start_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,end_qpr_hydrlc_meter_sec BIGINT ENCODE az64	  ,start_module_server_outbound_guid VARCHAR(36) ENCODE zstd	  ,end_module_server_outbound_guid VARCHAR(36) ENCODE zstd	  ,start_date_utc_int BIGINT ENCODE zstd	  ,end_date_utc_int BIGINT ENCODE zstd	  ,dim_eqpmnt_id BIGINT NOT NULL  ENCODE zstd	  ,PRIMARY KEY (fact_operator_session_id))DISTSTYLE KEY DISTKEY (start_dt_utc) SORTKEY (	start_dt_utc	  , end_dt_utc	  , eqpmnt_oprtnl_id	  , location_oprtnl_id	  , user_oprtnl_id	);ALTER TABLE crown.fact_operator_session_v4 owner to awsuser;--DROP TABLE crown.mv_tbl__crow_poc_view__0;CREATE TABLE IF NOT EXISTS crown.mv_tbl__crow_poc_view__0(	user_oprtnl_id BIGINT ENCODE az64	  ,current_user_first_name VARCHAR(50) ENCODE lzo	  ,current_user_middle_name VARCHAR(50) ENCODE lzo	  ,current_user_last_name VARCHAR(50) ENCODE lzo	  ,opcnt BIGINT ENCODE az64	  ,logon_time BIGINT ENCODE az64	  ,work_time BIGINT ENCODE az64	  ,work_time_rank_desc BIGINT ENCODE az64)DISTSTYLE EVEN;ALTER TABLE crown.mv_tbl__crow_poc_view__0 owner to rdsdb;--DROP TABLE crown.salesrecord;CREATE TABLE IF NOT EXISTS crown.salesrecord(	"region" VARCHAR(40) ENCODE lzo	  ,country VARCHAR(40) ENCODE lzo	  ,itemtype VARCHAR(40) ENCODE lzo	  ,saleschannel VARCHAR(40) ENCODE lzo	  ,orderpriority VARCHAR(40) ENCODE lzo	  ,orderdate VARCHAR(40) ENCODE lzo	  ,orderid BIGINT ENCODE az64	  ,shipdate DATE ENCODE az64	  ,unitsold BIGINT ENCODE az64	  ,unitprice DOUBLE PRECISION ENCODE RAW	  ,unitcost DOUBLE PRECISION ENCODE RAW	  ,totalrevenue DOUBLE PRECISION ENCODE RAW	  ,totalcost DOUBLE PRECISION ENCODE RAW	  ,totalprofit DOUBLE PRECISION ENCODE RAW)DISTSTYLE AUTO SORTKEY (	totalprofit	);ALTER TABLE crown.salesrecord owner to awsuser;--DROP TABLE crown.salesrecord_v2;CREATE TABLE IF NOT EXISTS crown.salesrecord_v2(	"region" VARCHAR(40) ENCODE RAW	  ,country VARCHAR(40) ENCODE lzo	  ,itemtype VARCHAR(40) ENCODE lzo	  ,saleschannel VARCHAR(40) ENCODE lzo	  ,orderpriority VARCHAR(40) ENCODE lzo	  ,orderdate VARCHAR(40) ENCODE lzo	  ,orderid BIGINT ENCODE az64	  ,shipdate DATE ENCODE az64	  ,unitsold BIGINT ENCODE az64	  ,unitprice DOUBLE PRECISION ENCODE RAW	  ,unitcost DOUBLE PRECISION ENCODE RAW	  ,totalrevenue DOUBLE PRECISION ENCODE RAW	  ,totalcost DOUBLE PRECISION ENCODE RAW	  ,totalprofit DOUBLE PRECISION ENCODE RAW	  ,rank BIGINT ENCODE az64)DISTSTYLE EVEN SORTKEY (	"region"	);ALTER TABLE crown.salesrecord_v2 owner to awsuser;--DROP TABLE extremereach.customer;CREATE TABLE IF NOT EXISTS extremereach.customer(	c_custkey BIGINT NOT NULL  ENCODE az64	  ,c_name VARCHAR(25) ENCODE lzo	  ,c_address VARCHAR(40) ENCODE lzo	  ,c_nationkey BIGINT ENCODE az64	  ,c_phone VARCHAR(15) ENCODE lzo	  ,c_acctbal NUMERIC(18 ,4) ENCODE az64	  ,c_mktsegment VARCHAR(10) ENCODE lzo	  ,c_comment VARCHAR(117) ENCODE lzo)DISTSTYLE ALL;ALTER TABLE extremereach.customer owner to awsuser;--DROP TABLE extremereach.lineitem;CREATE TABLE IF NOT EXISTS extremereach.lineitem(	l_orderkey BIGINT NOT NULL  ENCODE az64	  ,l_partkey BIGINT ENCODE az64	  ,l_suppkey BIGINT ENCODE az64	  ,l_linenumber INTEGER NOT NULL  ENCODE az64	  ,l_quantity NUMERIC(18 ,4) ENCODE az64	  ,l_extendedprice NUMERIC(18 ,4) ENCODE az64	  ,l_discount NUMERIC(18 ,4) ENCODE az64	  ,l_tax NUMERIC(18 ,4) ENCODE az64	  ,l_returnflag VARCHAR(1) ENCODE lzo	  ,l_linestatus VARCHAR(1) ENCODE lzo	  ,l_shipdate DATE ENCODE az64	  ,l_commitdate DATE ENCODE az64	  ,l_receiptdate DATE ENCODE RAW	  ,l_shipinstruct VARCHAR(25) ENCODE lzo	  ,l_shipmode VARCHAR(10) ENCODE lzo	  ,l_comment VARCHAR(44) ENCODE lzo)DISTSTYLE KEY DISTKEY (l_orderkey) SORTKEY (	l_receiptdate	);ALTER TABLE extremereach.lineitem owner to awsuser;--DROP TABLE extremereach.nation;CREATE TABLE IF NOT EXISTS extremereach.nation(	n_nationkey BIGINT NOT NULL  ENCODE az64	  ,n_name VARCHAR(25) ENCODE lzo	  ,n_regionkey BIGINT ENCODE az64	  ,n_comment VARCHAR(152) ENCODE lzo)DISTSTYLE ALL;ALTER TABLE extremereach.nation owner to awsuser;--DROP TABLE extremereach.orders;CREATE TABLE IF NOT EXISTS extremereach.orders(	o_orderkey BIGINT NOT NULL  ENCODE az64	  ,o_custkey BIGINT ENCODE az64	  ,o_orderstatus VARCHAR(1) ENCODE lzo	  ,o_totalprice NUMERIC(18 ,4) ENCODE az64	  ,o_orderdate DATE ENCODE RAW	  ,o_orderpriority VARCHAR(15) ENCODE lzo	  ,o_clerk VARCHAR(15) ENCODE lzo	  ,o_shippriority INTEGER ENCODE az64	  ,o_comment VARCHAR(79) ENCODE lzo)DISTSTYLE KEY DISTKEY (o_orderkey) SORTKEY (	o_orderdate	);ALTER TABLE extremereach.orders owner to awsuser;--DROP TABLE extremereach.part;CREATE TABLE IF NOT EXISTS extremereach.part(	p_partkey BIGINT NOT NULL  ENCODE az64	  ,p_name VARCHAR(55) ENCODE lzo	  ,p_mfgr VARCHAR(25) ENCODE lzo	  ,p_brand VARCHAR(10) ENCODE lzo	  ,p_type VARCHAR(25) ENCODE lzo	  ,p_size INTEGER ENCODE az64	  ,p_container VARCHAR(10) ENCODE lzo	  ,p_retailprice NUMERIC(18 ,4) ENCODE az64	  ,p_comment VARCHAR(23) ENCODE lzo)DISTSTYLE ALL;ALTER TABLE extremereach.part owner to awsuser;--DROP TABLE extremereach.partsupp;CREATE TABLE IF NOT EXISTS extremereach.partsupp(	ps_partkey BIGINT NOT NULL  ENCODE az64	  ,ps_suppkey BIGINT NOT NULL  ENCODE az64	  ,ps_availqty INTEGER ENCODE az64	  ,ps_supplycost NUMERIC(18 ,4) ENCODE az64	  ,ps_comment VARCHAR(199) ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE extremereach.partsupp owner to awsuser;--DROP TABLE extremereach."region";CREATE TABLE IF NOT EXISTS extremereach."region"(	r_regionkey BIGINT NOT NULL  ENCODE az64	  ,r_name VARCHAR(25) ENCODE lzo	  ,r_comment VARCHAR(152) ENCODE lzo)DISTSTYLE ALL;ALTER TABLE extremereach."region" owner to awsuser;--DROP TABLE extremereach.supplier;CREATE TABLE IF NOT EXISTS extremereach.supplier(	s_suppkey BIGINT NOT NULL  ENCODE az64	  ,s_name VARCHAR(25) ENCODE lzo	  ,s_address VARCHAR(40) ENCODE lzo	  ,s_nationkey BIGINT ENCODE az64	  ,s_phone VARCHAR(15) ENCODE lzo	  ,s_acctbal NUMERIC(18 ,4) ENCODE az64	  ,s_comment VARCHAR(101) ENCODE lzo)DISTSTYLE ALL;ALTER TABLE extremereach.supplier owner to awsuser;--DROP TABLE information_schema.sql_features;CREATE TABLE IF NOT EXISTS information_schema.sql_features(	feature_id INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,feature_name INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,sub_feature_id INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,sub_feature_name INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,is_supported INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,is_verified_by INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,comments INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE information_schema.sql_features owner to rdsdb;--DROP TABLE information_schema.sql_implementation_info;CREATE TABLE IF NOT EXISTS information_schema.sql_implementation_info(	implementation_info_id INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,implementation_info_name INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,integer_value INFORMATION_SCHEMA.CARDINAL_NUMBER ENCODE RAW	  ,character_value INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,comments INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE information_schema.sql_implementation_info owner to rdsdb;--DROP TABLE information_schema.sql_languages;CREATE TABLE IF NOT EXISTS information_schema.sql_languages(	sql_language_source INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,sql_language_year INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,sql_language_conformance INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,sql_language_integrity INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,sql_language_implementation INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,sql_language_binding_style INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,sql_language_programming_language INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE information_schema.sql_languages owner to rdsdb;--DROP TABLE information_schema.sql_packages;CREATE TABLE IF NOT EXISTS information_schema.sql_packages(	feature_id INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,feature_name INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,is_supported INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,is_verified_by INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,comments INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE information_schema.sql_packages owner to rdsdb;--DROP TABLE information_schema.sql_sizing;CREATE TABLE IF NOT EXISTS information_schema.sql_sizing(	sizing_id INFORMATION_SCHEMA.CARDINAL_NUMBER ENCODE RAW	  ,sizing_name INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,supported_value INFORMATION_SCHEMA.CARDINAL_NUMBER ENCODE RAW	  ,comments INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE information_schema.sql_sizing owner to rdsdb;--DROP TABLE information_schema.sql_sizing_profiles;CREATE TABLE IF NOT EXISTS information_schema.sql_sizing_profiles(	sizing_id INFORMATION_SCHEMA.CARDINAL_NUMBER ENCODE RAW	  ,sizing_name INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,profile_id INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW	  ,required_value INFORMATION_SCHEMA.CARDINAL_NUMBER ENCODE RAW	  ,comments INFORMATION_SCHEMA.CHAR_DATA ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE information_schema.sql_sizing_profiles owner to rdsdb;--DROP TABLE merck.big_table;CREATE TABLE IF NOT EXISTS merck.big_table(	tgt_id BIGINT NOT NULL  ENCODE az64	  ,"owner" VARCHAR(128) NOT NULL  ENCODE lzo	  ,object_name VARCHAR(128) NOT NULL  ENCODE lzo	  ,subobject_name VARCHAR(128) ENCODE lzo	  ,object_id BIGINT NOT NULL  ENCODE az64	  ,data_object_id BIGINT ENCODE az64	  ,object_type VARCHAR(23) ENCODE lzo	  ,created DATE NOT NULL  ENCODE az64	  ,last_ddl_time DATE NOT NULL  ENCODE az64	  ,"timestamp" VARCHAR(19) ENCODE lzo	  ,status VARCHAR(7) ENCODE lzo	  ,"temporary" VARCHAR(1) ENCODE lzo	  ,"generated" VARCHAR(1) ENCODE lzo	  ,secondary VARCHAR(1) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE merck.big_table owner to awsuser;--DROP TABLE pg_catalog.padb_config_harvest;CREATE TABLE IF NOT EXISTS pg_catalog.padb_config_harvest(	name CHAR(136) NOT NULL  ENCODE lzo	  ,harvest INTEGER NOT NULL  ENCODE az64	  ,archive INTEGER NOT NULL  ENCODE az64	  ,directory CHAR(500) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.padb_config_harvest owner to rdsdb;--DROP TABLE pg_catalog.pg_aggregate;CREATE TABLE IF NOT EXISTS pg_catalog.pg_aggregate(	aggfnoid REGPROC NOT NULL  ENCODE RAW	  ,aggtransfn REGPROC NOT NULL  ENCODE RAW	  ,aggfinalfn REGPROC NOT NULL  ENCODE RAW	  ,aggtranstype OID NOT NULL  ENCODE RAW	  ,agginitval TEXT ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_aggregate owner to rdsdb;--DROP TABLE pg_catalog.pg_am;CREATE TABLE IF NOT EXISTS pg_catalog.pg_am(	amname NAME NOT NULL  ENCODE RAW	  ,amowner INTEGER NOT NULL  ENCODE RAW	  ,amstrategies SMALLINT NOT NULL  ENCODE RAW	  ,amsupport SMALLINT NOT NULL  ENCODE RAW	  ,amorderstrategy SMALLINT NOT NULL  ENCODE RAW	  ,amcanunique BOOLEAN NOT NULL  ENCODE RAW	  ,amcanmulticol BOOLEAN NOT NULL  ENCODE RAW	  ,amindexnulls BOOLEAN NOT NULL  ENCODE RAW	  ,amconcurrent BOOLEAN NOT NULL  ENCODE RAW	  ,amgettuple REGPROC NOT NULL  ENCODE RAW	  ,aminsert REGPROC NOT NULL  ENCODE RAW	  ,ambeginscan REGPROC NOT NULL  ENCODE RAW	  ,amrescan REGPROC NOT NULL  ENCODE RAW	  ,amendscan REGPROC NOT NULL  ENCODE RAW	  ,ammarkpos REGPROC NOT NULL  ENCODE RAW	  ,amrestrpos REGPROC NOT NULL  ENCODE RAW	  ,ambuild REGPROC NOT NULL  ENCODE RAW	  ,ambulkdelete REGPROC NOT NULL  ENCODE RAW	  ,amvacuumcleanup REGPROC NOT NULL  ENCODE RAW	  ,amcostestimate REGPROC NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_am owner to rdsdb;--DROP TABLE pg_catalog.pg_amop;CREATE TABLE IF NOT EXISTS pg_catalog.pg_amop(	amopclaid OID NOT NULL  ENCODE RAW	  ,amopsubtype OID NOT NULL  ENCODE RAW	  ,amopstrategy SMALLINT NOT NULL  ENCODE RAW	  ,amopreqcheck BOOLEAN NOT NULL  ENCODE RAW	  ,amopopr OID NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_amop owner to rdsdb;--DROP TABLE pg_catalog.pg_amproc;CREATE TABLE IF NOT EXISTS pg_catalog.pg_amproc(	amopclaid OID NOT NULL  ENCODE RAW	  ,amprocsubtype OID NOT NULL  ENCODE RAW	  ,amprocnum SMALLINT NOT NULL  ENCODE RAW	  ,amproc REGPROC NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_amproc owner to rdsdb;--DROP TABLE pg_catalog.pg_attrdef;CREATE TABLE IF NOT EXISTS pg_catalog.pg_attrdef(	adrelid OID NOT NULL  ENCODE RAW	  ,adnum SMALLINT NOT NULL  ENCODE RAW	  ,adbin TEXT ENCODE RAW	  ,adsrc TEXT ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_attrdef owner to rdsdb;--DROP TABLE pg_catalog.pg_attrdef_journal;CREATE TABLE IF NOT EXISTS pg_catalog.pg_attrdef_journal(	unqid BIGINT NOT NULL  ENCODE az64	  ,ownerxid BIGINT NOT NULL  ENCODE az64	  ,version BIGINT NOT NULL  ENCODE az64	  ,isdeleted BOOLEAN NOT NULL  ENCODE RAW	  ,adrelid OID NOT NULL  ENCODE RAW	  ,adnum SMALLINT NOT NULL  ENCODE az64	  ,adbin TEXT ENCODE lzo	  ,adsrc TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_attrdef_journal owner to rdsdb;--DROP TABLE pg_catalog.pg_attribute;CREATE TABLE IF NOT EXISTS pg_catalog.pg_attribute(	attrelid OID NOT NULL  ENCODE RAW	  ,attname NAME NOT NULL  ENCODE RAW	  ,atttypid OID NOT NULL  ENCODE RAW	  ,attstattarget INTEGER NOT NULL  ENCODE RAW	  ,attlen SMALLINT NOT NULL  ENCODE RAW	  ,attnum SMALLINT NOT NULL  ENCODE RAW	  ,attndims INTEGER NOT NULL  ENCODE RAW	  ,attcacheoff INTEGER NOT NULL  ENCODE RAW	  ,atttypmod INTEGER NOT NULL  ENCODE RAW	  ,attbyval BOOLEAN NOT NULL  ENCODE RAW	  ,attstorage "CHAR" NOT NULL  ENCODE RAW	  ,attalign "CHAR" NOT NULL  ENCODE RAW	  ,attnotnull BOOLEAN NOT NULL  ENCODE RAW	  ,atthasdef BOOLEAN NOT NULL  ENCODE RAW	  ,attisdropped BOOLEAN NOT NULL  ENCODE RAW	  ,attislocal BOOLEAN NOT NULL  ENCODE RAW	  ,attinhcount INTEGER NOT NULL  ENCODE RAW	  ,attisdistkey BOOLEAN NOT NULL  ENCODE RAW	  ,attispreloaded BOOLEAN NOT NULL  ENCODE RAW	  ,attsortkeyord INTEGER NOT NULL  ENCODE RAW	  ,attencodingtype SMALLINT NOT NULL  ENCODE RAW	  ,attencrypttype SMALLINT NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_attribute owner to rdsdb;--DROP TABLE pg_catalog.pg_attribute_acl;CREATE TABLE IF NOT EXISTS pg_catalog.pg_attribute_acl(	attrelid OID NOT NULL  ENCODE RAW	  ,attnum SMALLINT NOT NULL  ENCODE az64	  ,attacl ACLITEM[] ENCODE RAW	  ,attaclmodifiedby INTEGER NOT NULL  ENCODE az64	  ,attaclmodifiedtime TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_attribute_acl owner to rdsdb;--DROP TABLE pg_catalog.pg_attribute_journal;CREATE TABLE IF NOT EXISTS pg_catalog.pg_attribute_journal(	unqid BIGINT NOT NULL  ENCODE az64	  ,ownerxid BIGINT NOT NULL  ENCODE az64	  ,version BIGINT NOT NULL  ENCODE az64	  ,isdeleted BOOLEAN NOT NULL  ENCODE RAW	  ,attrelid OID NOT NULL  ENCODE RAW	  ,attname NAME NOT NULL  ENCODE RAW	  ,atttypid OID NOT NULL  ENCODE RAW	  ,attstattarget INTEGER NOT NULL  ENCODE az64	  ,attlen SMALLINT NOT NULL  ENCODE az64	  ,attnum SMALLINT NOT NULL  ENCODE az64	  ,attndims INTEGER NOT NULL  ENCODE az64	  ,attcacheoff INTEGER NOT NULL  ENCODE az64	  ,atttypmod INTEGER NOT NULL  ENCODE az64	  ,attbyval BOOLEAN NOT NULL  ENCODE RAW	  ,attstorage "CHAR" NOT NULL  ENCODE RAW	  ,attalign "CHAR" NOT NULL  ENCODE RAW	  ,attnotnull BOOLEAN NOT NULL  ENCODE RAW	  ,atthasdef BOOLEAN NOT NULL  ENCODE RAW	  ,attisdropped BOOLEAN NOT NULL  ENCODE RAW	  ,attislocal BOOLEAN NOT NULL  ENCODE RAW	  ,attinhcount INTEGER NOT NULL  ENCODE az64	  ,attisdistkey BOOLEAN NOT NULL  ENCODE RAW	  ,attispreloaded BOOLEAN NOT NULL  ENCODE RAW	  ,attsortkeyord INTEGER NOT NULL  ENCODE az64	  ,attencodingtype SMALLINT NOT NULL  ENCODE az64	  ,attencrypttype SMALLINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_attribute_journal owner to rdsdb;--DROP TABLE pg_catalog.pg_bar_ddllog;CREATE TABLE IF NOT EXISTS pg_catalog.pg_bar_ddllog(	bar_ddllog_dboid OID NOT NULL  ENCODE RAW	  ,bar_ddllog_xid XID NOT NULL  ENCODE RAW	  ,bar_ddllog_txt TEXT ENCODE RAW	  ,bar_ddllog_cmd SMALLINT ENCODE RAW	  ,bar_ddllog_lng SMALLINT ENCODE RAW	  ,bar_ddllog_oids TEXT ENCODE RAW	  ,bar_ddllog_names TEXT ENCODE RAW	  ,bar_ddllog_path TEXT ENCODE RAW)DISTSTYLE EVEN;COMMENT ON table pg_catalog.pg_bar_ddllog IS '"hh:mm:ss , ANSI SQL time"'

[sp2]
query2 = ALTER TABLE pg_catalog.pg_bar_ddllog owner to rdsdb;--DROP TABLE pg_catalog.pg_bar_repos;CREATE TABLE IF NOT EXISTS pg_catalog.pg_bar_repos(	bar_repos_name NAME NOT NULL  ENCODE RAW	  ,bar_repos_leader_path TEXT ENCODE RAW	  ,bar_repos_data_paths TEXT[] ENCODE RAW)DISTSTYLE EVEN;COMMENT ON table pg_catalog.pg_bar_repos IS '"convert encoding name to encoding id"'

[sp3]
query3 = ALTER TABLE pg_catalog.pg_bar_repos owner to rdsdb;--DROP TABLE pg_catalog.pg_bar_state;CREATE TABLE IF NOT EXISTS pg_catalog.pg_bar_state(	bar_state_dboid OID NOT NULL  ENCODE RAW	  ,bar_state_backup_name TEXT ENCODE RAW	  ,bar_state_restore_xid XID ENCODE RAW	  ,bar_state_restore_suspension BOOLEAN ENCODE RAW)DISTSTYLE EVEN;COMMENT ON table pg_catalog.pg_bar_state IS '"r-tree(internal)"'

[sp4]
query4 = ALTER TABLE pg_catalog.pg_bar_state owner to rdsdb;--DROP TABLE pg_catalog.pg_cast;CREATE TABLE IF NOT EXISTS pg_catalog.pg_cast(	castsource OID NOT NULL  ENCODE RAW	  ,casttarget OID NOT NULL  ENCODE RAW	  ,castfunc OID NOT NULL  ENCODE RAW	  ,castcontext "CHAR" NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_cast owner to rdsdb;--DROP TABLE pg_catalog.pg_class;CREATE TABLE IF NOT EXISTS pg_catalog.pg_class(	relname NAME NOT NULL  ENCODE RAW	  ,relnamespace OID NOT NULL  ENCODE RAW	  ,reltype OID NOT NULL  ENCODE RAW	  ,relowner INTEGER NOT NULL  ENCODE RAW	  ,relam OID NOT NULL  ENCODE RAW	  ,relfilenode OID NOT NULL  ENCODE RAW	  ,reltablespace OID NOT NULL  ENCODE RAW	  ,relpages INTEGER NOT NULL  ENCODE RAW	  ,reltuples REAL NOT NULL  ENCODE RAW	  ,reltoastrelid OID NOT NULL  ENCODE RAW	  ,reltoastidxid OID NOT NULL  ENCODE RAW	  ,relhasindex BOOLEAN NOT NULL  ENCODE RAW	  ,relisshared BOOLEAN NOT NULL  ENCODE RAW	  ,relkind "CHAR" NOT NULL  ENCODE RAW	  ,relnatts SMALLINT NOT NULL  ENCODE RAW	  ,relexternid OID NOT NULL  ENCODE RAW	  ,relisreplicated BOOLEAN NOT NULL  ENCODE RAW	  ,relispinned BOOLEAN NOT NULL  ENCODE RAW	  ,reldiststyle SMALLINT NOT NULL  ENCODE RAW	  ,relprojbaseid OID NOT NULL  ENCODE RAW	  ,relchecks SMALLINT NOT NULL  ENCODE RAW	  ,reltriggers SMALLINT NOT NULL  ENCODE RAW	  ,relukeys SMALLINT NOT NULL  ENCODE RAW	  ,relfkeys SMALLINT NOT NULL  ENCODE RAW	  ,relrefs SMALLINT NOT NULL  ENCODE RAW	  ,relhasoids BOOLEAN NOT NULL  ENCODE RAW	  ,relhaspkey BOOLEAN NOT NULL  ENCODE RAW	  ,relhasrules BOOLEAN NOT NULL  ENCODE RAW	  ,relhassubclass BOOLEAN NOT NULL  ENCODE RAW	  ,relacl ACLITEM[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_class owner to rdsdb;--DROP TABLE pg_catalog.pg_class_extended;CREATE TABLE IF NOT EXISTS pg_catalog.pg_class_extended(	reloid OID NOT NULL  ENCODE RAW	  ,colnum SMALLINT NOT NULL  ENCODE az64	  ,value TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_class_extended owner to rdsdb;--DROP TABLE pg_catalog.pg_class_extended_journal;CREATE TABLE IF NOT EXISTS pg_catalog.pg_class_extended_journal(	unqid BIGINT NOT NULL  ENCODE az64	  ,ownerxid BIGINT NOT NULL  ENCODE az64	  ,version BIGINT NOT NULL  ENCODE az64	  ,isdeleted BOOLEAN NOT NULL  ENCODE RAW	  ,reloid OID NOT NULL  ENCODE RAW	  ,colnum SMALLINT NOT NULL  ENCODE az64	  ,value TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_class_extended_journal owner to rdsdb;--DROP TABLE pg_catalog.pg_class_journal;CREATE TABLE IF NOT EXISTS pg_catalog.pg_class_journal(	unqid BIGINT NOT NULL  ENCODE az64	  ,ownerxid BIGINT NOT NULL  ENCODE az64	  ,version BIGINT NOT NULL  ENCODE az64	  ,isdeleted BOOLEAN NOT NULL  ENCODE RAW	  ,relname NAME NOT NULL  ENCODE RAW	  ,relnamespace OID NOT NULL  ENCODE RAW	  ,reltype OID NOT NULL  ENCODE RAW	  ,relowner INTEGER NOT NULL  ENCODE az64	  ,relam OID NOT NULL  ENCODE RAW	  ,relfilenode OID NOT NULL  ENCODE RAW	  ,reltablespace OID NOT NULL  ENCODE RAW	  ,relpages INTEGER NOT NULL  ENCODE az64	  ,reltuples REAL NOT NULL  ENCODE RAW	  ,reltoastrelid OID NOT NULL  ENCODE RAW	  ,reltoastidxid OID NOT NULL  ENCODE RAW	  ,relhasindex BOOLEAN NOT NULL  ENCODE RAW	  ,relisshared BOOLEAN NOT NULL  ENCODE RAW	  ,relkind "CHAR" NOT NULL  ENCODE RAW	  ,relnatts SMALLINT NOT NULL  ENCODE az64	  ,relexternid INTEGER NOT NULL  ENCODE az64	  ,relisreplicated BOOLEAN NOT NULL  ENCODE RAW	  ,relispinned BOOLEAN NOT NULL  ENCODE RAW	  ,reldiststyle SMALLINT NOT NULL  ENCODE az64	  ,relprojbaseid OID NOT NULL  ENCODE RAW	  ,relchecks SMALLINT NOT NULL  ENCODE az64	  ,reltriggers SMALLINT NOT NULL  ENCODE az64	  ,relukeys SMALLINT NOT NULL  ENCODE az64	  ,relfkeys SMALLINT NOT NULL  ENCODE az64	  ,relrefs SMALLINT NOT NULL  ENCODE az64	  ,relhasoids BOOLEAN NOT NULL  ENCODE RAW	  ,relhaspkey BOOLEAN NOT NULL  ENCODE RAW	  ,relhasrules BOOLEAN NOT NULL  ENCODE RAW	  ,relhassubclass BOOLEAN NOT NULL  ENCODE RAW	  ,relacl ACLITEM[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_class_journal owner to rdsdb;--DROP TABLE pg_catalog.pg_class_stage;CREATE TABLE IF NOT EXISTS pg_catalog.pg_class_stage(	relname NAME NOT NULL  ENCODE RAW	  ,relnamespace OID NOT NULL  ENCODE RAW	  ,reltype OID NOT NULL  ENCODE RAW	  ,relowner INTEGER NOT NULL  ENCODE az64	  ,relam OID NOT NULL  ENCODE RAW	  ,relfilenode OID NOT NULL  ENCODE RAW	  ,reltablespace OID NOT NULL  ENCODE RAW	  ,relpages INTEGER NOT NULL  ENCODE az64	  ,reltuples REAL NOT NULL  ENCODE RAW	  ,reltoastrelid OID NOT NULL  ENCODE RAW	  ,reltoastidxid OID NOT NULL  ENCODE RAW	  ,relhasindex BOOLEAN NOT NULL  ENCODE RAW	  ,relisshared BOOLEAN NOT NULL  ENCODE RAW	  ,relkind "CHAR" NOT NULL  ENCODE RAW	  ,relnatts SMALLINT NOT NULL  ENCODE az64	  ,relexternid INTEGER NOT NULL  ENCODE az64	  ,relisreplicated BOOLEAN NOT NULL  ENCODE RAW	  ,relispinned BOOLEAN NOT NULL  ENCODE RAW	  ,reldiststyle SMALLINT NOT NULL  ENCODE az64	  ,relprojbaseid OID NOT NULL  ENCODE RAW	  ,relchecks SMALLINT NOT NULL  ENCODE az64	  ,reltriggers SMALLINT NOT NULL  ENCODE az64	  ,relukeys SMALLINT NOT NULL  ENCODE az64	  ,relfkeys SMALLINT NOT NULL  ENCODE az64	  ,relrefs SMALLINT NOT NULL  ENCODE az64	  ,relhasoids BOOLEAN NOT NULL  ENCODE RAW	  ,relhaspkey BOOLEAN NOT NULL  ENCODE RAW	  ,relhasrules BOOLEAN NOT NULL  ENCODE RAW	  ,relhassubclass BOOLEAN NOT NULL  ENCODE RAW	  ,relacl ACLITEM[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_class_stage owner to rdsdb;--DROP TABLE pg_catalog.pg_conf;CREATE TABLE IF NOT EXISTS pg_catalog.pg_conf(	"key" NAME NOT NULL  ENCODE RAW	  ,value TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_conf owner to rdsdb;--DROP TABLE pg_catalog.pg_constraint;CREATE TABLE IF NOT EXISTS pg_catalog.pg_constraint(	conname NAME NOT NULL  ENCODE RAW	  ,connamespace OID NOT NULL  ENCODE RAW	  ,contype "CHAR" NOT NULL  ENCODE RAW	  ,condeferrable BOOLEAN NOT NULL  ENCODE RAW	  ,condeferred BOOLEAN NOT NULL  ENCODE RAW	  ,conrelid OID NOT NULL  ENCODE RAW	  ,contypid OID NOT NULL  ENCODE RAW	  ,confrelid OID NOT NULL  ENCODE RAW	  ,confupdtype "CHAR" NOT NULL  ENCODE RAW	  ,confdeltype "CHAR" NOT NULL  ENCODE RAW	  ,confmatchtype "CHAR" NOT NULL  ENCODE RAW	  ,conkey SMALLINT[] ENCODE RAW	  ,confkey SMALLINT[] ENCODE RAW	  ,conbin TEXT ENCODE RAW	  ,consrc TEXT ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_constraint owner to rdsdb;--DROP TABLE pg_catalog.pg_constraint_journal;CREATE TABLE IF NOT EXISTS pg_catalog.pg_constraint_journal(	unqid BIGINT NOT NULL  ENCODE az64	  ,ownerxid BIGINT NOT NULL  ENCODE az64	  ,version BIGINT NOT NULL  ENCODE az64	  ,isdeleted BOOLEAN NOT NULL  ENCODE RAW	  ,conname NAME NOT NULL  ENCODE RAW	  ,connamespace OID NOT NULL  ENCODE RAW	  ,contype "CHAR" NOT NULL  ENCODE RAW	  ,condeferrable BOOLEAN NOT NULL  ENCODE RAW	  ,condeferred BOOLEAN NOT NULL  ENCODE RAW	  ,conrelid OID NOT NULL  ENCODE RAW	  ,contypid OID NOT NULL  ENCODE RAW	  ,confrelid OID NOT NULL  ENCODE RAW	  ,confupdtype "CHAR" NOT NULL  ENCODE RAW	  ,confdeltype "CHAR" NOT NULL  ENCODE RAW	  ,confmatchtype "CHAR" NOT NULL  ENCODE RAW	  ,conkey SMALLINT[] ENCODE RAW	  ,confkey SMALLINT[] ENCODE RAW	  ,conbin TEXT ENCODE lzo	  ,consrc TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_constraint_journal owner to rdsdb;--DROP TABLE pg_catalog.pg_conversion;CREATE TABLE IF NOT EXISTS pg_catalog.pg_conversion(	conname NAME NOT NULL  ENCODE RAW	  ,connamespace OID NOT NULL  ENCODE RAW	  ,conowner INTEGER NOT NULL  ENCODE RAW	  ,conforencoding INTEGER NOT NULL  ENCODE RAW	  ,contoencoding INTEGER NOT NULL  ENCODE RAW	  ,conproc REGPROC NOT NULL  ENCODE RAW	  ,condefault BOOLEAN NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_conversion owner to rdsdb;--DROP TABLE pg_catalog.pg_database;CREATE TABLE IF NOT EXISTS pg_catalog.pg_database(	datname NAME NOT NULL  ENCODE RAW	  ,datdba INTEGER NOT NULL  ENCODE RAW	  ,"encoding" INTEGER NOT NULL  ENCODE RAW	  ,datistemplate BOOLEAN NOT NULL  ENCODE RAW	  ,datallowconn BOOLEAN NOT NULL  ENCODE RAW	  ,datlastsysoid OID NOT NULL  ENCODE RAW	  ,datvacuumxid XID NOT NULL  ENCODE RAW	  ,datfrozenxid XID NOT NULL  ENCODE RAW	  ,dattablespace OID NOT NULL  ENCODE RAW	  ,datconfig TEXT[] ENCODE RAW	  ,datacl ACLITEM[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_database owner to rdsdb;--DROP TABLE pg_catalog.pg_database_extended;CREATE TABLE IF NOT EXISTS pg_catalog.pg_database_extended(	dbid OID NOT NULL  ENCODE RAW	  ,colnum SMALLINT NOT NULL  ENCODE az64	  ,value TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_database_extended owner to rdsdb;--DROP TABLE pg_catalog.pg_datashare;CREATE TABLE IF NOT EXISTS pg_catalog.pg_datashare(	sharename NAME NOT NULL  ENCODE RAW	  ,sharedb OID NOT NULL  ENCODE RAW	  ,shareowner INTEGER NOT NULL  ENCODE az64	  ,createdate TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,publicaccess BOOLEAN NOT NULL  ENCODE RAW	  ,shareuser INTEGER NOT NULL  ENCODE az64	  ,producerclusterid NAME NOT NULL  ENCODE RAW	  ,flag XID ENCODE RAW	  ,shareacl ACLITEM[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_datashare owner to rdsdb;--DROP TABLE pg_catalog.pg_datashare_consumers;CREATE TABLE IF NOT EXISTS pg_catalog.pg_datashare_consumers(	shareid OID NOT NULL  ENCODE RAW	  ,consumeraccount NAME NOT NULL  ENCODE RAW	  ,consumernamespace NAME NOT NULL  ENCODE RAW	  ,sharedate TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_datashare_consumers owner to rdsdb;--DROP TABLE pg_catalog.pg_datashare_objects;CREATE TABLE IF NOT EXISTS pg_catalog.pg_datashare_objects(	shareid OID NOT NULL  ENCODE RAW	  ,objtype "CHAR" NOT NULL  ENCODE RAW	  ,objid OID NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_datashare_objects owner to rdsdb;--DROP TABLE pg_catalog.pg_default_acl;CREATE TABLE IF NOT EXISTS pg_catalog.pg_default_acl(	defacluser INTEGER NOT NULL  ENCODE az64	  ,defaclnamespace OID NOT NULL  ENCODE RAW	  ,defaclobjtype "CHAR" NOT NULL  ENCODE RAW	  ,defaclacl ACLITEM[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_default_acl owner to rdsdb;--DROP TABLE pg_catalog.pg_depend;CREATE TABLE IF NOT EXISTS pg_catalog.pg_depend(	classid OID NOT NULL  ENCODE RAW	  ,objid OID NOT NULL  ENCODE RAW	  ,objsubid INTEGER NOT NULL  ENCODE RAW	  ,refclassid OID NOT NULL  ENCODE RAW	  ,refobjid OID NOT NULL  ENCODE RAW	  ,refobjsubid INTEGER NOT NULL  ENCODE RAW	  ,deptype "CHAR" NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_depend owner to rdsdb;--DROP TABLE pg_catalog.pg_depend_journal;CREATE TABLE IF NOT EXISTS pg_catalog.pg_depend_journal(	unqid BIGINT NOT NULL  ENCODE az64	  ,ownerxid BIGINT NOT NULL  ENCODE az64	  ,version BIGINT NOT NULL  ENCODE az64	  ,isdeleted BOOLEAN NOT NULL  ENCODE RAW	  ,classid OID NOT NULL  ENCODE RAW	  ,objid OID NOT NULL  ENCODE RAW	  ,objsubid INTEGER NOT NULL  ENCODE az64	  ,refclassid OID NOT NULL  ENCODE RAW	  ,refobjid OID NOT NULL  ENCODE RAW	  ,refobjsubid INTEGER NOT NULL  ENCODE az64	  ,deptype "CHAR" NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_depend_journal owner to rdsdb;--DROP TABLE pg_catalog.pg_description;CREATE TABLE IF NOT EXISTS pg_catalog.pg_description(	objoid OID NOT NULL  ENCODE RAW	  ,classoid OID NOT NULL  ENCODE RAW	  ,objsubid INTEGER NOT NULL  ENCODE RAW	  ,description TEXT ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_description owner to rdsdb;--DROP TABLE pg_catalog.pg_external_database;CREATE TABLE IF NOT EXISTS pg_catalog.pg_external_database(	dbid OID NOT NULL  ENCODE RAW	  ,sharedbid OID NOT NULL  ENCODE RAW	  ,createdate TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,dbkind SMALLINT NOT NULL  ENCODE az64	  ,shareid TEXT ENCODE lzo	  ,dboptions TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_external_database owner to rdsdb;--DROP TABLE pg_catalog.pg_external_schema;CREATE TABLE IF NOT EXISTS pg_catalog.pg_external_schema(	esoid OID NOT NULL  ENCODE RAW	  ,eskind SMALLINT NOT NULL  ENCODE az64	  ,esdbname TEXT ENCODE lzo	  ,esoptions TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_external_schema owner to rdsdb;--DROP TABLE pg_catalog.pg_group;CREATE TABLE IF NOT EXISTS pg_catalog.pg_group(	groname NAME NOT NULL  ENCODE RAW	  ,grosysid INTEGER NOT NULL  ENCODE RAW	  ,grolist INTEGER[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_group owner to rdsdb;--DROP TABLE pg_catalog.pg_group_extended;CREATE TABLE IF NOT EXISTS pg_catalog.pg_group_extended(	grosysid INTEGER NOT NULL  ENCODE az64	  ,colnum SMALLINT NOT NULL  ENCODE az64	  ,value TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_group_extended owner to rdsdb;--DROP TABLE pg_catalog.pg_highwatermark;CREATE TABLE IF NOT EXISTS pg_catalog.pg_highwatermark(	hwmrelid OID ENCODE RAW	  ,hwmcolnum INTEGER ENCODE az64	  ,hwm INTEGER ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_highwatermark owner to rdsdb;--DROP TABLE pg_catalog.pg_iam_permission;CREATE TABLE IF NOT EXISTS pg_catalog.pg_iam_permission(	iamarn TEXT ENCODE lzo	  ,iamacl ACLITEM[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_iam_permission owner to rdsdb;--DROP TABLE pg_catalog.pg_index;CREATE TABLE IF NOT EXISTS pg_catalog.pg_index(	indexrelid OID NOT NULL  ENCODE RAW	  ,indrelid OID NOT NULL  ENCODE RAW	  ,indkey INT2VECTOR NOT NULL  ENCODE RAW	  ,indclass OIDVECTOR NOT NULL  ENCODE RAW	  ,indnatts SMALLINT NOT NULL  ENCODE RAW	  ,indisunique BOOLEAN NOT NULL  ENCODE RAW	  ,indisprimary BOOLEAN NOT NULL  ENCODE RAW	  ,indisclustered BOOLEAN NOT NULL  ENCODE RAW	  ,indexprs TEXT ENCODE RAW	  ,indpred TEXT ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_index owner to rdsdb;--DROP TABLE pg_catalog.pg_inherits;CREATE TABLE IF NOT EXISTS pg_catalog.pg_inherits(	inhrelid OID NOT NULL  ENCODE RAW	  ,inhparent OID NOT NULL  ENCODE RAW	  ,inhseqno INTEGER NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_inherits owner to rdsdb;--DROP TABLE pg_catalog.pg_language;CREATE TABLE IF NOT EXISTS pg_catalog.pg_language(	lanname NAME NOT NULL  ENCODE RAW	  ,lanispl BOOLEAN NOT NULL  ENCODE RAW	  ,lanpltrusted BOOLEAN NOT NULL  ENCODE RAW	  ,lanplcallfoid OID NOT NULL  ENCODE RAW	  ,lanvalidator OID NOT NULL  ENCODE RAW	  ,lanacl ACLITEM[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_language owner to rdsdb;--DROP TABLE pg_catalog.pg_largeobject;CREATE TABLE IF NOT EXISTS pg_catalog.pg_largeobject(	loid OID NOT NULL  ENCODE RAW	  ,pageno INTEGER NOT NULL  ENCODE RAW	  ,"data" BYTEA ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_largeobject owner to rdsdb;--DROP TABLE pg_catalog.pg_library;CREATE TABLE IF NOT EXISTS pg_catalog.pg_library(	name NAME NOT NULL  ENCODE RAW	  ,language_oid OID NOT NULL  ENCODE RAW	  ,file_store_id INTEGER NOT NULL  ENCODE az64	  ,"owner" INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_library owner to rdsdb;--DROP TABLE pg_catalog.pg_listener;CREATE TABLE IF NOT EXISTS pg_catalog.pg_listener(	relname NAME NOT NULL  ENCODE RAW	  ,listenerpid INTEGER NOT NULL  ENCODE RAW	  ,notification INTEGER NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_listener owner to rdsdb;--DROP TABLE pg_catalog.pg_ml_model;CREATE TABLE IF NOT EXISTS pg_catalog.pg_ml_model(	modnamespace OID NOT NULL  ENCODE RAW	  ,modname NAME NOT NULL  ENCODE RAW	  ,modversion INTEGER NOT NULL  ENCODE az64	  ,modowner INTEGER NOT NULL  ENCODE az64	  ,modexecstate SMALLINT NOT NULL  ENCODE az64	  ,modlifecycle SMALLINT NOT NULL  ENCODE az64	  ,modrefreshstate SMALLINT NOT NULL  ENCODE az64	  ,modcreatetime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,modacl ACLITEM[] ENCODE RAW	  ,modquerytext TEXT ENCODE lzo	  ,modalgometa TEXT ENCODE lzo	  ,modexecmeta TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_ml_model owner to rdsdb;--DROP TABLE pg_catalog.pg_namespace;CREATE TABLE IF NOT EXISTS pg_catalog.pg_namespace(	nspname NAME NOT NULL  ENCODE RAW	  ,nspowner INTEGER NOT NULL  ENCODE RAW	  ,nspacl ACLITEM[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_namespace owner to rdsdb;--DROP TABLE pg_catalog.pg_namespace_extended;CREATE TABLE IF NOT EXISTS pg_catalog.pg_namespace_extended(	nspid OID NOT NULL  ENCODE RAW	  ,colnum SMALLINT NOT NULL  ENCODE az64	  ,value TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_namespace_extended owner to rdsdb;--DROP TABLE pg_catalog.pg_opclass;CREATE TABLE IF NOT EXISTS pg_catalog.pg_opclass(	opcamid OID NOT NULL  ENCODE RAW	  ,opcname NAME NOT NULL  ENCODE RAW	  ,opcnamespace OID NOT NULL  ENCODE RAW	  ,opcowner INTEGER NOT NULL  ENCODE RAW	  ,opcintype OID NOT NULL  ENCODE RAW	  ,opcdefault BOOLEAN NOT NULL  ENCODE RAW	  ,opckeytype OID NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_opclass owner to rdsdb;--DROP TABLE pg_catalog.pg_operator;CREATE TABLE IF NOT EXISTS pg_catalog.pg_operator(	oprname NAME NOT NULL  ENCODE RAW	  ,oprnamespace OID NOT NULL  ENCODE RAW	  ,oprowner INTEGER NOT NULL  ENCODE RAW	  ,oprkind "CHAR" NOT NULL  ENCODE RAW	  ,oprcanhash BOOLEAN NOT NULL  ENCODE RAW	  ,oprleft OID NOT NULL  ENCODE RAW	  ,oprright OID NOT NULL  ENCODE RAW	  ,oprresult OID NOT NULL  ENCODE RAW	  ,oprcom OID NOT NULL  ENCODE RAW	  ,oprnegate OID NOT NULL  ENCODE RAW	  ,oprlsortop OID NOT NULL  ENCODE RAW	  ,oprrsortop OID NOT NULL  ENCODE RAW	  ,oprltcmpop OID NOT NULL  ENCODE RAW	  ,oprgtcmpop OID NOT NULL  ENCODE RAW	  ,oprcode REGPROC NOT NULL  ENCODE RAW	  ,oprrest REGPROC NOT NULL  ENCODE RAW	  ,oprjoin REGPROC NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_operator owner to rdsdb;--DROP TABLE pg_catalog.pg_proc;CREATE TABLE IF NOT EXISTS pg_catalog.pg_proc(	proname NAME NOT NULL  ENCODE RAW	  ,pronamespace OID NOT NULL  ENCODE RAW	  ,proowner INTEGER NOT NULL  ENCODE RAW	  ,prolang OID NOT NULL  ENCODE RAW	  ,proisagg BOOLEAN NOT NULL  ENCODE RAW	  ,prosecdef BOOLEAN NOT NULL  ENCODE RAW	  ,proisstrict BOOLEAN NOT NULL  ENCODE RAW	  ,proretset BOOLEAN NOT NULL  ENCODE RAW	  ,provolatile "CHAR" NOT NULL  ENCODE RAW	  ,pronargs SMALLINT NOT NULL  ENCODE RAW	  ,prorettype OID NOT NULL  ENCODE RAW	  ,proargtypes OIDVECTOR NOT NULL  ENCODE RAW	  ,proargnames TEXT[] ENCODE RAW	  ,prosrc TEXT ENCODE RAW	  ,probin BYTEA ENCODE RAW	  ,proacl ACLITEM[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_proc owner to rdsdb;--DROP TABLE pg_catalog.pg_proc_extended;CREATE TABLE IF NOT EXISTS pg_catalog.pg_proc_extended(	procoid OID NOT NULL  ENCODE RAW	  ,colnum SMALLINT NOT NULL  ENCODE az64	  ,value TEXT[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_proc_extended owner to rdsdb;--DROP TABLE pg_catalog.pg_resize;CREATE TABLE IF NOT EXISTS pg_catalog.pg_resize(	statexml VARCHAR(8192) ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_resize owner to rdsdb;--DROP TABLE pg_catalog.pg_rewrite;CREATE TABLE IF NOT EXISTS pg_catalog.pg_rewrite(	rulename NAME NOT NULL  ENCODE RAW	  ,ev_class OID NOT NULL  ENCODE RAW	  ,ev_attr SMALLINT NOT NULL  ENCODE RAW	  ,ev_type "CHAR" NOT NULL  ENCODE RAW	  ,is_instead BOOLEAN NOT NULL  ENCODE RAW	  ,ev_qual TEXT ENCODE RAW	  ,ev_action TEXT ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_rewrite owner to rdsdb;--DROP TABLE pg_catalog.pg_shadow;CREATE TABLE IF NOT EXISTS pg_catalog.pg_shadow(	usename NAME NOT NULL  ENCODE RAW	  ,usesysid INTEGER NOT NULL  ENCODE RAW	  ,usecreatedb BOOLEAN NOT NULL  ENCODE RAW	  ,usesuper BOOLEAN NOT NULL  ENCODE RAW	  ,usecatupd BOOLEAN NOT NULL  ENCODE RAW	  ,passwd TEXT ENCODE RAW	  ,valuntil ABSTIME ENCODE RAW	  ,useconfig TEXT[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_shadow owner to rdsdb;--DROP TABLE pg_catalog.pg_shadow_extended;CREATE TABLE IF NOT EXISTS pg_catalog.pg_shadow_extended(	"sysid" INTEGER NOT NULL  ENCODE az64	  ,colnum SMALLINT NOT NULL  ENCODE az64	  ,value TEXT ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_shadow_extended owner to rdsdb;--DROP TABLE pg_catalog.pg_shdepend;CREATE TABLE IF NOT EXISTS pg_catalog.pg_shdepend(	dbid OID NOT NULL  ENCODE RAW	  ,classid OID NOT NULL  ENCODE RAW	  ,objid OID NOT NULL  ENCODE RAW	  ,objsubid INTEGER NOT NULL  ENCODE az64	  ,refclassid OID NOT NULL  ENCODE RAW	  ,refobjid OID NOT NULL  ENCODE RAW	  ,deptype "CHAR" NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_shdepend owner to rdsdb;--DROP TABLE pg_catalog.pg_statistic;CREATE TABLE IF NOT EXISTS pg_catalog.pg_statistic(	starelid OID NOT NULL  ENCODE RAW	  ,staattnum SMALLINT NOT NULL  ENCODE RAW	  ,stanullfrac REAL NOT NULL  ENCODE RAW	  ,stawidth INTEGER NOT NULL  ENCODE RAW	  ,stadistinct REAL NOT NULL  ENCODE RAW	  ,stakind1 SMALLINT NOT NULL  ENCODE RAW	  ,stakind2 SMALLINT NOT NULL  ENCODE RAW	  ,stakind3 SMALLINT NOT NULL  ENCODE RAW	  ,stakind4 SMALLINT NOT NULL  ENCODE RAW	  ,staop1 OID NOT NULL  ENCODE RAW	  ,staop2 OID NOT NULL  ENCODE RAW	  ,staop3 OID NOT NULL  ENCODE RAW	  ,staop4 OID NOT NULL  ENCODE RAW	  ,stanumbers1 REAL[] ENCODE RAW	  ,stanumbers2 REAL[] ENCODE RAW	  ,stanumbers3 REAL[] ENCODE RAW	  ,stanumbers4 REAL[] ENCODE RAW	  ,stavalues1 ANYARRAY ENCODE RAW	  ,stavalues2 ANYARRAY ENCODE RAW	  ,stavalues3 ANYARRAY ENCODE RAW	  ,stavalues4 ANYARRAY ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_statistic owner to rdsdb;--DROP TABLE pg_catalog.pg_statistic_indicator;CREATE TABLE IF NOT EXISTS pg_catalog.pg_statistic_indicator(	stairelid OID NOT NULL  ENCODE RAW	  ,stairows REAL NOT NULL  ENCODE RAW	  ,staiins REAL NOT NULL  ENCODE RAW	  ,staidels REAL NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_statistic_indicator owner to rdsdb;--DROP TABLE pg_catalog.pg_statistic_journal;CREATE TABLE IF NOT EXISTS pg_catalog.pg_statistic_journal(	unqid BIGINT NOT NULL  ENCODE az64	  ,ownerxid BIGINT NOT NULL  ENCODE az64	  ,version BIGINT NOT NULL  ENCODE az64	  ,isdeleted BOOLEAN NOT NULL  ENCODE RAW	  ,starelid OID NOT NULL  ENCODE RAW	  ,staattnum SMALLINT NOT NULL  ENCODE az64	  ,stanullfrac REAL NOT NULL  ENCODE RAW	  ,stawidth INTEGER NOT NULL  ENCODE az64	  ,stadistinct REAL NOT NULL  ENCODE RAW	  ,stakind1 SMALLINT NOT NULL  ENCODE az64	  ,stakind2 SMALLINT NOT NULL  ENCODE az64	  ,stakind3 SMALLINT NOT NULL  ENCODE az64	  ,stakind4 SMALLINT NOT NULL  ENCODE az64	  ,staop1 OID NOT NULL  ENCODE RAW	  ,staop2 OID NOT NULL  ENCODE RAW	  ,staop3 OID NOT NULL  ENCODE RAW	  ,staop4 OID NOT NULL  ENCODE RAW	  ,stanumbers1 REAL[] ENCODE RAW	  ,stanumbers2 REAL[] ENCODE RAW	  ,stanumbers3 REAL[] ENCODE RAW	  ,stanumbers4 REAL[] ENCODE RAW	  ,stavalues1 ANYARRAY ENCODE RAW	  ,stavalues2 ANYARRAY ENCODE RAW	  ,stavalues3 ANYARRAY ENCODE RAW	  ,stavalues4 ANYARRAY ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_statistic_journal owner to rdsdb;--DROP TABLE pg_catalog.pg_statistic_multicol;CREATE TABLE IF NOT EXISTS pg_catalog.pg_statistic_multicol(	stamcname NAME NOT NULL  ENCODE RAW	  ,stamcrelid OID NOT NULL  ENCODE RAW	  ,stamcdistinct REAL NOT NULL  ENCODE RAW	  ,stamcattnum SMALLINT[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_statistic_multicol owner to rdsdb;--DROP TABLE pg_catalog.pg_tablespace;CREATE TABLE IF NOT EXISTS pg_catalog.pg_tablespace(	spcname NAME NOT NULL  ENCODE RAW	  ,spcowner INTEGER NOT NULL  ENCODE RAW	  ,spclocation TEXT NOT NULL  ENCODE RAW	  ,spcacl ACLITEM[] ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_tablespace owner to rdsdb;--DROP TABLE pg_catalog.pg_test;CREATE TABLE IF NOT EXISTS pg_catalog.pg_test(	tesbool BOOLEAN ENCODE RAW	  ,tesenum "CHAR" ENCODE RAW	  ,tesfloat4 REAL ENCODE RAW	  ,tesint2 SMALLINT ENCODE az64	  ,tesint4 INTEGER ENCODE az64	  ,tesint8 BIGINT ENCODE az64	  ,tesname NAME ENCODE RAW	  ,tesoid OID ENCODE RAW	  ,tesregproc REGPROC ENCODE RAW	  ,testext VARCHAR(256) ENCODE lzo	  ,tesvarchar VARCHAR(256) ENCODE lzo	  ,tesxid XID ENCODE RAW	  ,teschar CHAR(13) ENCODE lzo	  ,tesdate DATE ENCODE az64	  ,tesfloat8 DOUBLE PRECISION ENCODE RAW	  ,tesinterval INTERVAL ENCODE RAW	  ,tesnumeric NUMERIC(5 ,2) ENCODE az64	  ,testid TID ENCODE RAW	  ,testimestamp TIMESTAMP WITHOUT TIME ZONE ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_test owner to rdsdb;--DROP TABLE pg_catalog.pg_transaction;CREATE TABLE IF NOT EXISTS pg_catalog.pg_transaction(	xid BIGINT NOT NULL  ENCODE az64	  ,txntime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,journalsize BIGINT NOT NULL  ENCODE az64	  ,pgdisksize BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_transaction owner to rdsdb;--DROP TABLE pg_catalog.pg_trigger;CREATE TABLE IF NOT EXISTS pg_catalog.pg_trigger(	tgrelid OID NOT NULL  ENCODE RAW	  ,tgname NAME NOT NULL  ENCODE RAW	  ,tgfoid OID NOT NULL  ENCODE RAW	  ,tgtype SMALLINT NOT NULL  ENCODE RAW	  ,tgenabled BOOLEAN NOT NULL  ENCODE RAW	  ,tgisconstraint BOOLEAN NOT NULL  ENCODE RAW	  ,tgconstrname NAME NOT NULL  ENCODE RAW	  ,tgconstrrelid OID NOT NULL  ENCODE RAW	  ,tgdeferrable BOOLEAN NOT NULL  ENCODE RAW	  ,tginitdeferred BOOLEAN NOT NULL  ENCODE RAW	  ,tgnargs SMALLINT NOT NULL  ENCODE RAW	  ,tgattr INT2VECTOR NOT NULL  ENCODE RAW	  ,tgargs BYTEA ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_trigger owner to rdsdb;--DROP TABLE pg_catalog.pg_type;CREATE TABLE IF NOT EXISTS pg_catalog.pg_type(	typname NAME NOT NULL  ENCODE RAW	  ,typnamespace OID NOT NULL  ENCODE RAW	  ,typowner INTEGER NOT NULL  ENCODE RAW	  ,typlen SMALLINT NOT NULL  ENCODE RAW	  ,typbyval BOOLEAN NOT NULL  ENCODE RAW	  ,typtype "CHAR" NOT NULL  ENCODE RAW	  ,typisdefined BOOLEAN NOT NULL  ENCODE RAW	  ,typdelim "CHAR" NOT NULL  ENCODE RAW	  ,typrelid OID NOT NULL  ENCODE RAW	  ,typelem OID NOT NULL  ENCODE RAW	  ,typinput REGPROC NOT NULL  ENCODE RAW	  ,typoutput REGPROC NOT NULL  ENCODE RAW	  ,typreceive REGPROC NOT NULL  ENCODE RAW	  ,typsend REGPROC NOT NULL  ENCODE RAW	  ,typanalyze REGPROC NOT NULL  ENCODE RAW	  ,typalign "CHAR" NOT NULL  ENCODE RAW	  ,typstorage "CHAR" NOT NULL  ENCODE RAW	  ,typnotnull BOOLEAN NOT NULL  ENCODE RAW	  ,typbasetype OID NOT NULL  ENCODE RAW	  ,typtypmod INTEGER NOT NULL  ENCODE RAW	  ,typndims INTEGER NOT NULL  ENCODE RAW	  ,typdefaultbin TEXT ENCODE RAW	  ,typdefault TEXT ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.pg_type owner to rdsdb;--DROP TABLE pg_catalog.pg_udf;CREATE TABLE IF NOT EXISTS pg_catalog.pg_udf(	udfid OID NOT NULL  ENCODE RAW	  ,nargs SMALLINT NOT NULL  ENCODE RAW	  ,argtypmods OIDVECTOR NOT NULL  ENCODE RAW	  ,rettypmod INTEGER NOT NULL  ENCODE RAW	  ,version INTEGER NOT NULL  ENCODE RAW	  ,funcname TEXT ENCODE RAW)DISTSTYLE EVEN;COMMENT ON table pg_catalog.pg_udf IS '"convert text to interval"'

[sp5]
query5 = ALTER TABLE pg_catalog.pg_udf owner to rdsdb;--DROP TABLE pg_catalog.stcs_abort_idle;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_abort_idle(	xid BIGINT NOT NULL  ENCODE az64	  ,idle_start_time BIGINT NOT NULL  ENCODE az64	  ,idle_check_time BIGINT NOT NULL  ENCODE az64	  ,txn_start_time BIGINT NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_abort_idle owner to rdsdb;--DROP TABLE pg_catalog.stcs_aggr;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_aggr(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,slots INTEGER NOT NULL  ENCODE az64	  ,occupied INTEGER NOT NULL  ENCODE az64	  ,maxlength INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,"type" CHAR(6) NOT NULL  ENCODE lzo	  ,resizes INTEGER NOT NULL  ENCODE az64	  ,flushable INTEGER NOT NULL  ENCODE az64	  ,varchar_agg_opt CHAR(1) NOT NULL  ENCODE lzo	  ,varagg_opt_bitmap BIGINT NOT NULL  ENCODE az64	  ,used_agg_prefetching CHAR(1) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_aggr owner to rdsdb;--DROP TABLE pg_catalog.stcs_aggr_distinct;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_aggr_distinct(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,slots INTEGER NOT NULL  ENCODE az64	  ,occupied INTEGER NOT NULL  ENCODE az64	  ,maxlength INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,resizes INTEGER NOT NULL  ENCODE az64	  ,flushable INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_aggr_distinct owner to rdsdb;--DROP TABLE pg_catalog.stcs_alert_event_log;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_alert_event_log(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,event CHAR(1024) NOT NULL  ENCODE lzo	  ,solution CHAR(200) NOT NULL  ENCODE lzo	  ,event_time BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_alert_event_log owner to rdsdb;--DROP TABLE pg_catalog.stcs_alert_messages;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_alert_messages(	eventtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,error CHAR(512) NOT NULL  ENCODE lzo	  ,code INTEGER NOT NULL  ENCODE az64	  ,context CHAR(512) NOT NULL  ENCODE lzo	  ,query INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(512) NOT NULL  ENCODE lzo	  ,linenumber INTEGER NOT NULL  ENCODE az64	  ,process CHAR(64) NOT NULL  ENCODE lzo	  ,padb CHAR(32) NOT NULL  ENCODE lzo	  ,tracefile CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_alert_messages owner to rdsdb;--DROP TABLE pg_catalog.stcs_alter_column_encode_events;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_alter_column_encode_events(	userid INTEGER NOT NULL  ENCODE az64	  ,vpid INTEGER NOT NULL  ENCODE az64	  ,logtime BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,command_phase CHAR(40) NOT NULL  ENCODE lzo	  ,tbl_id INTEGER NOT NULL  ENCODE az64	  ,tbl_name CHAR(128) NOT NULL  ENCODE lzo	  ,col_id INTEGER NOT NULL  ENCODE az64	  ,col_name CHAR(128) NOT NULL  ENCODE lzo	  ,shadow_col_id INTEGER NOT NULL  ENCODE az64	  ,src_encode INTEGER NOT NULL  ENCODE az64	  ,tgt_encode INTEGER NOT NULL  ENCODE az64	  ,scan_rows BIGINT NOT NULL  ENCODE az64	  ,num_tgt_cols INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_alter_column_encode_events owner to rdsdb;--DROP TABLE pg_catalog.stcs_alter_column_events;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_alter_column_events(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,logtime BIGINT NOT NULL  ENCODE az64	  ,command_type CHAR(30) NOT NULL  ENCODE lzo	  ,tbl_id INTEGER NOT NULL  ENCODE az64	  ,tbl_name CHAR(128) NOT NULL  ENCODE lzo	  ,col_id INTEGER NOT NULL  ENCODE az64	  ,col_name CHAR(128) NOT NULL  ENCODE lzo	  ,src_type INTEGER NOT NULL  ENCODE az64	  ,src_typemod INTEGER NOT NULL  ENCODE az64	  ,tgt_type INTEGER NOT NULL  ENCODE az64	  ,tgt_typemod INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_alter_column_events owner to rdsdb;--DROP TABLE pg_catalog.stcs_alter_dist_sort;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_alter_dist_sort(	xid BIGINT NOT NULL  ENCODE az64	  ,cutoff_xid BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,event CHAR(128) NOT NULL  ENCODE lzo	  ,src_rows BIGINT NOT NULL  ENCODE az64	  ,dest_rows BIGINT NOT NULL  ENCODE az64	  ,redo_delete_rows BIGINT NOT NULL  ENCODE az64	  ,undone_rows BIGINT NOT NULL  ENCODE az64	  ,undone_txns BIGINT NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,origin_dist_style INTEGER NOT NULL  ENCODE az64	  ,num_sort_keys INTEGER NOT NULL  ENCODE az64	  ,target_distkey INTEGER NOT NULL  ENCODE az64	  ,request_sort INTEGER NOT NULL  ENCODE az64	  ,num_sort_iterations INTEGER NOT NULL  ENCODE az64	  ,dst_sorted_rows BIGINT NOT NULL  ENCODE az64	  ,is_autoworker_altered INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_alter_dist_sort owner to rdsdb;--DROP TABLE pg_catalog.stcs_alter_sortkey_events;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_alter_sortkey_events(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,logtime BIGINT NOT NULL  ENCODE az64	  ,tbl_id INTEGER NOT NULL  ENCODE az64	  ,is_original_sortkey INTEGER NOT NULL  ENCODE az64	  ,num_sortkeys INTEGER NOT NULL  ENCODE az64	  ,sortkey_text CHAR(2048) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_alter_sortkey_events owner to rdsdb;--DROP TABLE pg_catalog.stcs_analyze;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_analyze(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,"database" CHAR(30) NOT NULL  ENCODE lzo	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,status CHAR(15) NOT NULL  ENCODE lzo	  ,"rows" DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,modified_rows DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,threshold_percent DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,is_auto CHAR(1) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,prevtime BIGINT NOT NULL  ENCODE az64	  ,num_predicate_cols INTEGER NOT NULL  ENCODE az64	  ,num_new_predicate_cols INTEGER NOT NULL  ENCODE az64	  ,is_background CHAR(1) NOT NULL  ENCODE lzo	  ,auto_analyze_phase CHAR(100) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_analyze owner to rdsdb;--DROP TABLE pg_catalog.stcs_analyze_compression;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_analyze_compression(	userid INTEGER NOT NULL  ENCODE az64	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,tablename CHAR(128) NOT NULL  ENCODE lzo	  ,col INTEGER NOT NULL  ENCODE az64	  ,old_encoding CHAR(15) NOT NULL  ENCODE lzo	  ,new_encoding CHAR(15) NOT NULL  ENCODE lzo	  ,"mode" CHAR(14) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_analyze_compression owner to rdsdb;--DROP TABLE pg_catalog.stcs_aqua_pushdown;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_aqua_pushdown(	query INTEGER NOT NULL  ENCODE az64	  ,object_type CHAR(74) NOT NULL  ENCODE lzo	  ,oid INTEGER NOT NULL  ENCODE az64	  ,argument_type CHAR(256) NOT NULL  ENCODE lzo	  ,return_type CHAR(16) NOT NULL  ENCODE lzo	  ,is_supported CHAR(1) NOT NULL  ENCODE lzo	  ,reason_not_supported CHAR(30) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_aqua_pushdown owner to rdsdb;--DROP TABLE pg_catalog.stcs_aqua_requests;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_aqua_requests(	query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,aqua_shard_id CHAR(10) NOT NULL  ENCODE lzo	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,duration BIGINT NOT NULL  ENCODE az64	  ,aqua_table_arn CHAR(100) NOT NULL  ENCODE lzo	  ,aqua_endpoint CHAR(85) NOT NULL  ENCODE lzo	  ,failed INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(16) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_aqua_requests owner to rdsdb;--DROP TABLE pg_catalog.stcs_auto_alter_worker_event;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_auto_alter_worker_event(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,recommend INTEGER NOT NULL  ENCODE az64	  ,status CHAR(128) NOT NULL  ENCODE lzo	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,retry_count INTEGER NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,previous_state CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_auto_alter_worker_event owner to rdsdb;--DROP TABLE pg_catalog.stcs_auto_dispatcher_wlm_occupancy;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_auto_dispatcher_wlm_occupancy(	eventtime BIGINT NOT NULL  ENCODE az64	  ,wlm_occupancy_percent DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,autovacuum_pid INTEGER NOT NULL  ENCODE az64	  ,autoanalyze_pid INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_auto_dispatcher_wlm_occupancy owner to rdsdb;--DROP TABLE pg_catalog.stcs_auto_maintenance;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_auto_maintenance(	eventtime BIGINT NOT NULL  ENCODE az64	  ,eventtext CHAR(128) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_auto_maintenance owner to rdsdb;--DROP TABLE pg_catalog.stcs_auto_maintenance_worker;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_auto_maintenance_worker(	userid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"mode" CHAR(15) NOT NULL  ENCODE lzo	  ,db_id INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,pause_count INTEGER NOT NULL  ENCODE az64	  ,tables_skipped INTEGER NOT NULL  ENCODE az64	  ,status CHAR(16) NOT NULL  ENCODE lzo	  ,error_message CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_auto_maintenance_worker owner to rdsdb;--DROP TABLE pg_catalog.stcs_auto_worker_levels;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_auto_worker_levels(	pid INTEGER NOT NULL  ENCODE az64	  ,start_level DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,end_level DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,start_wlm_occupancy DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,end_wlm_occupancy DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,num_windows INTEGER NOT NULL  ENCODE az64	  ,since BIGINT NOT NULL  ENCODE az64	  ,now BIGINT NOT NULL  ENCODE az64	  ,status CHAR(16) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_auto_worker_levels owner to rdsdb;--DROP TABLE pg_catalog.stcs_autovacuum_detail;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_autovacuum_detail(	pid INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,window_time INTEGER NOT NULL  ENCODE az64	  ,pause_time INTEGER NOT NULL  ENCODE az64	  ,commit_time INTEGER NOT NULL  ENCODE az64	  ,max_commit_time INTEGER NOT NULL  ENCODE az64	  ,min_commit_time INTEGER NOT NULL  ENCODE az64	  ,num_commits INTEGER NOT NULL  ENCODE az64	  ,tables_skipped INTEGER NOT NULL  ENCODE az64	  ,tables_done INTEGER NOT NULL  ENCODE az64	  ,num_vacdel INTEGER NOT NULL  ENCODE az64	  ,num_vacrp INTEGER NOT NULL  ENCODE az64	  ,num_vacsort INTEGER NOT NULL  ENCODE az64	  ,space_reclaimed_mb INTEGER NOT NULL  ENCODE az64	  ,skip_time INTEGER NOT NULL  ENCODE az64	  ,fetch_info_time INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_autovacuum_detail owner to rdsdb;--DROP TABLE pg_catalog.stcs_autovacuum_skip_reason;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_autovacuum_skip_reason(	eventtime BIGINT NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,"diststyle" INTEGER NOT NULL  ENCODE az64	  ,vacuum_mode CHAR(16) NOT NULL  ENCODE lzo	  ,num_columns INTEGER NOT NULL  ENCODE az64	  ,num_rows BIGINT NOT NULL  ENCODE az64	  ,reason CHAR(48) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_autovacuum_skip_reason owner to rdsdb;--DROP TABLE pg_catalog.stcs_awsclient_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_awsclient_error(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,http_method CHAR(64) NOT NULL  ENCODE lzo	  ,endpoint CHAR(128) NOT NULL  ENCODE lzo	  ,error CHAR(1024) NOT NULL  ENCODE lzo	  ,amzn_request_id CHAR(36) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_awsclient_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_background_monitor;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_background_monitor(	recordtime BIGINT NOT NULL  ENCODE az64	  ,status CHAR(100) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_background_monitor owner to rdsdb;--DROP TABLE pg_catalog.stcs_backtrace;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_backtrace(	now BIGINT NOT NULL  ENCODE az64	  ,since BIGINT NOT NULL  ENCODE az64	  ,name CHAR(80) NOT NULL  ENCODE lzo	  ,count INTEGER NOT NULL  ENCODE az64	  ,hex_addresses CHAR(128) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_backtrace owner to rdsdb;--DROP TABLE pg_catalog.stcs_backup;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_backup(	db_name CHAR(50) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,repository_name CHAR(32) NOT NULL  ENCODE lzo	  ,backup_name CHAR(256) NOT NULL  ENCODE lzo	  ,backup_type CHAR(12) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,succeeded INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_backup owner to rdsdb;--DROP TABLE pg_catalog.stcs_backup_compute;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_backup_compute(	currenttime BIGINT NOT NULL  ENCODE az64	  ,node_num INTEGER NOT NULL  ENCODE az64	  ,state CHAR(256) NOT NULL  ENCODE lzo	  ,backup_id CHAR(256) NOT NULL  ENCODE lzo	  ,sb_version BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,num_blocks BIGINT NOT NULL  ENCODE az64	  ,superblock_size BIGINT NOT NULL  ENCODE az64	  ,permanent_blocks BIGINT NOT NULL  ENCODE az64	  ,blocks_to_upload BIGINT NOT NULL  ENCODE az64	  ,blocks_uploaded BIGINT NOT NULL  ENCODE az64	  ,num_failures BIGINT NOT NULL  ENCODE az64	  ,num_modified_superblock_segments BIGINT NOT NULL  ENCODE az64	  ,total_num_superblock_segments BIGINT NOT NULL  ENCODE az64	  ,time_spent_stage1 BIGINT NOT NULL  ENCODE az64	  ,time_spent_read_sb_header BIGINT NOT NULL  ENCODE az64	  ,time_spent_copy_segments BIGINT NOT NULL  ENCODE az64	  ,time_spent_stage2 BIGINT NOT NULL  ENCODE az64	  ,time_spent_set_in_s3_bits BIGINT NOT NULL  ENCODE az64	  ,inc_no_backup BIGINT NOT NULL  ENCODE az64	  ,nobackup_blocks BIGINT NOT NULL  ENCODE az64	  ,distall_blocks BIGINT NOT NULL  ENCODE az64	  ,non_distall_blocks BIGINT NOT NULL  ENCODE az64	  ,perm_blocks_in_s3 BIGINT NOT NULL  ENCODE az64	  ,metadata_read_from_backup INTEGER NOT NULL  ENCODE az64	  ,blocks_validated BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_backup_compute owner to rdsdb;--DROP TABLE pg_catalog.stcs_backup_leader;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_backup_leader(	currenttime BIGINT NOT NULL  ENCODE az64	  ,backup_id CHAR(256) NOT NULL  ENCODE lzo	  ,sb_version BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,in_progress INTEGER NOT NULL  ENCODE az64	  ,error_code INTEGER NOT NULL  ENCODE az64	  ,error_msg CHAR(256) NOT NULL  ENCODE lzo	  ,enc_key_hash_base64 CHAR(44) NOT NULL  ENCODE lzo	  ,tlr_metadata_successful INTEGER NOT NULL  ENCODE az64	  ,tlr_metadata_time BIGINT NOT NULL  ENCODE az64	  ,tlr_metadata_error_msg CHAR(256) NOT NULL  ENCODE lzo	  ,"partial" INTEGER NOT NULL  ENCODE az64	  ,backup_superblock_format INTEGER NOT NULL  ENCODE az64	  ,time_wait_commit_lock BIGINT NOT NULL  ENCODE az64	  ,time_hold_commit_lock BIGINT NOT NULL  ENCODE az64	  ,time_spent_commit_transaction BIGINT NOT NULL  ENCODE az64	  ,inc_no_backup BIGINT NOT NULL  ENCODE az64	  ,sb_version_stage3 BIGINT NOT NULL  ENCODE az64	  ,backup_superblock_method INTEGER NOT NULL  ENCODE az64	  ,num_tables INTEGER NOT NULL  ENCODE az64	  ,inc_resize_lock_optional INTEGER NOT NULL  ENCODE az64	  ,inc_resize_lock_mandatory INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_backup_leader owner to rdsdb;--DROP TABLE pg_catalog.stcs_bcast;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_bcast(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,packets INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_bcast owner to rdsdb;--DROP TABLE pg_catalog.stcs_bkg_compile_info;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_bkg_compile_info(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,locus INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,"path" CHAR(255) NOT NULL  ENCODE lzo	  ,compile INTEGER NOT NULL  ENCODE az64	  ,complevel INTEGER NOT NULL  ENCODE az64	  ,cachehit INTEGER NOT NULL  ENCODE az64	  ,tokwaittime BIGINT NOT NULL  ENCODE az64	  ,compilestarttime BIGINT NOT NULL  ENCODE az64	  ,compileendtime BIGINT NOT NULL  ENCODE az64	  ,compilelocktime BIGINT NOT NULL  ENCODE az64	  ,compilememory BIGINT NOT NULL  ENCODE az64	  ,putsuccess INTEGER NOT NULL  ENCODE az64	  ,getsuccess INTEGER NOT NULL  ENCODE az64	  ,puttime BIGINT NOT NULL  ENCODE az64	  ,gettime BIGINT NOT NULL  ENCODE az64	  ,objsize BIGINT NOT NULL  ENCODE az64	  ,skip_opt_compile INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_bkg_compile_info owner to rdsdb;--DROP TABLE pg_catalog.stcs_blf_efficiency;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_blf_efficiency(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,local_data_slice INTEGER NOT NULL  ENCODE az64	  ,scanned_blocks BIGINT NOT NULL  ENCODE az64	  ,total_blocks BIGINT NOT NULL  ENCODE az64	  ,local_compute_slice INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_blf_efficiency owner to rdsdb;--DROP TABLE pg_catalog.stcs_block_access_errors;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_block_access_errors(	node INTEGER NOT NULL  ENCODE az64	  ,logtime BIGINT NOT NULL  ENCODE az64	  ,blkid CHAR(64) NOT NULL  ENCODE lzo	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,blknum BIGINT NOT NULL  ENCODE az64	  ,num_values INTEGER NOT NULL  ENCODE az64	  ,flags INTEGER NOT NULL  ENCODE az64	  ,reps INTEGER NOT NULL  ENCODE az64	  ,s3_state CHAR(32) NOT NULL  ENCODE lzo	  ,rep_strings CHAR(256) NOT NULL  ENCODE lzo	  ,"file" CHAR(90) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_block_access_errors owner to rdsdb;--DROP TABLE pg_catalog.stcs_block_integrity_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_block_integrity_error(	recordtime BIGINT NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,id CHAR(64) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,disk_addr BIGINT NOT NULL  ENCODE az64	  ,raw_disk_addr BIGINT NOT NULL  ENCODE az64	  ,tbl BIGINT NOT NULL  ENCODE az64	  ,col BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,remaining_reps INTEGER NOT NULL  ENCODE az64	  ,computed_crc INTEGER NOT NULL  ENCODE az64	  ,computed_crc_with_pincount INTEGER NOT NULL  ENCODE az64	  ,expected_crc INTEGER NOT NULL  ENCODE az64	  ,data_block_sb_pos INTEGER NOT NULL  ENCODE az64	  ,data_block_guid CHAR(64) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_block_integrity_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_block_io_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_block_io_metrics(	node INTEGER NOT NULL  ENCODE az64	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,end_time BIGINT NOT NULL  ENCODE az64	  ,fetch_in_memory_blocks BIGINT NOT NULL  ENCODE az64	  ,fetch_pending_io_blocks BIGINT NOT NULL  ENCODE az64	  ,fetch_primary_blocks BIGINT NOT NULL  ENCODE az64	  ,fetch_mirror_blocks BIGINT NOT NULL  ENCODE az64	  ,fetch_s3_blocks BIGINT NOT NULL  ENCODE az64	  ,primary_read_latency BIGINT NOT NULL  ENCODE az64	  ,mirror_read_latency BIGINT NOT NULL  ENCODE az64	  ,s3_read_latency BIGINT NOT NULL  ENCODE az64	  ,primary_write_latency BIGINT NOT NULL  ENCODE az64	  ,mirror_write_latency BIGINT NOT NULL  ENCODE az64	  ,rehydration_in_progress INTEGER NOT NULL  ENCODE az64	  ,block_rehydrated BIGINT NOT NULL  ENCODE az64	  ,block_need_rehydration BIGINT NOT NULL  ENCODE az64	  ,total_allocated_blocks BIGINT NOT NULL  ENCODE az64	  ,prefetch_primary_blocks BIGINT NOT NULL  ENCODE az64	  ,prefetch_mirror_blocks BIGINT NOT NULL  ENCODE az64	  ,prefetch_s3_blocks BIGINT NOT NULL  ENCODE az64	  ,s3_write_tagged_latency BIGINT NOT NULL  ENCODE az64	  ,s3_write_untagged_latency BIGINT NOT NULL  ENCODE az64	  ,s3_write_add_tag_latency BIGINT NOT NULL  ENCODE az64	  ,s3_write_delete_tag_latency BIGINT NOT NULL  ENCODE az64	  ,num_tagged_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_untagged_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_add_tags_issued_to_s3 BIGINT NOT NULL  ENCODE az64	  ,num_delete_tags_issued_to_s3 BIGINT NOT NULL  ENCODE az64	  ,num_tagged_temp_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_tagged_perm_spillover_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_untagged_perm_spillover_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_metadata_s3_writes BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_block_io_metrics owner to rdsdb;--DROP TABLE pg_catalog.stcs_block_pins;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_block_pins(	logtime BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_block_pins owner to rdsdb;--DROP TABLE pg_catalog.stcs_block_priority_based_rereplication;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_block_priority_based_rereplication(	logtime BIGINT NOT NULL  ENCODE az64	  ,seqnum BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64	  ,backed_up INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,state INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_block_priority_based_rereplication owner to rdsdb;--DROP TABLE pg_catalog.stcs_blocklist;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_blocklist(	logtime BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64	  ,num_values INTEGER NOT NULL  ENCODE az64	  ,extended_limits INTEGER NOT NULL  ENCODE az64	  ,"minvalue" BIGINT NOT NULL  ENCODE az64	  ,"maxvalue" BIGINT NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,"pinned" INTEGER NOT NULL  ENCODE az64	  ,on_disk INTEGER NOT NULL  ENCODE az64	  ,backed_up INTEGER NOT NULL  ENCODE az64	  ,modified INTEGER NOT NULL  ENCODE az64	  ,hdr_modified INTEGER NOT NULL  ENCODE az64	  ,unsorted INTEGER NOT NULL  ENCODE az64	  ,tombstone INTEGER NOT NULL  ENCODE az64	  ,preferred_diskno INTEGER NOT NULL  ENCODE az64	  ,"temporary" INTEGER NOT NULL  ENCODE az64	  ,newblock INTEGER NOT NULL  ENCODE az64	  ,num_readers INTEGER NOT NULL  ENCODE az64	  ,id CHAR(64) NOT NULL  ENCODE lzo	  ,flags INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_blocklist owner to rdsdb;--DROP TABLE pg_catalog.stcs_bootstrap;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_bootstrap(	starttime BIGINT NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,"file" CHAR(20) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,msg CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_bootstrap owner to rdsdb;--DROP TABLE pg_catalog.stcs_burst_connection;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_burst_connection(	"action" CHAR(20) NOT NULL  ENCODE lzo	  ,method CHAR(50) NOT NULL  ENCODE lzo	  ,pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,cluster_arn CHAR(100) NOT NULL  ENCODE lzo	  ,connection_guid CHAR(100) NOT NULL  ENCODE lzo	  ,error CHAR(250) NOT NULL  ENCODE lzo	  ,switch_status CHAR(20) NOT NULL  ENCODE lzo	  ,switch_time INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_burst_connection owner to rdsdb;--DROP TABLE pg_catalog.stcs_burst_manager_personalization;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_burst_manager_personalization(	userid INTEGER NOT NULL  ENCODE az64	  ,pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,cluster_arn CHAR(120) NOT NULL  ENCODE lzo	  ,backup_id CHAR(100) NOT NULL  ENCODE lzo	  ,backup_prefix CHAR(100) NOT NULL  ENCODE lzo	  ,backup_midfix CHAR(100) NOT NULL  ENCODE lzo	  ,creds_access_key CHAR(100) NOT NULL  ENCODE lzo	  ,creds_secret_key CHAR(100) NOT NULL  ENCODE lzo	  ,creds_session_token CHAR(100) NOT NULL  ENCODE lzo	  ,creds_expiration BIGINT NOT NULL  ENCODE az64	  ,cluster_id CHAR(38) NOT NULL  ENCODE lzo	  ,cluster_name CHAR(70) NOT NULL  ENCODE lzo	  ,error CHAR(250) NOT NULL  ENCODE lzo	  ,account_id CHAR(38) NOT NULL  ENCODE lzo	  ,query INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_burst_manager_personalization owner to rdsdb;--DROP TABLE pg_catalog.stcs_burst_manager_refresh;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_burst_manager_refresh(	eventtime BIGINT NOT NULL  ENCODE az64	  ,"action" CHAR(50) NOT NULL  ENCODE lzo	  ,"type" CHAR(20) NOT NULL  ENCODE lzo	  ,pid BIGINT NOT NULL  ENCODE az64	  ,refresh_version BIGINT NOT NULL  ENCODE az64	  ,cluster_arn CHAR(100) NOT NULL  ENCODE lzo	  ,error CHAR(350) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_burst_manager_refresh owner to rdsdb;--DROP TABLE pg_catalog.stcs_burst_prepare;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_burst_prepare(	userid INTEGER NOT NULL  ENCODE az64	  ,pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,error CHAR(250) NOT NULL  ENCODE lzo	  ,query INTEGER NOT NULL  ENCODE az64	  ,code INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_burst_prepare owner to rdsdb;--DROP TABLE pg_catalog.stcs_burst_query_execution;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_burst_query_execution(	"action" CHAR(20) NOT NULL  ENCODE lzo	  ,userid INTEGER NOT NULL  ENCODE az64	  ,pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,backup_id CHAR(30) NOT NULL  ENCODE lzo	  ,cluster_backup_version BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,cluster_arn CHAR(100) NOT NULL  ENCODE lzo	  ,max_vis_xid BIGINT NOT NULL  ENCODE az64	  ,query_sb_version BIGINT NOT NULL  ENCODE az64	  ,num_tuples INTEGER NOT NULL  ENCODE az64	  ,fetch_complete INTEGER NOT NULL  ENCODE az64	  ,error CHAR(350) NOT NULL  ENCODE lzo	  ,connection_guid CHAR(100) NOT NULL  ENCODE lzo	  ,xen_error_code INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_burst_query_execution owner to rdsdb;--DROP TABLE pg_catalog.stcs_burst_refresh;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_burst_refresh(	record_time BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,error_code INTEGER NOT NULL  ENCODE az64	  ,message CHAR(1024) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_burst_refresh owner to rdsdb;--DROP TABLE pg_catalog.stcs_burst_service_client;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_burst_service_client(	"action" CHAR(10) NOT NULL  ENCODE lzo	  ,pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,cluster_arn CHAR(100) NOT NULL  ENCODE lzo	  ,expiration BIGINT NOT NULL  ENCODE az64	  ,preshared_key CHAR(100) NOT NULL  ENCODE lzo	  ,num_nodes INTEGER NOT NULL  ENCODE az64	  ,error CHAR(250) NOT NULL  ENCODE lzo	  ,request_id CHAR(100) NOT NULL  ENCODE lzo	  ,reason CHAR(40) NOT NULL  ENCODE lzo	  ,query INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_burst_service_client owner to rdsdb;--DROP TABLE pg_catalog.stcs_burst_write_block_header_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_burst_write_block_header_trace(	xid BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,block_header_rcvd BIGINT NOT NULL  ENCODE az64	  ,rcvd_time BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_burst_write_block_header_trace owner to rdsdb;--DROP TABLE pg_catalog.stcs_burst_write_exec;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_burst_write_exec(	pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,query_start_time BIGINT NOT NULL  ENCODE az64	  ,flush_start_time BIGINT NOT NULL  ENCODE az64	  ,stream_start_time BIGINT NOT NULL  ENCODE az64	  ,stream_end_time BIGINT NOT NULL  ENCODE az64	  ,dispatch_start_time BIGINT NOT NULL  ENCODE az64	  ,snap_in_start_time BIGINT NOT NULL  ENCODE az64	  ,snap_in_end_time BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_burst_write_exec owner to rdsdb;--DROP TABLE pg_catalog.stcs_burst_write_query_event;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_burst_write_query_event(	pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,event CHAR(128) NOT NULL  ENCODE lzo	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,owned_cluster CHAR(128) NOT NULL  ENCODE lzo	  ,num_dirty_cluster INTEGER NOT NULL  ENCODE az64	  ,structure_change_sb INTEGER NOT NULL  ENCODE az64	  ,undo_sb INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_burst_write_query_event owner to rdsdb;--DROP TABLE pg_catalog.stcs_cache_policy_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_cache_policy_stats(	node_num INTEGER NOT NULL  ENCODE az64	  ,promote_untracked_to_cold_untouch BIGINT NOT NULL  ENCODE az64	  ,promote_cold_untouch_to_cold_touch BIGINT NOT NULL  ENCODE az64	  ,promote_cold_touch_to_hot_untouch BIGINT NOT NULL  ENCODE az64	  ,promote_hot_untouch_to_hot_touch BIGINT NOT NULL  ENCODE az64	  ,reaccess_hot_touch BIGINT NOT NULL  ENCODE az64	  ,demote_hot_touch_to_hot_untouch BIGINT NOT NULL  ENCODE az64	  ,demote_hot_untouch_to_cold_touch BIGINT NOT NULL  ENCODE az64	  ,demote_cold_touch_to_cold_untouch BIGINT NOT NULL  ENCODE az64	  ,demote_cold_untouch_to_untracked BIGINT NOT NULL  ENCODE az64	  ,cold_blocks BIGINT NOT NULL  ENCODE az64	  ,hot_blocks BIGINT NOT NULL  ENCODE az64	  ,blocks_in_cache BIGINT NOT NULL  ENCODE az64	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,end_time BIGINT NOT NULL  ENCODE az64	  ,capacity BIGINT NOT NULL  ENCODE az64	  ,write_accesses BIGINT NOT NULL  ENCODE az64	  ,rerep_writes BIGINT NOT NULL  ENCODE az64	  ,hot_touched_blocks BIGINT NOT NULL  ENCODE az64	  ,hot_untouched_blocks BIGINT NOT NULL  ENCODE az64	  ,cold_touched_blocks BIGINT NOT NULL  ENCODE az64	  ,cold_untouched_blocks BIGINT NOT NULL  ENCODE az64	  ,ghost_buffer_hits BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_cache_policy_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_catalog_bloat;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_catalog_bloat(	database_id INTEGER NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,pid BIGINT NOT NULL  ENCODE az64	  ,logtime BIGINT NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,num_inserts INTEGER NOT NULL  ENCODE az64	  ,num_updates INTEGER NOT NULL  ENCODE az64	  ,num_deletes INTEGER NOT NULL  ENCODE az64	  ,total_insert_size INTEGER NOT NULL  ENCODE az64	  ,total_update_size INTEGER NOT NULL  ENCODE az64	  ,total_delete_size INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_catalog_bloat owner to rdsdb;--DROP TABLE pg_catalog.stcs_catalog_rebuild_info;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_catalog_rebuild_info(	xid BIGINT NOT NULL  ENCODE az64	  ,"database" INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(64) NOT NULL  ENCODE lzo	  ,table_oid BIGINT NOT NULL  ENCODE az64	  ,num_live_tups BIGINT NOT NULL  ENCODE az64	  ,num_dead_tups BIGINT NOT NULL  ENCODE az64	  ,total_live_tup_sz BIGINT NOT NULL  ENCODE az64	  ,total_dead_tup_sz BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,tuple_storage_duration_in_msec BIGINT NOT NULL  ENCODE az64	  ,commit_lock_acq_duration_in_msec BIGINT NOT NULL  ENCODE az64	  ,rebuild_duration_in_msec BIGINT NOT NULL  ENCODE az64	  ,total_duration_in_msec BIGINT NOT NULL  ENCODE az64	  ,message CHAR(128) NOT NULL  ENCODE lzo	  ,rebuild_mode CHAR(8) NOT NULL  ENCODE lzo	  ,startup INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_catalog_rebuild_info owner to rdsdb;--DROP TABLE pg_catalog.stcs_catalog_rebuild_worker;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_catalog_rebuild_worker(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"database" INTEGER NOT NULL  ENCODE az64	  ,total_live_tup_sz BIGINT NOT NULL  ENCODE az64	  ,total_dead_tup_sz BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,num_rebuilds_reqd INTEGER NOT NULL  ENCODE az64	  ,rebuild_triggered INTEGER NOT NULL  ENCODE az64	  ,last_rebuild_time BIGINT NOT NULL  ENCODE az64	  ,rebuild_needed_duration BIGINT NOT NULL  ENCODE az64	  ,force_lock INTEGER NOT NULL  ENCODE az64	  ,exception INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_catalog_rebuild_worker owner to rdsdb;--DROP TABLE pg_catalog.stcs_catalog_scan_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_catalog_scan_metrics(	xid BIGINT NOT NULL  ENCODE az64	  ,"database" INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(128) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,duration_msec BIGINT NOT NULL  ENCODE az64	  ,num_live_tups BIGINT NOT NULL  ENCODE az64	  ,num_dead_tups BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_catalog_scan_metrics owner to rdsdb;--DROP TABLE pg_catalog.stcs_clear_reps;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_clear_reps(	call_time BIGINT NOT NULL  ENCODE az64	  ,line_num INTEGER NOT NULL  ENCODE az64	  ,sb_pos BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_clear_reps owner to rdsdb;--DROP TABLE pg_catalog.stcs_client_write_timings;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_client_write_timings(	node INTEGER NOT NULL  ENCODE az64	  ,instance INTEGER NOT NULL  ENCODE az64	  ,write_size BIGINT NOT NULL  ENCODE az64	  ,request_write BIGINT NOT NULL  ENCODE az64	  ,round_trip BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_client_write_timings owner to rdsdb;--DROP TABLE pg_catalog.stcs_cmd_requires_top_xact;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_cmd_requires_top_xact(	process CHAR(32) NOT NULL  ENCODE lzo	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,name CHAR(80) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,padb_version CHAR(50) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_cmd_requires_top_xact owner to rdsdb;--DROP TABLE pg_catalog.stcs_codegen;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_codegen(	xid BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,codegenquery INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tokwaittime BIGINT NOT NULL  ENCODE az64	  ,token_acquired INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_codegen owner to rdsdb;--DROP TABLE pg_catalog.stcs_column_errors;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_column_errors(	recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,expected_table_id INTEGER NOT NULL  ENCODE az64	  ,expected_column_id INTEGER NOT NULL  ENCODE az64	  ,actual_table_id INTEGER NOT NULL  ENCODE az64	  ,actual_column_id INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_column_errors owner to rdsdb;--DROP TABLE pg_catalog.stcs_column_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_column_stats(	tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,total_count BIGINT NOT NULL  ENCODE az64	  ,total_runtime BIGINT NOT NULL  ENCODE az64	  ,stale_count BIGINT NOT NULL  ENCODE az64	  ,stale_runtime BIGINT NOT NULL  ENCODE az64	  ,missing_count BIGINT NOT NULL  ENCODE az64	  ,missing_runtime BIGINT NOT NULL  ENCODE az64	  ,report_time BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_column_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_comm_capture;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_comm_capture(	host_ip CHAR(15) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,src_mac CHAR(18) NOT NULL  ENCODE lzo	  ,src_ip CHAR(15) NOT NULL  ENCODE lzo	  ,src_port INTEGER NOT NULL  ENCODE az64	  ,dst_mac CHAR(18) NOT NULL  ENCODE lzo	  ,dst_ip CHAR(15) NOT NULL  ENCODE lzo	  ,dst_port INTEGER NOT NULL  ENCODE az64	  ,ip_id INTEGER NOT NULL  ENCODE az64	  ,ip_len INTEGER NOT NULL  ENCODE az64	  ,ip_frags INTEGER NOT NULL  ENCODE az64	  ,ip_frag_offset INTEGER NOT NULL  ENCODE az64	  ,cmd_code INTEGER NOT NULL  ENCODE az64	  ,seqnum BIGINT NOT NULL  ENCODE az64	  ,channel INTEGER NOT NULL  ENCODE az64	  ,src_slice INTEGER NOT NULL  ENCODE az64	  ,dst_slice INTEGER NOT NULL  ENCODE az64	  ,len INTEGER NOT NULL  ENCODE az64	  ,is_bcast INTEGER NOT NULL  ENCODE az64	  ,ack_reply INTEGER NOT NULL  ENCODE az64	  ,ack_xon INTEGER NOT NULL  ENCODE az64	  ,sync_msg INTEGER NOT NULL  ENCODE az64	  ,fragment INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_comm_capture owner to rdsdb;--DROP TABLE pg_catalog.stcs_comm_diag;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_comm_diag(	now BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,is_source INTEGER NOT NULL  ENCODE az64	  ,packet_count INTEGER NOT NULL  ENCODE az64	  ,duration_ms INTEGER NOT NULL  ENCODE az64	  ,bandwidth DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,config CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_comm_diag owner to rdsdb;--DROP TABLE pg_catalog.stcs_comm_diag_errors;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_comm_diag_errors(	recordtime BIGINT NOT NULL  ENCODE az64	  ,component CHAR(10) NOT NULL  ENCODE lzo	  ,node_index INTEGER NOT NULL  ENCODE az64	  ,switch_index INTEGER NOT NULL  ENCODE az64	  ,ip_addr CHAR(16) NOT NULL  ENCODE lzo	  ,diagnostic_state CHAR(32) NOT NULL  ENCODE lzo	  ,enabled_switch_vec CHAR(9) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_comm_diag_errors owner to rdsdb;--DROP TABLE pg_catalog.stcs_comm_excess;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_comm_excess(	process CHAR(32) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,cmd_code INTEGER NOT NULL  ENCODE az64	  ,seqnum BIGINT NOT NULL  ENCODE az64	  ,channel INTEGER NOT NULL  ENCODE az64	  ,src_slice INTEGER NOT NULL  ENCODE az64	  ,dst_slice INTEGER NOT NULL  ENCODE az64	  ,len INTEGER NOT NULL  ENCODE az64	  ,is_bcast INTEGER NOT NULL  ENCODE az64	  ,ack_reply INTEGER NOT NULL  ENCODE az64	  ,ack_xon INTEGER NOT NULL  ENCODE az64	  ,sync_msg INTEGER NOT NULL  ENCODE az64	  ,fragment INTEGER NOT NULL  ENCODE az64	  ,"comment" CHAR(80) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_comm_excess owner to rdsdb;--DROP TABLE pg_catalog.stcs_comm_integrity_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_comm_integrity_error(	process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,sender_ip CHAR(16) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_comm_integrity_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_comm_pkt_latency;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_comm_pkt_latency(	now BIGINT NOT NULL  ENCODE az64	  ,since BIGINT NOT NULL  ENCODE az64	  ,channel_type INTEGER NOT NULL  ENCODE az64	  ,src_node INTEGER NOT NULL  ENCODE az64	  ,dest_node INTEGER NOT NULL  ENCODE az64	  ,mean DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,stdev DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,min DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,"max" DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,total INTEGER NOT NULL  ENCODE az64	  ,ten_us INTEGER NOT NULL  ENCODE az64	  ,hundred_us INTEGER NOT NULL  ENCODE az64	  ,one_ms INTEGER NOT NULL  ENCODE az64	  ,ten_ms INTEGER NOT NULL  ENCODE az64	  ,hundred_ms INTEGER NOT NULL  ENCODE az64	  ,one_s INTEGER NOT NULL  ENCODE az64	  ,ten_s INTEGER NOT NULL  ENCODE az64	  ,inf INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_comm_pkt_latency owner to rdsdb;--DROP TABLE pg_catalog.stcs_comm_pkt_oob_count;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_comm_pkt_oob_count(	now BIGINT NOT NULL  ENCODE az64	  ,since BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,is_raidp INTEGER NOT NULL  ENCODE az64	  ,bad_guid INTEGER NOT NULL  ENCODE az64	  ,no_channel INTEGER NOT NULL  ENCODE az64	  ,bad_src INTEGER NOT NULL  ENCODE az64	  ,bad_dst INTEGER NOT NULL  ENCODE az64	  ,bad_cmd INTEGER NOT NULL  ENCODE az64	  ,bad_crc INTEGER NOT NULL  ENCODE az64	  ,excess_ack INTEGER NOT NULL  ENCODE az64	  ,low_seqnum INTEGER NOT NULL  ENCODE az64	  ,high_seqnum INTEGER NOT NULL  ENCODE az64	  ,early_xon INTEGER NOT NULL  ENCODE az64	  ,lost_packet INTEGER NOT NULL  ENCODE az64	  ,reorder_packet INTEGER NOT NULL  ENCODE az64	  ,likely_lost_ack INTEGER NOT NULL  ENCODE az64	  ,extreme_delay INTEGER NOT NULL  ENCODE az64	  ,in_rob INTEGER NOT NULL  ENCODE az64	  ,excess_fast_rexmit INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_comm_pkt_oob_count owner to rdsdb;--DROP TABLE pg_catalog.stcs_comm_pkt_sent_count;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_comm_pkt_sent_count(	now BIGINT NOT NULL  ENCODE az64	  ,since BIGINT NOT NULL  ENCODE az64	  ,src_node INTEGER NOT NULL  ENCODE az64	  ,dest_node INTEGER NOT NULL  ENCODE az64	  ,is_raidp INTEGER NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,rexmit INTEGER NOT NULL  ENCODE az64	  ,xon INTEGER NOT NULL  ENCODE az64	  ,reply INTEGER NOT NULL  ENCODE az64	  ,ack INTEGER NOT NULL  ENCODE az64	  ,packet INTEGER NOT NULL  ENCODE az64	  ,fast_rexmit INTEGER NOT NULL  ENCODE az64	  ,original_ack INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_comm_pkt_sent_count owner to rdsdb;--DROP TABLE pg_catalog.stcs_comm_rexmit;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_comm_rexmit(	process CHAR(32) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,cmd_code INTEGER NOT NULL  ENCODE az64	  ,seqnum INTEGER NOT NULL  ENCODE az64	  ,channel INTEGER NOT NULL  ENCODE az64	  ,src_slice INTEGER NOT NULL  ENCODE az64	  ,dst_slice INTEGER NOT NULL  ENCODE az64	  ,len INTEGER NOT NULL  ENCODE az64	  ,is_bcast INTEGER NOT NULL  ENCODE az64	  ,ack_reply INTEGER NOT NULL  ENCODE az64	  ,ack_xon INTEGER NOT NULL  ENCODE az64	  ,sync_msg INTEGER NOT NULL  ENCODE az64	  ,fragment INTEGER NOT NULL  ENCODE az64	  ,rexmit_count INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_comm_rexmit owner to rdsdb;--DROP TABLE pg_catalog.stcs_comm_rexmit_histogram;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_comm_rexmit_histogram(	now BIGINT NOT NULL  ENCODE az64	  ,since BIGINT NOT NULL  ENCODE az64	  ,src_node INTEGER NOT NULL  ENCODE az64	  ,dest_node INTEGER NOT NULL  ENCODE az64	  ,mean DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,stdev DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,min DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,"max" DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,sum INTEGER NOT NULL  ENCODE az64	  ,sample_count INTEGER NOT NULL  ENCODE az64	  ,less_than_5 INTEGER NOT NULL  ENCODE az64	  ,less_than_10 INTEGER NOT NULL  ENCODE az64	  ,less_than_20 INTEGER NOT NULL  ENCODE az64	  ,less_than_100 INTEGER NOT NULL  ENCODE az64	  ,less_than_200 INTEGER NOT NULL  ENCODE az64	  ,less_than_1000 INTEGER NOT NULL  ENCODE az64	  ,less_than_10000 INTEGER NOT NULL  ENCODE az64	  ,inf INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_comm_rexmit_histogram owner to rdsdb;--DROP TABLE pg_catalog.stcs_command_result;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_command_result(	commandtime BIGINT NOT NULL  ENCODE az64	  ,command CHAR(48) NOT NULL  ENCODE lzo	  ,args CHAR(512) NOT NULL  ENCODE lzo	  ,resultcode INTEGER NOT NULL  ENCODE az64	  ,errormsg CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_command_result owner to rdsdb;--DROP TABLE pg_catalog.stcs_command_start;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_command_start(	commandtime BIGINT NOT NULL  ENCODE az64	  ,command CHAR(48) NOT NULL  ENCODE lzo	  ,args CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_command_start owner to rdsdb;--DROP TABLE pg_catalog.stcs_commit_checkpoint;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_commit_checkpoint(	xid BIGINT NOT NULL  ENCODE az64	  ,start_acquire_checkpoint_lock BIGINT NOT NULL  ENCODE az64	  ,start_acquire_checkpoint_start_lock BIGINT NOT NULL  ENCODE az64	  ,start_checkpoint_work BIGINT NOT NULL  ENCODE az64	  ,start_create_control_file BIGINT NOT NULL  ENCODE az64	  ,end_create_control_file BIGINT NOT NULL  ENCODE az64	  ,end_checkpoint BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_commit_checkpoint owner to rdsdb;--DROP TABLE pg_catalog.stcs_commit_internal_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_commit_internal_stats(	xid BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,prefetchesskipped BIGINT NOT NULL  ENCODE az64	  ,numreadsprocessed BIGINT NOT NULL  ENCODE az64	  ,numacksprocessed BIGINT NOT NULL  ENCODE az64	  ,tablebasedtosseligible INTEGER NOT NULL  ENCODE az64	  ,lastackwaittime DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,processtime DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,log_based INTEGER NOT NULL  ENCODE az64	  ,log_based_flags INTEGER NOT NULL  ENCODE az64	  ,index_log_regenerated INTEGER NOT NULL  ENCODE az64	  ,tables_total INTEGER NOT NULL  ENCODE az64	  ,tables_swept INTEGER NOT NULL  ENCODE az64	  ,headers_swept BIGINT NOT NULL  ENCODE az64	  ,tables_changed INTEGER NOT NULL  ENCODE az64	  ,blocks_pending_write BIGINT NOT NULL  ENCODE az64	  ,num_metadata_blocks_retained INTEGER NOT NULL  ENCODE az64	  ,total_metadata_blocks INTEGER NOT NULL  ENCODE az64	  ,sb_size BIGINT NOT NULL  ENCODE az64	  ,num_modified_hdrs_tracked BIGINT NOT NULL  ENCODE az64	  ,sb_sweep_tracking INTEGER NOT NULL  ENCODE az64	  ,sb_version BIGINT NOT NULL  ENCODE az64	  ,sb_sweep_optimized_commit INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_commit_internal_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_commit_regions;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_commit_regions(	node INTEGER NOT NULL  ENCODE az64	  ,commit_time BIGINT NOT NULL  ENCODE az64	  ,sb_ver BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,region_begin BIGINT NOT NULL  ENCODE az64	  ,region_end BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_commit_regions owner to rdsdb;--DROP TABLE pg_catalog.stcs_commit_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_commit_stats(	xid BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,startqueue BIGINT NOT NULL  ENCODE az64	  ,startwork BIGINT NOT NULL  ENCODE az64	  ,endflush BIGINT NOT NULL  ENCODE az64	  ,endstage BIGINT NOT NULL  ENCODE az64	  ,endlocal BIGINT NOT NULL  ENCODE az64	  ,startglobal BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,queuelen BIGINT NOT NULL  ENCODE az64	  ,permblocks BIGINT NOT NULL  ENCODE az64	  ,newblocks BIGINT NOT NULL  ENCODE az64	  ,dirtyblocks BIGINT NOT NULL  ENCODE az64	  ,tombstonedblocks BIGINT NOT NULL  ENCODE az64	  ,tossedblocks BIGINT NOT NULL  ENCODE az64	  ,headers BIGINT NOT NULL  ENCODE az64	  ,numxids INTEGER NOT NULL  ENCODE az64	  ,oldestxid BIGINT NOT NULL  ENCODE az64	  ,extwritelatency BIGINT NOT NULL  ENCODE az64	  ,metadatawritten INTEGER NOT NULL  ENCODE az64	  ,batched_by BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_commit_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_committed_txn;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_committed_txn(	dump_end_time BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,end_time BIGINT NOT NULL  ENCODE az64	  ,tbl BIGINT NOT NULL  ENCODE az64	  ,is_write INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_committed_txn owner to rdsdb;--DROP TABLE pg_catalog.stcs_compile_info;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_compile_info(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,locus INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,"path" CHAR(255) NOT NULL  ENCODE lzo	  ,compile INTEGER NOT NULL  ENCODE az64	  ,complevel INTEGER NOT NULL  ENCODE az64	  ,cachehit INTEGER NOT NULL  ENCODE az64	  ,tokwaittime BIGINT NOT NULL  ENCODE az64	  ,compilestarttime BIGINT NOT NULL  ENCODE az64	  ,compileendtime BIGINT NOT NULL  ENCODE az64	  ,compilelocktime BIGINT NOT NULL  ENCODE az64	  ,compilememory BIGINT NOT NULL  ENCODE az64	  ,getsuccess INTEGER NOT NULL  ENCODE az64	  ,gettime BIGINT NOT NULL  ENCODE az64	  ,objsize BIGINT NOT NULL  ENCODE az64	  ,skip_opt_compile INTEGER NOT NULL  ENCODE az64	  ,replace_obj_status INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_compile_info owner to rdsdb;--DROP TABLE pg_catalog.stcs_compile_service;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_compile_service(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,locus INTEGER NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,"path" CHAR(255) NOT NULL  ENCODE lzo	  ,lookupstarttime BIGINT NOT NULL  ENCODE az64	  ,lookupendtime BIGINT NOT NULL  ENCODE az64	  ,lookupsuccess INTEGER NOT NULL  ENCODE az64	  ,putstarttime BIGINT NOT NULL  ENCODE az64	  ,putendtime BIGINT NOT NULL  ENCODE az64	  ,putsuccess INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_compile_service owner to rdsdb;--DROP TABLE pg_catalog.stcs_complyze;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_complyze(	measuretime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,"encoding" INTEGER NOT NULL  ENCODE az64	  ,size BIGINT NOT NULL  ENCODE az64	  ,tbl_name CHAR(256) NOT NULL  ENCODE lzo	  ,col_name CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_complyze owner to rdsdb;--DROP TABLE pg_catalog.stcs_concurrency_scaling_query_mapping;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_concurrency_scaling_query_mapping(	userid INTEGER NOT NULL  ENCODE az64	  ,primary_query INTEGER NOT NULL  ENCODE az64	  ,concurrency_scaling_query INTEGER NOT NULL  ENCODE az64	  ,concurrency_scaling_cluster CHAR(64) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_concurrency_scaling_query_mapping owner to rdsdb;--DROP TABLE pg_catalog.stcs_concurrency_scaling_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_concurrency_scaling_usage(	recordtime BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"cluster" CHAR(128) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,request_id CHAR(36) NOT NULL  ENCODE lzo	  ,incurred_usage_ms INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_concurrency_scaling_usage owner to rdsdb;--DROP TABLE pg_catalog.stcs_concurrency_scaling_usage_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_concurrency_scaling_usage_error(	recordtime BIGINT NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_concurrency_scaling_usage_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_config;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_config(	name CHAR(50) NOT NULL  ENCODE lzo	  ,value CHAR(200) NOT NULL  ENCODE lzo	  ,category CHAR(60) NOT NULL  ENCODE lzo	  ,advanced INTEGER NOT NULL  ENCODE az64	  ,helpfile CHAR(200) NOT NULL  ENCODE lzo	  ,"updater" CHAR(50) NOT NULL  ENCODE lzo	  ,chooser CHAR(50) NOT NULL  ENCODE lzo	  ,"restart" INTEGER NOT NULL  ENCODE az64	  ,summary CHAR(300) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_config owner to rdsdb;--DROP TABLE pg_catalog.stcs_config_chooser;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_config_chooser(	name CHAR(50) NOT NULL  ENCODE lzo	  ,value CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_config_chooser owner to rdsdb;--DROP TABLE pg_catalog.stcs_config_history;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_config_history(	changed BIGINT NOT NULL  ENCODE az64	  ,filename CHAR(200) NOT NULL  ENCODE lzo	  ,reason CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_config_history owner to rdsdb;--DROP TABLE pg_catalog.stcs_connection_log;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_connection_log(	event CHAR(50) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,remotehost CHAR(32) NOT NULL  ENCODE lzo	  ,remoteport CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,dbname CHAR(50) NOT NULL  ENCODE lzo	  ,username CHAR(50) NOT NULL  ENCODE lzo	  ,authmethod CHAR(32) NOT NULL  ENCODE lzo	  ,duration BIGINT NOT NULL  ENCODE az64	  ,sslversion CHAR(50) NOT NULL  ENCODE lzo	  ,sslcipher CHAR(128) NOT NULL  ENCODE lzo	  ,mtu INTEGER NOT NULL  ENCODE az64	  ,sslcompression CHAR(64) NOT NULL  ENCODE lzo	  ,sslexpansion CHAR(64) NOT NULL  ENCODE lzo	  ,iamauthguid CHAR(36) NOT NULL  ENCODE lzo	  ,application_name CHAR(250) NOT NULL  ENCODE lzo	  ,os_version CHAR(64) NOT NULL  ENCODE lzo	  ,driver_version CHAR(64) NOT NULL  ENCODE lzo	  ,plugin_name CHAR(32) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_connection_log owner to rdsdb;--DROP TABLE pg_catalog.stcs_consistency;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_consistency(	"time" BIGINT NOT NULL  ENCODE az64	  ,"type" CHAR(1) NOT NULL  ENCODE lzo	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_consistency owner to rdsdb;--DROP TABLE pg_catalog.stcs_core_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_core_stat(	currenttime BIGINT NOT NULL  ENCODE az64	  ,sampletime BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,core INTEGER NOT NULL  ENCODE az64	  ,elapsed BIGINT NOT NULL  ENCODE az64	  ,utime BIGINT NOT NULL  ENCODE az64	  ,stime BIGINT NOT NULL  ENCODE az64	  ,ntime BIGINT NOT NULL  ENCODE az64	  ,idle BIGINT NOT NULL  ENCODE az64	  ,iowait BIGINT NOT NULL  ENCODE az64	  ,irq BIGINT NOT NULL  ENCODE az64	  ,softirq BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_core_stat owner to rdsdb;--DROP TABLE pg_catalog.stcs_cost_control_updates;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_cost_control_updates(	recordtime BIGINT NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,quota_id CHAR(120) NOT NULL  ENCODE lzo	  ,"usage" INTEGER NOT NULL  ENCODE az64	  ,available INTEGER NOT NULL  ENCODE az64	  ,threshold INTEGER NOT NULL  ENCODE az64	  ,updated_at BIGINT NOT NULL  ENCODE az64	  ,period_start BIGINT NOT NULL  ENCODE az64	  ,period_end BIGINT NOT NULL  ENCODE az64	  ,feature CHAR(120) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_cost_control_updates owner to rdsdb;--DROP TABLE pg_catalog.stcs_cqilog;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_cqilog(	logtime BIGINT NOT NULL  ENCODE az64	  ,"action" CHAR(256) NOT NULL  ENCODE lzo	  ,reason CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_cqilog owner to rdsdb;--DROP TABLE pg_catalog.stcs_create_replication;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_create_replication(	recordtime BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,id CHAR(64) NOT NULL  ENCODE lzo	  ,flags INTEGER NOT NULL  ENCODE az64	  ,new_node INTEGER NOT NULL  ENCODE az64	  ,new_diskno INTEGER NOT NULL  ENCODE az64	  ,new_address BIGINT NOT NULL  ENCODE az64	  ,crc INTEGER NOT NULL  ENCODE az64	  ,reason CHAR(24) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_create_replication owner to rdsdb;--DROP TABLE pg_catalog.stcs_dag_cleanup;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_dag_cleanup(	ending_xid BIGINT NOT NULL  ENCODE az64	  ,is_commit INTEGER NOT NULL  ENCODE az64	  ,"timestamp" BIGINT NOT NULL  ENCODE az64	  ,event CHAR(6) NOT NULL  ENCODE lzo	  ,dag_verts BIGINT NOT NULL  ENCODE az64	  ,txn_set_size INTEGER NOT NULL  ENCODE az64	  ,lowest_added_xid BIGINT NOT NULL  ENCODE az64	  ,highest_added_xid BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_dag_cleanup owner to rdsdb;--DROP TABLE pg_catalog.stcs_datashare_changes_consumer;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_datashare_changes_consumer(	userid INTEGER NOT NULL  ENCODE az64	  ,username CHAR(128) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,initial_query_time BIGINT NOT NULL  ENCODE az64	  ,actiontime BIGINT NOT NULL  ENCODE az64	  ,"action" INTEGER NOT NULL  ENCODE az64	  ,sharedbid INTEGER NOT NULL  ENCODE az64	  ,sharedbname CHAR(128) NOT NULL  ENCODE lzo	  ,sharename CHAR(128) NOT NULL  ENCODE lzo	  ,produceraccount CHAR(12) NOT NULL  ENCODE lzo	  ,producernamespace CHAR(128) NOT NULL  ENCODE lzo	  ,targettype INTEGER NOT NULL  ENCODE az64	  ,targetid INTEGER NOT NULL  ENCODE az64	  ,targetname CHAR(128) NOT NULL  ENCODE lzo	  ,status INTEGER NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_datashare_changes_consumer owner to rdsdb;--DROP TABLE pg_catalog.stcs_datashare_changes_producer;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_datashare_changes_producer(	userid INTEGER NOT NULL  ENCODE az64	  ,username CHAR(128) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,initial_query_time BIGINT NOT NULL  ENCODE az64	  ,actiontime BIGINT NOT NULL  ENCODE az64	  ,"action" INTEGER NOT NULL  ENCODE az64	  ,shareid INTEGER NOT NULL  ENCODE az64	  ,sharename CHAR(128) NOT NULL  ENCODE lzo	  ,dbid INTEGER NOT NULL  ENCODE az64	  ,dbname CHAR(128) NOT NULL  ENCODE lzo	  ,targetroletype INTEGER NOT NULL  ENCODE az64	  ,targetroleid INTEGER NOT NULL  ENCODE az64	  ,targetrolename CHAR(128) NOT NULL  ENCODE lzo	  ,datashareobjtype INTEGER NOT NULL  ENCODE az64	  ,datashareobjid INTEGER NOT NULL  ENCODE az64	  ,datashareobjname CHAR(128) NOT NULL  ENCODE lzo	  ,consumeraccount CHAR(12) NOT NULL  ENCODE lzo	  ,consumernamespace CHAR(128) NOT NULL  ENCODE lzo	  ,shareproperty CHAR(64) NOT NULL  ENCODE lzo	  ,sharepropvalue CHAR(128) NOT NULL  ENCODE lzo	  ,status INTEGER NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_datashare_changes_producer owner to rdsdb;--DROP TABLE pg_catalog.stcs_datashare_dsms;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_datashare_dsms(	userid INTEGER NOT NULL  ENCODE az64	  ,username CHAR(128) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,initial_query_time BIGINT NOT NULL  ENCODE az64	  ,requestid CHAR(50) NOT NULL  ENCODE lzo	  ,shareid INTEGER NOT NULL  ENCODE az64	  ,sharename CHAR(128) NOT NULL  ENCODE lzo	  ,produceraccount CHAR(12) NOT NULL  ENCODE lzo	  ,producernamespace CHAR(128) NOT NULL  ENCODE lzo	  ,role INTEGER NOT NULL  ENCODE az64	  ,apicall INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_datashare_dsms owner to rdsdb;--DROP TABLE pg_catalog.stcs_datashare_request_consumer;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_datashare_request_consumer(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,initial_query_time BIGINT NOT NULL  ENCODE az64	  ,requestid CHAR(50) NOT NULL  ENCODE lzo	  ,sb_version BIGINT NOT NULL  ENCODE az64	  ,dbtype INTEGER NOT NULL  ENCODE az64	  ,dbid INTEGER NOT NULL  ENCODE az64	  ,api_call INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,transaction_uid CHAR(50) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_datashare_request_consumer owner to rdsdb;--DROP TABLE pg_catalog.stcs_datashare_request_producer;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_datashare_request_producer(	userid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,requestid CHAR(50) NOT NULL  ENCODE lzo	  ,sb_version BIGINT NOT NULL  ENCODE az64	  ,dbtype INTEGER NOT NULL  ENCODE az64	  ,dbid INTEGER NOT NULL  ENCODE az64	  ,shareid INTEGER NOT NULL  ENCODE az64	  ,sharename CHAR(128) NOT NULL  ENCODE lzo	  ,api_call INTEGER NOT NULL  ENCODE az64	  ,obj_type INTEGER NOT NULL  ENCODE az64	  ,obj_oid INTEGER NOT NULL  ENCODE az64	  ,obj_name CHAR(128) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,consumeraccountid CHAR(50) NOT NULL  ENCODE lzo	  ,consumernamespace CHAR(50) NOT NULL  ENCODE lzo	  ,consumer_transaction_uid CHAR(50) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_datashare_request_producer owner to rdsdb;--DROP TABLE pg_catalog.stcs_datasharing_log;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_datasharing_log(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,dskind CHAR(20) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,message CHAR(1024) NOT NULL  ENCODE lzo	  ,on_leader INTEGER NOT NULL  ENCODE az64	  ,initial_query_time BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_datasharing_log owner to rdsdb;--DROP TABLE pg_catalog.stcs_ddltext;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_ddltext(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,text CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_ddltext owner to rdsdb;--DROP TABLE pg_catalog.stcs_dead_tuples_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_dead_tuples_stats(	eventtime BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,num_visible_rows BIGINT NOT NULL  ENCODE az64	  ,dead_tuples_accurate BIGINT NOT NULL  ENCODE az64	  ,dead_tuples_stats BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_dead_tuples_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_delete;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_delete(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_delete owner to rdsdb;--DROP TABLE pg_catalog.stcs_delete_tag_throttle;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_delete_tag_throttle(	node_num INTEGER NOT NULL  ENCODE az64	  ,window_start BIGINT NOT NULL  ENCODE az64	  ,window_end BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,max_delete_tags INTEGER NOT NULL  ENCODE az64	  ,delete_tags_outstanding BIGINT NOT NULL  ENCODE az64	  ,delete_tags_total BIGINT NOT NULL  ENCODE az64	  ,delete_tags_window BIGINT NOT NULL  ENCODE az64	  ,tps INTEGER NOT NULL  ENCODE az64	  ,contains_burst_write INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_delete_tag_throttle owner to rdsdb;--DROP TABLE pg_catalog.stcs_disk_cache_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_disk_cache_stats(	logtime BIGINT NOT NULL  ENCODE az64	  ,adds BIGINT NOT NULL  ENCODE az64	  ,new_blocks BIGINT NOT NULL  ENCODE az64	  ,dbr_blocks BIGINT NOT NULL  ENCODE az64	  ,pins BIGINT NOT NULL  ENCODE az64	  ,"faults" BIGINT NOT NULL  ENCODE az64	  ,throttles BIGINT NOT NULL  ENCODE az64	  ,scan_starts BIGINT NOT NULL  ENCODE az64	  ,cache_size INTEGER NOT NULL  ENCODE az64	  ,lru_size INTEGER NOT NULL  ENCODE az64	  ,throttle BIGINT NOT NULL  ENCODE az64	  ,ra_points DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,scans_running INTEGER NOT NULL  ENCODE az64	  ,evictions BIGINT NOT NULL  ENCODE az64	  ,prefetches BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,max_size INTEGER NOT NULL  ENCODE az64	  ,max_pushout_latency_us BIGINT NOT NULL  ENCODE az64	  ,rowset_blocks_spilled BIGINT NOT NULL  ENCODE az64	  ,rerep_write_skipped_exhausted_write_pool BIGINT NOT NULL  ENCODE az64	  ,max_rowsets_pinned BIGINT NOT NULL  ENCODE az64	  ,rowsets_currently_in_cache BIGINT NOT NULL  ENCODE az64	  ,rowsets_currently_pinned BIGINT NOT NULL  ENCODE az64	  ,accesses_to_outstanding_req BIGINT NOT NULL  ENCODE az64	  ,percentage_shared_mem_used INTEGER NOT NULL  ENCODE az64	  ,max_percentage_shared_mem_used INTEGER NOT NULL  ENCODE az64	  ,disk_upgrade_requests BIGINT NOT NULL  ENCODE az64	  ,successful_disk_upgrades BIGINT NOT NULL  ENCODE az64	  ,disk_upgrades_dropped BIGINT NOT NULL  ENCODE az64	  ,disk_upgrades_not_useful BIGINT NOT NULL  ENCODE az64	  ,s3_upgrade_requests BIGINT NOT NULL  ENCODE az64	  ,successful_s3_upgrades BIGINT NOT NULL  ENCODE az64	  ,s3_upgrades_dropped BIGINT NOT NULL  ENCODE az64	  ,num_upsizings BIGINT NOT NULL  ENCODE az64	  ,num_downsizings BIGINT NOT NULL  ENCODE az64	  ,largest_size_limit BIGINT NOT NULL  ENCODE az64	  ,smallest_size_limit BIGINT NOT NULL  ENCODE az64	  ,avg_size_limit BIGINT NOT NULL  ENCODE az64	  ,oom_eviction_calls INTEGER NOT NULL  ENCODE az64	  ,num_pushout_downsizings BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_disk_cache_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_disk_cache_write;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_disk_cache_write(	blocks_pushed INTEGER NOT NULL  ENCODE az64	  ,blocks_instant_pushed INTEGER NOT NULL  ENCODE az64	  ,avg_lru_size_before_push INTEGER NOT NULL  ENCODE az64	  ,push_attempts INTEGER NOT NULL  ENCODE az64	  ,pending_writes_push INTEGER NOT NULL  ENCODE az64	  ,pending_reads_push INTEGER NOT NULL  ENCODE az64	  ,blocks_written_back INTEGER NOT NULL  ENCODE az64	  ,writeback_preempts INTEGER NOT NULL  ENCODE az64	  ,avg_lru_size_before_writeback INTEGER NOT NULL  ENCODE az64	  ,writeback_attempts INTEGER NOT NULL  ENCODE az64	  ,pending_writes_writeback INTEGER NOT NULL  ENCODE az64	  ,pending_reads_writeback INTEGER NOT NULL  ENCODE az64	  ,avg_push_time_microsec BIGINT NOT NULL  ENCODE az64	  ,avg_writeback_time_microsec BIGINT NOT NULL  ENCODE az64	  ,sample_start_time BIGINT NOT NULL  ENCODE az64	  ,sample_end_time BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_disk_cache_write owner to rdsdb;--DROP TABLE pg_catalog.stcs_disk_extent_splits;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_disk_extent_splits(	split_time BIGINT NOT NULL  ENCODE az64	  ,"owner" INTEGER NOT NULL  ENCODE az64	  ,"host" INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,addr INTEGER NOT NULL  ENCODE az64	  ,"start" INTEGER NOT NULL  ENCODE az64	  ,size_before INTEGER NOT NULL  ENCODE az64	  ,size_after INTEGER NOT NULL  ENCODE az64	  ,new_start INTEGER NOT NULL  ENCODE az64	  ,new_size INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_disk_extent_splits owner to rdsdb;--DROP TABLE pg_catalog.stcs_disk_failures;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_disk_failures(	event_time BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"host" INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,event CHAR(20) NOT NULL  ENCODE lzo	  ,err_code INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_disk_failures owner to rdsdb;--DROP TABLE pg_catalog.stcs_disk_full_diag;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_disk_full_diag(	currenttime BIGINT NOT NULL  ENCODE az64	  ,node_num BIGINT NOT NULL  ENCODE az64	  ,query_id BIGINT NOT NULL  ENCODE az64	  ,temp_blocks BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_disk_full_diag owner to rdsdb;--DROP TABLE pg_catalog.stcs_disk_speeds;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_disk_speeds(	measurement_time BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,mbps INTEGER NOT NULL  ENCODE az64	  ,failed INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_disk_speeds owner to rdsdb;--DROP TABLE pg_catalog.stcs_disk_topology;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_disk_topology(	t BIGINT NOT NULL  ENCODE az64	  ,node CHAR(28) NOT NULL  ENCODE lzo	  ,"host" CHAR(28) NOT NULL  ENCODE lzo	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,mirror INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_disk_topology owner to rdsdb;--DROP TABLE pg_catalog.stcs_diskman_query_block_read_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_diskman_query_block_read_stats(	recordtime BIGINT NOT NULL  ENCODE az64	  ,node_num INTEGER NOT NULL  ENCODE az64	  ,query_read_memory BIGINT NOT NULL  ENCODE az64	  ,query_read_disk BIGINT NOT NULL  ENCODE az64	  ,diskman_read_memory BIGINT NOT NULL  ENCODE az64	  ,diskman_read_disk BIGINT NOT NULL  ENCODE az64	  ,read_io_redirected BIGINT NOT NULL  ENCODE az64	  ,read_completion_outside_diskman BIGINT NOT NULL  ENCODE az64	  ,read_completion_in_diskman BIGINT NOT NULL  ENCODE az64	  ,read_completion_redirected BIGINT NOT NULL  ENCODE az64	  ,query_read_append_pending_io BIGINT NOT NULL  ENCODE az64	  ,diskman_read_append_pending_io BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_diskman_query_block_read_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_disks_blocks_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_disks_blocks_stats(	node INTEGER NOT NULL  ENCODE az64	  ,logtime BIGINT NOT NULL  ENCODE az64	  ,local_cap BIGINT NOT NULL  ENCODE az64	  ,sb_cap BIGINT NOT NULL  ENCODE az64	  ,allocated_blks BIGINT NOT NULL  ENCODE az64	  ,primary_allocated_blks BIGINT NOT NULL  ENCODE az64	  ,mirror_allocated_blks BIGINT NOT NULL  ENCODE az64	  ,perm_blks BIGINT NOT NULL  ENCODE az64	  ,to_backup_blks BIGINT NOT NULL  ENCODE az64	  ,temp_blks BIGINT NOT NULL  ENCODE az64	  ,local_backedup_blks BIGINT NOT NULL  ENCODE az64	  ,primary_rerep_blks INTEGER NOT NULL  ENCODE az64	  ,mirror_rerep_blks INTEGER NOT NULL  ENCODE az64	  ,num_primary_reserved BIGINT NOT NULL  ENCODE az64	  ,num_mirror_reserved BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_disks_blocks_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_dist;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_dist(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,packets INTEGER NOT NULL  ENCODE az64	  ,topology_signature BIGINT NOT NULL  ENCODE az64	  ,is_intra_node CHAR(1) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_dist owner to rdsdb;--DROP TABLE pg_catalog.stcs_dropped_replication;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_dropped_replication(	recordtime BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,address BIGINT NOT NULL  ENCODE az64	  ,invalid INTEGER NOT NULL  ENCODE az64	  ,failed INTEGER NOT NULL  ENCODE az64	  ,reps_remaining INTEGER NOT NULL  ENCODE az64	  ,reason CHAR(24) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_dropped_replication owner to rdsdb;--DROP TABLE pg_catalog.stcs_dynamodb_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_dynamodb_error(	userid INTEGER NOT NULL  ENCODE az64	  ,qid INTEGER NOT NULL  ENCODE az64	  ,process CHAR(12) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,errcode INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(90) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,context CHAR(100) NOT NULL  ENCODE lzo	  ,error CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_dynamodb_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_dynamodb_restore;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_dynamodb_restore(	starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,in_progress INTEGER NOT NULL  ENCODE az64	  ,errored INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_dynamodb_restore owner to rdsdb;--DROP TABLE pg_catalog.stcs_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_error(	userid INTEGER NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,errcode INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(90) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,context CHAR(100) NOT NULL  ENCODE lzo	  ,error CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_event_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_event_trace(	event INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,sliceid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(80) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,message CHAR(400) NOT NULL  ENCODE lzo	  ,event_name CHAR(128) NOT NULL  ENCODE lzo	  ,"level" INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_event_trace owner to rdsdb;--DROP TABLE pg_catalog.stcs_exec_state;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_exec_state(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,currenttime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,"label" CHAR(256) NOT NULL  ENCODE lzo	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,num_parts INTEGER NOT NULL  ENCODE az64	  ,is_rrscan CHAR(1) NOT NULL  ENCODE lzo	  ,is_delayed_scan CHAR(1) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_exec_state owner to rdsdb;--DROP TABLE pg_catalog.stcs_explain;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_explain(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,nodeid INTEGER NOT NULL  ENCODE az64	  ,parentid INTEGER NOT NULL  ENCODE az64	  ,plannode CHAR(400) NOT NULL  ENCODE lzo	  ,info CHAR(400) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_explain owner to rdsdb;--DROP TABLE pg_catalog.stcs_external_catalog_calls;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_external_catalog_calls(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,"call" INTEGER NOT NULL  ENCODE az64	  ,objects INTEGER NOT NULL  ENCODE az64	  ,duration BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_external_catalog_calls owner to rdsdb;--DROP TABLE pg_catalog.stcs_fabric_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_fabric_stats(	slice INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segnum INTEGER NOT NULL  ENCODE az64	  ,dst INTEGER NOT NULL  ENCODE az64	  ,nullbytes INTEGER NOT NULL  ENCODE az64	  ,zerobytes INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_fabric_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_federated_calls;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_federated_calls(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,sourcetype CHAR(30) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,calltype CHAR(30) NOT NULL  ENCODE lzo	  ,duration BIGINT NOT NULL  ENCODE az64	  ,querytext CHAR(4000) NOT NULL  ENCODE lzo	  ,on_leader CHAR(1) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_federated_calls owner to rdsdb;--DROP TABLE pg_catalog.stcs_federated_query;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_federated_query(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,sourcetype CHAR(30) NOT NULL  ENCODE lzo	  ,"database" CHAR(30) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,querytext CHAR(4000) NOT NULL  ENCODE lzo	  ,num_rows BIGINT NOT NULL  ENCODE az64	  ,num_bytes BIGINT NOT NULL  ENCODE az64	  ,duration BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_federated_query owner to rdsdb;--DROP TABLE pg_catalog.stcs_federated_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_federated_trace(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,message CHAR(1024) NOT NULL  ENCODE lzo	  ,on_leader INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_federated_trace owner to rdsdb;--DROP TABLE pg_catalog.stcs_fetchers;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_fetchers(	query INTEGER NOT NULL  ENCODE az64	  ,seg INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,fetcher_id INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,pins INTEGER NOT NULL  ENCODE az64	  ,"faults" INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_fetchers owner to rdsdb;--DROP TABLE pg_catalog.stcs_file_scan;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_file_scan(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,name CHAR(90) NOT NULL  ENCODE lzo	  ,"lines" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,loadtime BIGINT NOT NULL  ENCODE az64	  ,curtime BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_file_scan owner to rdsdb;--DROP TABLE pg_catalog.stcs_freed_disk_addrs;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_freed_disk_addrs(	recordtime BIGINT NOT NULL  ENCODE az64	  ,context CHAR(64) NOT NULL  ENCODE lzo	  ,"owner" INTEGER NOT NULL  ENCODE az64	  ,"host" INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,disk_addr INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_freed_disk_addrs owner to rdsdb;--DROP TABLE pg_catalog.stcs_ghost_buffer_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_ghost_buffer_stats(	node_num INTEGER NOT NULL  ENCODE az64	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,end_time BIGINT NOT NULL  ENCODE az64	  ,ghb_eviction_threshold BIGINT NOT NULL  ENCODE az64	  ,ghb_size_before_addition BIGINT NOT NULL  ENCODE az64	  ,num_blocks_evicted BIGINT NOT NULL  ENCODE az64	  ,num_blocks_added BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_ghost_buffer_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_ght_hash_partitions;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_ght_hash_partitions(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,lds INTEGER NOT NULL  ENCODE az64	  ,part_num INTEGER NOT NULL  ENCODE az64	  ,num_blocks INTEGER NOT NULL  ENCODE az64	  ,mem_resident INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,slots INTEGER NOT NULL  ENCODE az64	  ,occupied INTEGER NOT NULL  ENCODE az64	  ,resizes INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_ght_hash_partitions owner to rdsdb;--DROP TABLE pg_catalog.stcs_hash;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_hash(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,slots INTEGER NOT NULL  ENCODE az64	  ,occupied INTEGER NOT NULL  ENCODE az64	  ,maxlength INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,num_parts INTEGER NOT NULL  ENCODE az64	  ,est_rows BIGINT NOT NULL  ENCODE az64	  ,num_blocks_permitted INTEGER NOT NULL  ENCODE az64	  ,resizes INTEGER NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,used_prefetching CHAR(1) NOT NULL  ENCODE lzo	  ,runtime_filter_size INTEGER NOT NULL  ENCODE az64	  ,max_runtime_filter_size INTEGER NOT NULL  ENCODE az64	  ,runtime_filter_type INTEGER NOT NULL  ENCODE az64	  ,is_hashed_subplan CHAR(1) NOT NULL  ENCODE lzo	  ,build_global_hash_table CHAR(1) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_hash owner to rdsdb;--DROP TABLE pg_catalog.stcs_hash_partitions;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_hash_partitions(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,part_num INTEGER NOT NULL  ENCODE az64	  ,num_blocks INTEGER NOT NULL  ENCODE az64	  ,mem_resident INTEGER NOT NULL  ENCODE az64	  ,card BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_hash_partitions owner to rdsdb;--DROP TABLE pg_catalog.stcs_hashjoin;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_hashjoin(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,num_parts INTEGER NOT NULL  ENCODE az64	  ,join_type INTEGER NOT NULL  ENCODE az64	  ,hash_looped CHAR(1) NOT NULL  ENCODE lzo	  ,switched_parts CHAR(1) NOT NULL  ENCODE lzo	  ,used_prefetching CHAR(1) NOT NULL  ENCODE lzo	  ,hash_segment INTEGER NOT NULL  ENCODE az64	  ,hash_step INTEGER NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,distribution INTEGER NOT NULL  ENCODE az64	  ,is_externalized CHAR(1) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_hashjoin owner to rdsdb;--DROP TABLE pg_catalog.stcs_hashjoin_partitions;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_hashjoin_partitions(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,part_num INTEGER NOT NULL  ENCODE az64	  ,num_blocks INTEGER NOT NULL  ENCODE az64	  ,hash_loops INTEGER NOT NULL  ENCODE az64	  ,switched_parts CHAR(1) NOT NULL  ENCODE lzo	  ,input_card BIGINT NOT NULL  ENCODE az64	  ,output_card BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_hashjoin_partitions owner to rdsdb;--DROP TABLE pg_catalog.stcs_hdr_integrity_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_hdr_integrity_error(	recordtime BIGINT NOT NULL  ENCODE az64	  ,node_num INTEGER NOT NULL  ENCODE az64	  ,sb_ver BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,hdr_dump CHAR(209) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_hdr_integrity_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_hllsketch_column_linker;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_hllsketch_column_linker(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,columnname CHAR(400) NOT NULL  ENCODE lzo	  ,sqloperation INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_hllsketch_column_linker owner to rdsdb;--DROP TABLE pg_catalog.stcs_hllsketch_function;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_hllsketch_function(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,functionid INTEGER NOT NULL  ENCODE az64	  ,sqloperation INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_hllsketch_function owner to rdsdb;--DROP TABLE pg_catalog.stcs_hllsketch_query;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_hllsketch_query(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,query_cmd_type INTEGER NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_hllsketch_query owner to rdsdb;--DROP TABLE pg_catalog.stcs_hot_tables_qpd_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_hot_tables_qpd_stats(	eventtime BIGINT NOT NULL  ENCODE az64	  ,num_hot_tables INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,highest_qpd BIGINT NOT NULL  ENCODE az64	  ,min_qpd BIGINT NOT NULL  ENCODE az64	  ,max_qpd BIGINT NOT NULL  ENCODE az64	  ,avg_qpd BIGINT NOT NULL  ENCODE az64	  ,median_qpd BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_hot_tables_qpd_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_inc_commit_stats_instrumentation;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_inc_commit_stats_instrumentation(	mismatch_type CHAR(8) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pos INTEGER NOT NULL  ENCODE az64	  ,persistency INTEGER NOT NULL  ENCODE az64	  ,a_flags INTEGER NOT NULL  ENCODE az64	  ,tombstone_id INTEGER NOT NULL  ENCODE az64	  ,has_local_rep INTEGER NOT NULL  ENCODE az64	  ,num_reps INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,"json" CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_inc_commit_stats_instrumentation owner to rdsdb;--DROP TABLE pg_catalog.stcs_incremental_resize_state;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_incremental_resize_state(	resizeid CHAR(128) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,resizephase CHAR(32) NOT NULL  ENCODE lzo	  ,resizeplanstate CHAR(32) NOT NULL  ENCODE lzo	  ,nodenum INTEGER NOT NULL  ENCODE az64	  ,globalslicenum INTEGER NOT NULL  ENCODE az64	  ,localslicenum INTEGER NOT NULL  ENCODE az64	  ,datablocks INTEGER NOT NULL  ENCODE az64	  ,metadatablocks INTEGER NOT NULL  ENCODE az64	  ,distallblocks INTEGER NOT NULL  ENCODE az64	  ,metachainblocks INTEGER NOT NULL  ENCODE az64	  ,blockchainmetachainblocks INTEGER NOT NULL  ENCODE az64	  ,leadersnapshotblocks INTEGER NOT NULL  ENCODE az64	  ,pgwalblocks INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,distallrows BIGINT NOT NULL  ENCODE az64	  ,persist_temp_tables_state CHAR(100) NOT NULL  ENCODE lzo	  ,temp_blocks INTEGER NOT NULL  ENCODE az64	  ,temp_distall_blocks INTEGER NOT NULL  ENCODE az64	  ,temp_rows BIGINT NOT NULL  ENCODE az64	  ,temp_distall_rows BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_incremental_resize_state owner to rdsdb;--DROP TABLE pg_catalog.stcs_inflight;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_inflight(	userid INTEGER NOT NULL  ENCODE az64	  ,logtime BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,text CHAR(100) NOT NULL  ENCODE lzo	  ,suspended INTEGER NOT NULL  ENCODE az64	  ,insert_pristine INTEGER NOT NULL  ENCODE az64	  ,working_mem BIGINT NOT NULL  ENCODE az64	  ,concurrency_scaling_status INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_inflight owner to rdsdb;--DROP TABLE pg_catalog.stcs_insert;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_insert(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_insert owner to rdsdb;--DROP TABLE pg_catalog.stcs_internal_query_details;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_internal_query_details(	query INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,initial_query_time BIGINT NOT NULL  ENCODE az64	  ,seldispatch_status INTEGER NOT NULL  ENCODE az64	  ,query_cmd_type INTEGER NOT NULL  ENCODE az64	  ,user_temp_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,volt_temp_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,spectrum_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,user_perm_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,system_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,query_target_table_type INTEGER NOT NULL  ENCODE az64	  ,memory_demanding_info BIGINT NOT NULL  ENCODE az64	  ,nobackup_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,zindex_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,pg_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,dirty_tables_read INTEGER NOT NULL  ENCODE az64	  ,wlm_slot_type CHAR(8) NOT NULL  ENCODE lzo	  ,is_short_query INTEGER NOT NULL  ENCODE az64	  ,est_peak_mem_needed BIGINT NOT NULL  ENCODE az64	  ,wlm_query_memory BIGINT NOT NULL  ENCODE az64	  ,datasharing_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,uses_new_cost_model CHAR(1) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_internal_query_details owner to rdsdb;--DROP TABLE pg_catalog.stcs_invalid_replication;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_invalid_replication(	recordtime BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,node0 INTEGER NOT NULL  ENCODE az64	  ,diskno0 INTEGER NOT NULL  ENCODE az64	  ,node1 INTEGER NOT NULL  ENCODE az64	  ,diskno1 INTEGER NOT NULL  ENCODE az64	  ,node2 INTEGER NOT NULL  ENCODE az64	  ,diskno2 INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_invalid_replication owner to rdsdb;--DROP TABLE pg_catalog.stcs_invariant;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_invariant(	node INTEGER NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,now BIGINT NOT NULL  ENCODE az64	  ,name CHAR(80) NOT NULL  ENCODE lzo	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,padb_version CHAR(50) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_invariant owner to rdsdb;--DROP TABLE pg_catalog.stcs_io_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_io_error(	recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(10) NOT NULL  ENCODE lzo	  ,io_offset BIGINT NOT NULL  ENCODE az64	  ,nbytes BIGINT NOT NULL  ENCODE az64	  ,"result" BIGINT NOT NULL  ENCODE az64	  ,sys_errno INTEGER NOT NULL  ENCODE az64	  ,error_string CHAR(32) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_io_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_io_iscsi_monitor;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_io_iscsi_monitor(	event_time BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(16) NOT NULL  ENCODE lzo	  ,event CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_io_iscsi_monitor owner to rdsdb;--DROP TABLE pg_catalog.stcs_io_perf;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_io_perf(	ip CHAR(15) NOT NULL  ENCODE lzo	  ,file_size BIGINT NOT NULL  ENCODE az64	  ,block_size BIGINT NOT NULL  ENCODE az64	  ,num_disks INTEGER NOT NULL  ENCODE az64	  ,bytes_per_microsec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_io_perf owner to rdsdb;--DROP TABLE pg_catalog.stcs_io_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_io_stat(	currenttime BIGINT NOT NULL  ENCODE az64	  ,sampletime BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,reads BIGINT NOT NULL  ENCODE az64	  ,writes BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_io_stat owner to rdsdb;--DROP TABLE pg_catalog.stcs_lambda_client;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_lambda_client(	query INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(100) NOT NULL  ENCODE lzo	  ,function_name CHAR(100) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,num_records INTEGER NOT NULL  ENCODE az64	  ,size INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_lambda_client owner to rdsdb;--DROP TABLE pg_catalog.stcs_lambda_invocation_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_lambda_invocation_error(	query INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,message CHAR(1024) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_lambda_invocation_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_lbc_events;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_lbc_events(	"timestamp" BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,is_error INTEGER NOT NULL  ENCODE az64	  ,context CHAR(32) NOT NULL  ENCODE lzo	  ,message CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_lbc_events owner to rdsdb;--DROP TABLE pg_catalog.stcs_leader_control;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_leader_control(	recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,msg CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_leader_control owner to rdsdb;--DROP TABLE pg_catalog.stcs_leader_snapshot;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_leader_snapshot(	currenttime BIGINT NOT NULL  ENCODE az64	  ,num_snapshot_blocks INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_leader_snapshot owner to rdsdb;--DROP TABLE pg_catalog.stcs_limit;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_limit(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,hit_limit CHAR(1) NOT NULL  ENCODE lzo	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_limit owner to rdsdb;--DROP TABLE pg_catalog.stcs_load_commits;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_load_commits(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,name CHAR(256) NOT NULL  ENCODE lzo	  ,filename CHAR(256) NOT NULL  ENCODE lzo	  ,byte_offset INTEGER NOT NULL  ENCODE az64	  ,lines_scanned INTEGER NOT NULL  ENCODE az64	  ,errors INTEGER NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,curtime BIGINT NOT NULL  ENCODE az64	  ,file_format CHAR(16) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_load_commits owner to rdsdb;--DROP TABLE pg_catalog.stcs_load_error_info;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_load_error_info(	userid INTEGER NOT NULL  ENCODE az64	  ,"session" INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,field INTEGER NOT NULL  ENCODE az64	  ,value CHAR(100) NOT NULL  ENCODE lzo	  ,is_null CHAR(1) NOT NULL  ENCODE lzo	  ,"type" CHAR(10) NOT NULL  ENCODE lzo	  ,tmod CHAR(10) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_load_error_info owner to rdsdb;--DROP TABLE pg_catalog.stcs_load_errors;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_load_errors(	userid INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,"session" INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,filename CHAR(256) NOT NULL  ENCODE lzo	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,colname CHAR(127) NOT NULL  ENCODE lzo	  ,"type" CHAR(10) NOT NULL  ENCODE lzo	  ,col_length CHAR(10) NOT NULL  ENCODE lzo	  ,"position" INTEGER NOT NULL  ENCODE az64	  ,raw_line CHAR(1024) NOT NULL  ENCODE lzo	  ,raw_field_value CHAR(1024) NOT NULL  ENCODE lzo	  ,err_code INTEGER NOT NULL  ENCODE az64	  ,err_reason CHAR(100) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_load_errors owner to rdsdb;--DROP TABLE pg_catalog.stcs_load_options;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_load_options(	query BIGINT NOT NULL  ENCODE az64	  ,row_count BIGINT NOT NULL  ENCODE az64	  ,source INTEGER NOT NULL  ENCODE az64	  ,"format" INTEGER NOT NULL  ENCODE az64	  ,authentication INTEGER NOT NULL  ENCODE az64	  ,compression_type INTEGER NOT NULL  ENCODE az64	  ,"encoding" INTEGER NOT NULL  ENCODE az64	  ,"compupdate" INTEGER NOT NULL  ENCODE az64	  ,"comprows" INTEGER NOT NULL  ENCODE az64	  ,max_error INTEGER NOT NULL  ENCODE az64	  ,err_count INTEGER NOT NULL  ENCODE az64	  ,read_ratio INTEGER NOT NULL  ENCODE az64	  ,ignore_header INTEGER NOT NULL  ENCODE az64	  ,cross_region CHAR(15) NOT NULL  ENCODE lzo	  ,opt_delimiter INTEGER NOT NULL  ENCODE az64	  ,opt_statupdate INTEGER NOT NULL  ENCODE az64	  ,opt_fixedwidth INTEGER NOT NULL  ENCODE az64	  ,opt_column_list INTEGER NOT NULL  ENCODE az64	  ,opt_temp_table INTEGER NOT NULL  ENCODE az64	  ,opt_manifest INTEGER NOT NULL  ENCODE az64	  ,opt_jsonpath INTEGER NOT NULL  ENCODE az64	  ,opt_csv INTEGER NOT NULL  ENCODE az64	  ,opt_ssh INTEGER NOT NULL  ENCODE az64	  ,opt_encrypted INTEGER NOT NULL  ENCODE az64	  ,opt_acceptanydate INTEGER NOT NULL  ENCODE az64	  ,opt_acceptinvchars INTEGER NOT NULL  ENCODE az64	  ,opt_blankasnull INTEGER NOT NULL  ENCODE az64	  ,opt_dateformat INTEGER NOT NULL  ENCODE az64	  ,opt_emptyasnull INTEGER NOT NULL  ENCODE az64	  ,opt_escape INTEGER NOT NULL  ENCODE az64	  ,opt_explicit_ids INTEGER NOT NULL  ENCODE az64	  ,opt_fillrecord INTEGER NOT NULL  ENCODE az64	  ,opt_ignoreblanklines INTEGER NOT NULL  ENCODE az64	  ,opt_null_as INTEGER NOT NULL  ENCODE az64	  ,opt_removequotes INTEGER NOT NULL  ENCODE az64	  ,opt_roundec INTEGER NOT NULL  ENCODE az64	  ,opt_timeformat INTEGER NOT NULL  ENCODE az64	  ,opt_trimblanks INTEGER NOT NULL  ENCODE az64	  ,opt_truncatecolumns INTEGER NOT NULL  ENCODE az64	  ,opt_noload INTEGER NOT NULL  ENCODE az64	  ,opt_simplify INTEGER NOT NULL  ENCODE az64	  ,opt_simplify_threshold DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_load_options owner to rdsdb;--DROP TABLE pg_catalog.stcs_load_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_load_trace(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,name CHAR(256) NOT NULL  ENCODE lzo	  ,bytes_scanned BIGINT NOT NULL  ENCODE az64	  ,message CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_load_trace owner to rdsdb;--DROP TABLE pg_catalog.stcs_loaderror_detail;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_loaderror_detail(	userid INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,"session" INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,filename CHAR(256) NOT NULL  ENCODE lzo	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,field INTEGER NOT NULL  ENCODE az64	  ,colname CHAR(1024) NOT NULL  ENCODE lzo	  ,value CHAR(1024) NOT NULL  ENCODE lzo	  ,is_null INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(10) NOT NULL  ENCODE lzo	  ,col_length CHAR(10) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_loaderror_detail owner to rdsdb;--DROP TABLE pg_catalog.stcs_lwlock;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_lwlock(	log_time BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,lwlockid INTEGER NOT NULL  ENCODE az64	  ,lwlock_name CHAR(50) NOT NULL  ENCODE lzo	  ,"mode" CHAR(25) NOT NULL  ENCODE lzo	  ,acquire_wait_us BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_lwlock owner to rdsdb;--DROP TABLE pg_catalog.stcs_mark_partitions;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_mark_partitions(	recordtime BIGINT NOT NULL  ENCODE az64	  ,"action" CHAR(7) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_mark_partitions owner to rdsdb;--DROP TABLE pg_catalog.stcs_mem_alloc_history;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_mem_alloc_history(	process CHAR(32) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,alloc INTEGER NOT NULL  ENCODE az64	  ,address BIGINT NOT NULL  ENCODE az64	  ,size INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_mem_alloc_history owner to rdsdb;--DROP TABLE pg_catalog.stcs_mem_block_details;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_mem_block_details(	recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(15) NOT NULL  ENCODE lzo	  ,uid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,process CHAR(30) NOT NULL  ENCODE lzo	  ,qid INTEGER NOT NULL  ENCODE az64	  ,requested BIGINT NOT NULL  ENCODE az64	  ,roundedsize BIGINT NOT NULL  ENCODE az64	  ,page BIGINT NOT NULL  ENCODE az64	  ,buddy_page BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_mem_block_details owner to rdsdb;--DROP TABLE pg_catalog.stcs_mem_freelist;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_mem_freelist(	recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,uid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,requested BIGINT NOT NULL  ENCODE az64	  ,roundedsize BIGINT NOT NULL  ENCODE az64	  ,page BIGINT NOT NULL  ENCODE az64	  ,leaked INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_mem_freelist owner to rdsdb;--DROP TABLE pg_catalog.stcs_mem_leaks;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_mem_leaks(	recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,uid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,requested BIGINT NOT NULL  ENCODE az64	  ,allocated BIGINT NOT NULL  ENCODE az64	  ,page BIGINT NOT NULL  ENCODE az64	  ,leaked INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_mem_leaks owner to rdsdb;--DROP TABLE pg_catalog.stcs_memefficiency;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_memefficiency(	recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,memrequested BIGINT NOT NULL  ENCODE az64	  ,memtotal BIGINT NOT NULL  ENCODE az64	  ,overhead BIGINT NOT NULL  ENCODE az64	  ,wastage DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,counter BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_memefficiency owner to rdsdb;--DROP TABLE pg_catalog.stcs_memhisto;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_memhisto(	recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,two INTEGER NOT NULL  ENCODE az64	  ,four INTEGER NOT NULL  ENCODE az64	  ,eight INTEGER NOT NULL  ENCODE az64	  ,sixteen INTEGER NOT NULL  ENCODE az64	  ,thirtytwo INTEGER NOT NULL  ENCODE az64	  ,sixtyfour INTEGER NOT NULL  ENCODE az64	  ,onetwentyeight INTEGER NOT NULL  ENCODE az64	  ,twofiftysix INTEGER NOT NULL  ENCODE az64	  ,fivetwelve INTEGER NOT NULL  ENCODE az64	  ,onekb INTEGER NOT NULL  ENCODE az64	  ,twokb INTEGER NOT NULL  ENCODE az64	  ,fourkb INTEGER NOT NULL  ENCODE az64	  ,eightkb INTEGER NOT NULL  ENCODE az64	  ,sixteenkb INTEGER NOT NULL  ENCODE az64	  ,thirtytwokb INTEGER NOT NULL  ENCODE az64	  ,sixtyfourkb INTEGER NOT NULL  ENCODE az64	  ,onetwentyeightkb INTEGER NOT NULL  ENCODE az64	  ,twofiftysixkb INTEGER NOT NULL  ENCODE az64	  ,fivetwelvekb INTEGER NOT NULL  ENCODE az64	  ,onemb INTEGER NOT NULL  ENCODE az64	  ,twomb INTEGER NOT NULL  ENCODE az64	  ,fourmb INTEGER NOT NULL  ENCODE az64	  ,eightmb INTEGER NOT NULL  ENCODE az64	  ,sixteenmb INTEGER NOT NULL  ENCODE az64	  ,thirtytwomb INTEGER NOT NULL  ENCODE az64	  ,sixtyfourmb INTEGER NOT NULL  ENCODE az64	  ,onetwentyeightmb INTEGER NOT NULL  ENCODE az64	  ,twofiftysixmb INTEGER NOT NULL  ENCODE az64	  ,fivetwelvemb INTEGER NOT NULL  ENCODE az64	  ,onegb INTEGER NOT NULL  ENCODE az64	  ,twogb INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_memhisto owner to rdsdb;--DROP TABLE pg_catalog.stcs_memory_pressure_actions;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_memory_pressure_actions(	now BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,memory_type CHAR(64) NOT NULL  ENCODE lzo	  ,action_type CHAR(64) NOT NULL  ENCODE lzo	  ,state INTEGER NOT NULL  ENCODE az64	  ,"process_type" CHAR(64) NOT NULL  ENCODE lzo	  ,query INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,shared_mem_used BIGINT NOT NULL  ENCODE az64	  ,heap_mem_used BIGINT NOT NULL  ENCODE az64	  ,pinned_blocks_mem_used BIGINT NOT NULL  ENCODE az64	  ,src_pid INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_memory_pressure_actions owner to rdsdb;--DROP TABLE pg_catalog.stcs_memory_pressure_state;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_memory_pressure_state(	now BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,memory_type CHAR(64) NOT NULL  ENCODE lzo	  ,state INTEGER NOT NULL  ENCODE az64	  ,last_state INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_memory_pressure_state owner to rdsdb;--DROP TABLE pg_catalog.stcs_memory_pressure_suspects;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_memory_pressure_suspects(	now BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,state INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,shared_mem_used BIGINT NOT NULL  ENCODE az64	  ,heap_mem_used BIGINT NOT NULL  ENCODE az64	  ,num_blocks_pinned BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_memory_pressure_suspects owner to rdsdb;--DROP TABLE pg_catalog.stcs_merge;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_merge(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_merge owner to rdsdb;--DROP TABLE pg_catalog.stcs_mergejoin;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_mergejoin(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,distribution INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_mergejoin owner to rdsdb;--DROP TABLE pg_catalog.stcs_metadata_step;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_metadata_step(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_metadata_step owner to rdsdb;--DROP TABLE pg_catalog.stcs_minmax_errors;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_minmax_errors(	logtime BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64	  ,error_msg CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_minmax_errors owner to rdsdb;--DROP TABLE pg_catalog.stcs_misc_sys_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_misc_sys_stat(	currenttime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,bs_queue_cap BIGINT NOT NULL  ENCODE az64	  ,free_bs_workers BIGINT NOT NULL  ENCODE az64	  ,reg_queue_cap BIGINT NOT NULL  ENCODE az64	  ,free_reg_workers BIGINT NOT NULL  ENCODE az64	  ,free_shared_mem_mb BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_misc_sys_stat owner to rdsdb;--DROP TABLE pg_catalog.stcs_ml_create_model_log;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_ml_create_model_log(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,create_time BIGINT NOT NULL  ENCODE az64	  ,schema_id INTEGER NOT NULL  ENCODE az64	  ,model_name CHAR(128) NOT NULL  ENCODE lzo	  ,model_id INTEGER NOT NULL  ENCODE az64	  ,"statement" CHAR(4000) NOT NULL  ENCODE lzo	  ,algo_meta CHAR(4000) NOT NULL  ENCODE lzo	  ,exec_meta CHAR(4000) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_ml_create_model_log owner to rdsdb;--DROP TABLE pg_catalog.stcs_ml_log;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_ml_log(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,model_name CHAR(128) NOT NULL  ENCODE lzo	  ,model_id INTEGER NOT NULL  ENCODE az64	  ,operation CHAR(15) NOT NULL  ENCODE lzo	  ,message CHAR(1024) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_ml_log owner to rdsdb;--DROP TABLE pg_catalog.stcs_ml_manager_log;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_ml_manager_log(	pid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,message CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_ml_manager_log owner to rdsdb;--DROP TABLE pg_catalog.stcs_ml_model_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_ml_model_stats(	recordtime BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,model_name CHAR(128) NOT NULL  ENCODE lzo	  ,inference_type CHAR(30) NOT NULL  ENCODE lzo	  ,is_auto INTEGER NOT NULL  ENCODE az64	  ,"model_type" CHAR(20) NOT NULL  ENCODE lzo	  ,is_kms INTEGER NOT NULL  ENCODE az64	  ,is_s3_gc INTEGER NOT NULL  ENCODE az64	  ,param_count INTEGER NOT NULL  ENCODE az64	  ,is_vpc INTEGER NOT NULL  ENCODE az64	  ,full_stmt CHAR(4000) NOT NULL  ENCODE lzo	  ,algo_meta CHAR(4000) NOT NULL  ENCODE lzo	  ,exec_meta CHAR(4000) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_ml_model_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_ml_neo_memory_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_ml_neo_memory_usage(	record_time BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,model_name CHAR(64) NOT NULL  ENCODE lzo	  ,model_path CHAR(1024) NOT NULL  ENCODE lzo	  ,"model_type" INTEGER NOT NULL  ENCODE az64	  ,num_inputs INTEGER NOT NULL  ENCODE az64	  ,num_outputs INTEGER NOT NULL  ENCODE az64	  ,file_size INTEGER NOT NULL  ENCODE az64	  ,mem_used INTEGER NOT NULL  ENCODE az64	  ,dlr_version CHAR(64) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_ml_neo_memory_usage owner to rdsdb;--DROP TABLE pg_catalog.stcs_ml_sagemaker_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_ml_sagemaker_error(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,request_type CHAR(64) NOT NULL  ENCODE lzo	  ,job_arn CHAR(64) NOT NULL  ENCODE lzo	  ,exception_name CHAR(128) NOT NULL  ENCODE lzo	  ,message CHAR(4000) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_ml_sagemaker_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_ml_sagemaker_request;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_ml_sagemaker_request(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,request_type CHAR(64) NOT NULL  ENCODE lzo	  ,request_payload CHAR(4000) NOT NULL  ENCODE lzo	  ,success INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_ml_sagemaker_request owner to rdsdb;--DROP TABLE pg_catalog.stcs_mmf_details;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_mmf_details(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,"action" INTEGER NOT NULL  ENCODE az64	  ,source_slice INTEGER NOT NULL  ENCODE az64	  ,col_index INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_mmf_details owner to rdsdb;--DROP TABLE pg_catalog.stcs_monitoring_logs_internal;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_monitoring_logs_internal(	recordtime BIGINT NOT NULL  ENCODE az64	  ,thread CHAR(25) NOT NULL  ENCODE lzo	  ,tid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(30) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,message CHAR(500) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_monitoring_logs_internal owner to rdsdb;--DROP TABLE pg_catalog.stcs_multi_statement_violations;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_multi_statement_violations(	userid INTEGER NOT NULL  ENCODE az64	  ,"database" CHAR(32) NOT NULL  ENCODE lzo	  ,cmdname CHAR(20) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,padb_version CHAR(50) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_multi_statement_violations owner to rdsdb;--DROP TABLE pg_catalog.stcs_mutex_contention;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_mutex_contention(	process CHAR(32) NOT NULL  ENCODE lzo	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,attempts INTEGER NOT NULL  ENCODE az64	  ,waitpid INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_mutex_contention owner to rdsdb;--DROP TABLE pg_catalog.stcs_mv_aqmv;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_mv_aqmv(	query BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,candidates INTEGER NOT NULL  ENCODE az64	  ,matches INTEGER NOT NULL  ENCODE az64	  ,aqmv_cost DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,original_cost DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,costing_time INTEGER NOT NULL  ENCODE az64	  ,aqmv_status INTEGER NOT NULL  ENCODE az64	  ,original_exec_time_est INTEGER NOT NULL  ENCODE az64	  ,original_exec_time_est_error INTEGER NOT NULL  ENCODE az64	  ,aqmv_exec_time_est INTEGER NOT NULL  ENCODE az64	  ,aqmv_exec_time_est_error INTEGER NOT NULL  ENCODE az64	  ,candidates_fetching_time INTEGER NOT NULL  ENCODE az64	  ,algebra_translation_time INTEGER NOT NULL  ENCODE az64	  ,total_cpu_time INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_mv_aqmv owner to rdsdb;--DROP TABLE pg_catalog.stcs_mv_refresh;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_mv_refresh(	userid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,schemaoid BIGINT NOT NULL  ENCODE az64	  ,mvoid BIGINT NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,refresh_type CHAR(32) NOT NULL  ENCODE lzo	  ,db_oid BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_mv_refresh owner to rdsdb;--DROP TABLE pg_catalog.stcs_mv_state;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_mv_state(	userid BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,event_desc CHAR(500) NOT NULL  ENCODE lzo	  ,db_name CHAR(128) NOT NULL  ENCODE lzo	  ,base_table_schema CHAR(128) NOT NULL  ENCODE lzo	  ,base_table_name CHAR(128) NOT NULL  ENCODE lzo	  ,mv_schema CHAR(128) NOT NULL  ENCODE lzo	  ,mv_name CHAR(128) NOT NULL  ENCODE lzo	  ,state CHAR(32) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_mv_state owner to rdsdb;--DROP TABLE pg_catalog.stcs_nestloop;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_nestloop(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,distribution INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_nestloop owner to rdsdb;--DROP TABLE pg_catalog.stcs_net_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_net_stat(	currenttime BIGINT NOT NULL  ENCODE az64	  ,sampletime BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,iface CHAR(20) NOT NULL  ENCODE lzo	  ,rxbytes BIGINT NOT NULL  ENCODE az64	  ,rxpackets BIGINT NOT NULL  ENCODE az64	  ,rxerrors BIGINT NOT NULL  ENCODE az64	  ,rxdrops BIGINT NOT NULL  ENCODE az64	  ,rxfifo BIGINT NOT NULL  ENCODE az64	  ,rxframe BIGINT NOT NULL  ENCODE az64	  ,rxcompressed BIGINT NOT NULL  ENCODE az64	  ,rxmulticast BIGINT NOT NULL  ENCODE az64	  ,txbytes BIGINT NOT NULL  ENCODE az64	  ,txpackets BIGINT NOT NULL  ENCODE az64	  ,txerrors BIGINT NOT NULL  ENCODE az64	  ,txdrops BIGINT NOT NULL  ENCODE az64	  ,txfifo BIGINT NOT NULL  ENCODE az64	  ,txcollisions BIGINT NOT NULL  ENCODE az64	  ,txcarrier BIGINT NOT NULL  ENCODE az64	  ,txcompressed BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_net_stat owner to rdsdb;--DROP TABLE pg_catalog.stcs_netmon_ip;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_netmon_ip(	tn INTEGER NOT NULL  ENCODE az64	  ,sn INTEGER NOT NULL  ENCODE az64	  ,"ts" BIGINT NOT NULL  ENCODE az64	  ,ip CHAR(15) NOT NULL  ENCODE lzo	  ,din INTEGER NOT NULL  ENCODE az64	  ,ihe INTEGER NOT NULL  ENCODE az64	  ,iar INTEGER NOT NULL  ENCODE az64	  ,unk INTEGER NOT NULL  ENCODE az64	  ,idsc INTEGER NOT NULL  ENCODE az64	  ,idlv INTEGER NOT NULL  ENCODE az64	  ,outr INTEGER NOT NULL  ENCODE az64	  ,odsc INTEGER NOT NULL  ENCODE az64	  ,onor INTEGER NOT NULL  ENCODE az64	  ,rf INTEGER NOT NULL  ENCODE az64	  ,ff INTEGER NOT NULL  ENCODE az64	  ,smpl_t INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_netmon_ip owner to rdsdb;--DROP TABLE pg_catalog.stcs_netmon_mac;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_netmon_mac(	tn INTEGER NOT NULL  ENCODE az64	  ,sn INTEGER NOT NULL  ENCODE az64	  ,"ts" BIGINT NOT NULL  ENCODE az64	  ,inter CHAR(15) NOT NULL  ENCODE lzo	  ,ip CHAR(15) NOT NULL  ENCODE lzo	  ,pin INTEGER NOT NULL  ENCODE az64	  ,bin INTEGER NOT NULL  ENCODE az64	  ,bout INTEGER NOT NULL  ENCODE az64	  ,pout INTEGER NOT NULL  ENCODE az64	  ,unk INTEGER NOT NULL  ENCODE az64	  ,norcvbuf INTEGER NOT NULL  ENCODE az64	  ,noxmtbuf INTEGER NOT NULL  ENCODE az64	  ,out_errs INTEGER NOT NULL  ENCODE az64	  ,in_errs INTEGER NOT NULL  ENCODE az64	  ,out_drops INTEGER NOT NULL  ENCODE az64	  ,in_drops INTEGER NOT NULL  ENCODE az64	  ,out_colls INTEGER NOT NULL  ENCODE az64	  ,rbytes_rate INTEGER NOT NULL  ENCODE az64	  ,obytes_rate INTEGER NOT NULL  ENCODE az64	  ,smpl_t INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_netmon_mac owner to rdsdb;--DROP TABLE pg_catalog.stcs_network_throttle;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_network_throttle(	log_time BIGINT NOT NULL  ENCODE az64	  ,client_id CHAR(64) NOT NULL  ENCODE lzo	  ,registered INTEGER NOT NULL  ENCODE az64	  ,throttle_step INTEGER NOT NULL  ENCODE az64	  ,max_concurrent_sessions INTEGER NOT NULL  ENCODE az64	  ,num_high_throttle_set INTEGER NOT NULL  ENCODE az64	  ,num_low_throttle_set INTEGER NOT NULL  ENCODE az64	  ,num_low_unthrottle_set INTEGER NOT NULL  ENCODE az64	  ,num_zero_unthrottle_set INTEGER NOT NULL  ENCODE az64	  ,avg_token_wait_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,min_token_wait_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,max_token_wait_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,times_thread_wait_for_token BIGINT NOT NULL  ENCODE az64	  ,avg_token_hold_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,min_token_hold_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,max_token_hold_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,times_thread_held_token BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_network_throttle owner to rdsdb;--DROP TABLE pg_catalog.stcs_node_failovers;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_node_failovers(	recordtime BIGINT NOT NULL  ENCODE az64	  ,failed_node CHAR(16) NOT NULL  ENCODE lzo	  ,standby_node CHAR(16) NOT NULL  ENCODE lzo	  ,stopped_veritas INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_node_failovers owner to rdsdb;--DROP TABLE pg_catalog.stcs_nullyze;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_nullyze(	measuretime BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,nullcount BIGINT NOT NULL  ENCODE az64	  ,tbl_name CHAR(30) NOT NULL  ENCODE lzo	  ,col_name CHAR(30) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_nullyze owner to rdsdb;--DROP TABLE pg_catalog.stcs_omnisql_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_omnisql_error(	userid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,errcode INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(90) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,context CHAR(100) NOT NULL  ENCODE lzo	  ,error CHAR(512) NOT NULL  ENCODE lzo	  ,module INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_omnisql_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_omnisql_rewrite_rules;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_omnisql_rewrite_rules(	query BIGINT NOT NULL  ENCODE az64	  ,"rule" CHAR(50) NOT NULL  ENCODE lzo	  ,count INTEGER NOT NULL  ENCODE az64	  ,"time" BIGINT NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,module INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_omnisql_rewrite_rules owner to rdsdb;--DROP TABLE pg_catalog.stcs_omnisql_rewrite_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_omnisql_rewrite_stats(	query BIGINT NOT NULL  ENCODE az64	  ,"time" BIGINT NOT NULL  ENCODE az64	  ,rules INTEGER NOT NULL  ENCODE az64	  ,"result" INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,translation BIGINT NOT NULL  ENCODE az64	  ,printing BIGINT NOT NULL  ENCODE az64	  ,reparsing BIGINT NOT NULL  ENCODE az64	  ,initial_sexp INTEGER NOT NULL  ENCODE az64	  ,rewritten_sexp INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,trivial_rules INTEGER NOT NULL  ENCODE az64	  ,failed_rules INTEGER NOT NULL  ENCODE az64	  ,module INTEGER NOT NULL  ENCODE az64	  ,peak_mem_kb BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_omnisql_rewrite_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_parse;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_parse(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_parse owner to rdsdb;--DROP TABLE pg_catalog.stcs_perf_histograms;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_perf_histograms(	now BIGINT NOT NULL  ENCODE az64	  ,since BIGINT NOT NULL  ENCODE az64	  ,name CHAR(64) NOT NULL  ENCODE lzo	  ,mean DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,stdev DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,ten_us INTEGER NOT NULL  ENCODE az64	  ,hundred_us INTEGER NOT NULL  ENCODE az64	  ,one_ms INTEGER NOT NULL  ENCODE az64	  ,ten_ms INTEGER NOT NULL  ENCODE az64	  ,hundred_ms INTEGER NOT NULL  ENCODE az64	  ,one_s INTEGER NOT NULL  ENCODE az64	  ,ten_s INTEGER NOT NULL  ENCODE az64	  ,inf INTEGER NOT NULL  ENCODE az64	  ,min DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,"max" DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,total INTEGER NOT NULL  ENCODE az64	  ,sum DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,node INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_perf_histograms owner to rdsdb;--DROP TABLE pg_catalog.stcs_pinned_blocks;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_pinned_blocks(	error_time BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_pinned_blocks owner to rdsdb;--DROP TABLE pg_catalog.stcs_plan_explain;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_plan_explain(	query BIGINT NOT NULL  ENCODE az64	  ,nid INTEGER NOT NULL  ENCODE az64	  ,"level" INTEGER NOT NULL  ENCODE az64	  ,blockid INTEGER NOT NULL  ENCODE az64	  ,block_nid INTEGER NOT NULL  ENCODE az64	  ,opname CHAR(25) NOT NULL  ENCODE lzo	  ,estimate_rows DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,estimate_width INTEGER NOT NULL  ENCODE az64	  ,total_cost DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,startup_cost DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_plan_explain owner to rdsdb;--DROP TABLE pg_catalog.stcs_plan_explain_props;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_plan_explain_props(	query BIGINT NOT NULL  ENCODE az64	  ,nodeid INTEGER NOT NULL  ENCODE az64	  ,propid INTEGER NOT NULL  ENCODE az64	  ,lineno INTEGER NOT NULL  ENCODE az64	  ,detail CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_plan_explain_props owner to rdsdb;--DROP TABLE pg_catalog.stcs_plan_explain_tree;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_plan_explain_tree(	query BIGINT NOT NULL  ENCODE az64	  ,nodeid INTEGER NOT NULL  ENCODE az64	  ,parentid INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_plan_explain_tree owner to rdsdb;--DROP TABLE pg_catalog.stcs_plan_info;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_plan_info(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,nodeid INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,locus INTEGER NOT NULL  ENCODE az64	  ,plannode INTEGER NOT NULL  ENCODE az64	  ,startupcost DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,totalcost DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_plan_info owner to rdsdb;--DROP TABLE pg_catalog.stcs_plan_perf;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_plan_perf(	query BIGINT NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,component CHAR(50) NOT NULL  ENCODE lzo	  ,count INTEGER NOT NULL  ENCODE az64	  ,udc INTEGER NOT NULL  ENCODE az64	  ,total_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,max_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,min_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,avg_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_plan_perf owner to rdsdb;--DROP TABLE pg_catalog.stcs_plan_qid_map;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_plan_qid_map(	query INTEGER NOT NULL  ENCODE az64	  ,plan_qid BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_plan_qid_map owner to rdsdb;--DROP TABLE pg_catalog.stcs_plan_querytext;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_plan_querytext(	query BIGINT NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,text CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_plan_querytext owner to rdsdb;--DROP TABLE pg_catalog.stcs_plan_rule_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_plan_rule_stats(	query BIGINT NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,optimizer CHAR(15) NOT NULL  ENCODE lzo	  ,"rule" CHAR(15) NOT NULL  ENCODE lzo	  ,match_count INTEGER NOT NULL  ENCODE az64	  ,applicable_count INTEGER NOT NULL  ENCODE az64	  ,apply_count INTEGER NOT NULL  ENCODE az64	  ,trasnformed_count INTEGER NOT NULL  ENCODE az64	  ,applicable_total_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,applicable_max_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,applicable_min_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,applicable_avg_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,apply_total_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,apply_max_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,apply_min_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,apply_avg_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_plan_rule_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_plan_state;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_plan_state(	query BIGINT NOT NULL  ENCODE az64	  ,component CHAR(32) NOT NULL  ENCODE lzo	  ,state CHAR(15) NOT NULL  ENCODE lzo	  ,detail CHAR(100) NOT NULL  ENCODE lzo	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_plan_state owner to rdsdb;--DROP TABLE pg_catalog.stcs_prefetch_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_prefetch_stats(	eventtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,tableid BIGINT NOT NULL  ENCODE az64	  ,columnid BIGINT NOT NULL  ENCODE az64	  ,numprefetches BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_prefetch_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_print;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_print(	process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,message CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_print owner to rdsdb;--DROP TABLE pg_catalog.stcs_proc_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_proc_stat(	pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,utime BIGINT NOT NULL  ENCODE az64	  ,stime BIGINT NOT NULL  ENCODE az64	  ,processor INTEGER NOT NULL  ENCODE az64	  ,minflt BIGINT NOT NULL  ENCODE az64	  ,maxmemory BIGINT NOT NULL  ENCODE az64	  ,daemonmemory BIGINT NOT NULL  ENCODE az64	  ,block_reads INTEGER NOT NULL  ENCODE az64	  ,block_faults INTEGER NOT NULL  ENCODE az64	  ,total_block_fetchtime BIGINT NOT NULL  ENCODE az64	  ,max_block_fetchtime BIGINT NOT NULL  ENCODE az64	  ,transblock_reads INTEGER NOT NULL  ENCODE az64	  ,transblock_faults INTEGER NOT NULL  ENCODE az64	  ,total_transblock_fetchtime BIGINT NOT NULL  ENCODE az64	  ,max_transblock_fetchtime BIGINT NOT NULL  ENCODE az64	  ,blocks_used BIGINT NOT NULL  ENCODE az64	  ,comm_us BIGINT NOT NULL  ENCODE az64	  ,lock_us BIGINT NOT NULL  ENCODE az64	  ,ipc_us BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_proc_stat owner to rdsdb;--DROP TABLE pg_catalog.stcs_process_state;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_process_state(	pid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"process_type" INTEGER NOT NULL  ENCODE az64	  ,process_type_str CHAR(64) NOT NULL  ENCODE lzo	  ,record_time BIGINT NOT NULL  ENCODE az64	  ,mem_current_virtual_kb BIGINT NOT NULL  ENCODE az64	  ,mem_peak_virtual_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_kb BIGINT NOT NULL  ENCODE az64	  ,mem_peak_rss_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_anon_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_file_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_shared_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_swap_kb BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_process_state owner to rdsdb;--DROP TABLE pg_catalog.stcs_project;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_project(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_project owner to rdsdb;--DROP TABLE pg_catalog.stcs_query;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"database" CHAR(32) NOT NULL  ENCODE lzo	  ,querytxt CHAR(4000) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64	  ,insert_pristine INTEGER NOT NULL  ENCODE az64	  ,concurrency_scaling_status INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_block_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_block_stats(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,block_reads INTEGER NOT NULL  ENCODE az64	  ,block_faults INTEGER NOT NULL  ENCODE az64	  ,total_block_fetchtime BIGINT NOT NULL  ENCODE az64	  ,max_block_fetchtime BIGINT NOT NULL  ENCODE az64	  ,transblock_reads INTEGER NOT NULL  ENCODE az64	  ,transblock_faults INTEGER NOT NULL  ENCODE az64	  ,total_transblock_fetchtime BIGINT NOT NULL  ENCODE az64	  ,max_transblock_fetchtime BIGINT NOT NULL  ENCODE az64	  ,blocks_used BIGINT NOT NULL  ENCODE az64	  ,block_reads_already_in_s3 INTEGER NOT NULL  ENCODE az64	  ,disk_fetches BIGINT NOT NULL  ENCODE az64	  ,disk_prefetches BIGINT NOT NULL  ENCODE az64	  ,s3_fetches BIGINT NOT NULL  ENCODE az64	  ,s3_prefetches BIGINT NOT NULL  ENCODE az64	  ,trans_block_fetches BIGINT NOT NULL  ENCODE az64	  ,trans_block_prefetches BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_block_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_concurrency_scaling_decision;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_concurrency_scaling_decision(	query INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,xact_version BIGINT NOT NULL  ENCODE az64	  ,suitable_sb_version BIGINT NOT NULL  ENCODE az64	  ,decision_msg CHAR(64) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_concurrency_scaling_decision owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_execution_time_prediction;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_execution_time_prediction(	query INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,predicted_exec_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,predicted_exec_time_error_boundary DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_execution_time_prediction owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_heap_memory_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_heap_memory_usage(	recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,checkpoint INTEGER NOT NULL  ENCODE az64	  ,heap_mem_usage BIGINT NOT NULL  ENCODE az64	  ,heap_max_mem_usage BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_heap_memory_usage owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_internal;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_internal(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"database" CHAR(32) NOT NULL  ENCODE lzo	  ,querytxt CHAR(4000) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_internal owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_mem_leaks;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_mem_leaks(	qid INTEGER NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,pname CHAR(15) NOT NULL  ENCODE lzo	  ,size BIGINT NOT NULL  ENCODE az64	  ,rounded BIGINT NOT NULL  ENCODE az64	  ,allocated BIGINT NOT NULL  ENCODE az64	  ,hexa CHAR(65) NOT NULL  ENCODE lzo	  ,ascii CHAR(32) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_mem_leaks owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_mem_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_mem_stats(	node INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,max_mem_count BIGINT NOT NULL  ENCODE az64	  ,max_mem_size BIGINT NOT NULL  ENCODE az64	  ,num_pin_count BIGINT NOT NULL  ENCODE az64	  ,num_unpin_count BIGINT NOT NULL  ENCODE az64	  ,max_pinned_count BIGINT NOT NULL  ENCODE az64	  ,now BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_mem_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_mem_stats_by_type;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_mem_stats_by_type(	node INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(25) NOT NULL  ENCODE lzo	  ,allocated_count BIGINT NOT NULL  ENCODE az64	  ,freed_count BIGINT NOT NULL  ENCODE az64	  ,max_mem_count BIGINT NOT NULL  ENCODE az64	  ,allocated_size BIGINT NOT NULL  ENCODE az64	  ,freed_size BIGINT NOT NULL  ENCODE az64	  ,max_mem_size BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_mem_stats_by_type owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_memory_cheating;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_memory_cheating(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,memory_used_mb INTEGER NOT NULL  ENCODE az64	  ,workmem_mb INTEGER NOT NULL  ENCODE az64	  ,sim CHAR(10) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_memory_cheating owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_metrics(	userid INTEGER NOT NULL  ENCODE az64	  ,service_class INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step_type INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,slices INTEGER NOT NULL  ENCODE az64	  ,max_rows BIGINT NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,max_cpu_time BIGINT NOT NULL  ENCODE az64	  ,cpu_time BIGINT NOT NULL  ENCODE az64	  ,max_blocks_read INTEGER NOT NULL  ENCODE az64	  ,blocks_read BIGINT NOT NULL  ENCODE az64	  ,max_run_time BIGINT NOT NULL  ENCODE az64	  ,run_time BIGINT NOT NULL  ENCODE az64	  ,max_blocks_to_disk BIGINT NOT NULL  ENCODE az64	  ,blocks_to_disk BIGINT NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,max_query_scan_size BIGINT NOT NULL  ENCODE az64	  ,query_scan_size BIGINT NOT NULL  ENCODE az64	  ,query_priority INTEGER NOT NULL  ENCODE az64	  ,query_queue_time BIGINT NOT NULL  ENCODE az64	  ,service_class_name CHAR(64) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_metrics owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_prediction;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_prediction(	query INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,execution_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,execution_time_error DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,memory DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,memory_error DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,execution_time_without_compile DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,execution_time_without_compile_error DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_prediction owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_step_times;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_step_times(	xid BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,step_name CHAR(32) NOT NULL  ENCODE lzo	  ,step_type CHAR(32) NOT NULL  ENCODE lzo	  ,step_specific CHAR(32) NOT NULL  ENCODE lzo	  ,step_shared CHAR(32) NOT NULL  ENCODE lzo	  ,step_common CHAR(32) NOT NULL  ENCODE lzo	  ,duration BIGINT NOT NULL  ENCODE az64	  ,on_cpu BIGINT NOT NULL  ENCODE az64	  ,off_cpu BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_step_times owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_transmit_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_transmit_metrics(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,send_starttime BIGINT NOT NULL  ENCODE az64	  ,send_endtime BIGINT NOT NULL  ENCODE az64	  ,send_time_spent_usec BIGINT NOT NULL  ENCODE az64	  ,send_bytes BIGINT NOT NULL  ENCODE az64	  ,send_rows BIGINT NOT NULL  ENCODE az64	  ,recv_starttime BIGINT NOT NULL  ENCODE az64	  ,recv_endtime BIGINT NOT NULL  ENCODE az64	  ,recv_time_spent_usec BIGINT NOT NULL  ENCODE az64	  ,recv_bytes BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_transmit_metrics owner to rdsdb;--DROP TABLE pg_catalog.stcs_query_tx_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_query_tx_metrics(	query INTEGER NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,time_spent_sending_micros BIGINT NOT NULL  ENCODE az64	  ,num_bytes_sent BIGINT NOT NULL  ENCODE az64	  ,num_rows_sent BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_query_tx_metrics owner to rdsdb;--DROP TABLE pg_catalog.stcs_querytext;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_querytext(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,text CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_querytext owner to rdsdb;--DROP TABLE pg_catalog.stcs_querytext_internal;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_querytext_internal(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,text CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_querytext_internal owner to rdsdb;--DROP TABLE pg_catalog.stcs_range_insert;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_range_insert(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_range_insert owner to rdsdb;--DROP TABLE pg_catalog.stcs_redcat_journal_gc_info;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_redcat_journal_gc_info(	delete_xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"database" INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(64) NOT NULL  ENCODE lzo	  ,pivot_xid BIGINT NOT NULL  ENCODE az64	  ,pivot_timestamp BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,duration_msec BIGINT NOT NULL  ENCODE az64	  ,num_tuples_deleted BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_redcat_journal_gc_info owner to rdsdb;--DROP TABLE pg_catalog.stcs_redshift_proxy_log;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_redshift_proxy_log(	"time" BIGINT NOT NULL  ENCODE az64	  ,client_endpoint CHAR(64) NOT NULL  ENCODE lzo	  ,event CHAR(255) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_redshift_proxy_log owner to rdsdb;--DROP TABLE pg_catalog.stcs_rehydration_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_rehydration_metrics(	start_time BIGINT NOT NULL  ENCODE az64	  ,end_time BIGINT NOT NULL  ENCODE az64	  ,rehydrated_blocks BIGINT NOT NULL  ENCODE az64	  ,primary_reads BIGINT NOT NULL  ENCODE az64	  ,primary_read_latency INTEGER NOT NULL  ENCODE az64	  ,mirror_reads BIGINT NOT NULL  ENCODE az64	  ,mirror_read_latency INTEGER NOT NULL  ENCODE az64	  ,s3_reads BIGINT NOT NULL  ENCODE az64	  ,s3_read_latency INTEGER NOT NULL  ENCODE az64	  ,primary_writes BIGINT NOT NULL  ENCODE az64	  ,primary_write_latency INTEGER NOT NULL  ENCODE az64	  ,mirror_writes BIGINT NOT NULL  ENCODE az64	  ,mirror_write_latency INTEGER NOT NULL  ENCODE az64	  ,in_progress INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,avg_rerep_reqs INTEGER NOT NULL  ENCODE az64	  ,s3_writes BIGINT NOT NULL  ENCODE az64	  ,s3_write_latency INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_rehydration_metrics owner to rdsdb;--DROP TABLE pg_catalog.stcs_remote_access_blocklist;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_remote_access_blocklist(	logtime BIGINT NOT NULL  ENCODE az64	  ,local_table_id INTEGER NOT NULL  ENCODE az64	  ,remote_table_id INTEGER NOT NULL  ENCODE az64	  ,col_num INTEGER NOT NULL  ENCODE az64	  ,slice_num INTEGER NOT NULL  ENCODE az64	  ,local_block_id CHAR(64) NOT NULL  ENCODE lzo	  ,remote_block_id CHAR(64) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_remote_access_blocklist owner to rdsdb;--DROP TABLE pg_catalog.stcs_replacements;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_replacements(	userid INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,"session" INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,filename CHAR(256) NOT NULL  ENCODE lzo	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,colname CHAR(127) NOT NULL  ENCODE lzo	  ,raw_line CHAR(1024) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_replacements owner to rdsdb;--DROP TABLE pg_catalog.stcs_rereplication;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_rereplication(	recordtime BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,id CHAR(64) NOT NULL  ENCODE lzo	  ,flags INTEGER NOT NULL  ENCODE az64	  ,new_node INTEGER NOT NULL  ENCODE az64	  ,new_diskno INTEGER NOT NULL  ENCODE az64	  ,new_address BIGINT NOT NULL  ENCODE az64	  ,context CHAR(24) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_rereplication owner to rdsdb;--DROP TABLE pg_catalog.stcs_res_leaks;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_res_leaks(	node INTEGER NOT NULL  ENCODE az64	  ,mark INTEGER NOT NULL  ENCODE az64	  ,restype CHAR(30) NOT NULL  ENCODE lzo	  ,leakinfo CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_res_leaks owner to rdsdb;--DROP TABLE pg_catalog.stcs_restarted_sessions;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_restarted_sessions(	currenttime BIGINT NOT NULL  ENCODE az64	  ,dbname CHAR(50) NOT NULL  ENCODE lzo	  ,newpid INTEGER NOT NULL  ENCODE az64	  ,oldpid INTEGER NOT NULL  ENCODE az64	  ,username CHAR(50) NOT NULL  ENCODE lzo	  ,remotehost CHAR(32) NOT NULL  ENCODE lzo	  ,remoteport CHAR(32) NOT NULL  ENCODE lzo	  ,parkedtime BIGINT NOT NULL  ENCODE az64	  ,session_vars CHAR(2000) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_restarted_sessions owner to rdsdb;--DROP TABLE pg_catalog.stcs_restarted_sessions_internal;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_restarted_sessions_internal(	currenttime BIGINT NOT NULL  ENCODE az64	  ,is_reforkable CHAR(10) NOT NULL  ENCODE lzo	  ,temp_tbl_created CHAR(10) NOT NULL  ENCODE lzo	  ,named_prep_stmt_ct INTEGER NOT NULL  ENCODE az64	  ,unnamed_stmt_ct INTEGER NOT NULL  ENCODE az64	  ,in_xact_blk CHAR(10) NOT NULL  ENCODE lzo	  ,is_read_only CHAR(10) NOT NULL  ENCODE lzo	  ,is_single_stmt_query CHAR(10) NOT NULL  ENCODE lzo	  ,conn_state CHAR(100) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,in_authentication CHAR(10) NOT NULL  ENCODE lzo	  ,is_bootstrap CHAR(10) NOT NULL  ENCODE lzo	  ,is_restarted_session CHAR(10) NOT NULL  ENCODE lzo	  ,is_extended_protocol CHAR(10) NOT NULL  ENCODE lzo	  ,is_idle_connection CHAR(10) NOT NULL  ENCODE lzo	  ,current_executing_command CHAR(10) NOT NULL  ENCODE lzo	  ,is_ssl_compressed CHAR(10) NOT NULL  ENCODE lzo	  ,is_protocol_v3 CHAR(10) NOT NULL  ENCODE lzo	  ,are_commands_repeated CHAR(10) NOT NULL  ENCODE lzo	  ,unsupported_command_sequence CHAR(10) NOT NULL  ENCODE lzo	  ,can_reissue_query CHAR(10) NOT NULL  ENCODE lzo	  ,parked_state_in_proxy CHAR(10) NOT NULL  ENCODE lzo	  ,session_size BIGINT NOT NULL  ENCODE az64	  ,is_inc_resize CHAR(10) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_restarted_sessions_internal owner to rdsdb;--DROP TABLE pg_catalog.stcs_restore;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_restore(	db_name CHAR(50) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,seq INTEGER NOT NULL  ENCODE az64	  ,backup_name CHAR(256) NOT NULL  ENCODE lzo	  ,backup_label CHAR(64) NOT NULL  ENCODE lzo	  ,source_cluster_name CHAR(32) NOT NULL  ENCODE lzo	  ,source_db_name CHAR(50) NOT NULL  ENCODE lzo	  ,source_backup_starttime BIGINT NOT NULL  ENCODE az64	  ,backup_type CHAR(12) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,succeeded INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_restore owner to rdsdb;--DROP TABLE pg_catalog.stcs_result_cache_history;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_result_cache_history(	userid INTEGER NOT NULL  ENCODE az64	  ,cache_hit_query INTEGER NOT NULL  ENCODE az64	  ,source_query INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_result_cache_history owner to rdsdb;--DROP TABLE pg_catalog.stcs_result_cache_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_result_cache_stats(	recordtime BIGINT NOT NULL  ENCODE az64	  ,num_entries INTEGER NOT NULL  ENCODE az64	  ,num_valid_entries INTEGER NOT NULL  ENCODE az64	  ,lookup_count BIGINT NOT NULL  ENCODE az64	  ,hit_count BIGINT NOT NULL  ENCODE az64	  ,populate_count BIGINT NOT NULL  ENCODE az64	  ,evict_count BIGINT NOT NULL  ENCODE az64	  ,invalidate_count BIGINT NOT NULL  ENCODE az64	  ,mem_usage BIGINT NOT NULL  ENCODE az64	  ,match_count BIGINT NOT NULL  ENCODE az64	  ,telemetry CHAR(500) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_result_cache_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_return;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_return(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,packets INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_return owner to rdsdb;--DROP TABLE pg_catalog.stcs_rlf_scan;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_rlf_scan(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,section INTEGER NOT NULL  ENCODE az64	  ,total_time BIGINT NOT NULL  ENCODE az64	  ,min_time BIGINT NOT NULL  ENCODE az64	  ,max_time BIGINT NOT NULL  ENCODE az64	  ,windows_processed BIGINT NOT NULL  ENCODE az64	  ,blocks_opened BIGINT NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,materialized_columns CHAR(300) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_rlf_scan owner to rdsdb;--DROP TABLE pg_catalog.stcs_rms_calls;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_rms_calls(	"transaction" INTEGER NOT NULL  ENCODE az64	  ,api_call CHAR(60) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,duration_us BIGINT NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,num_returned_objects INTEGER NOT NULL  ENCODE az64	  ,status CHAR(128) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_rms_calls owner to rdsdb;--DROP TABLE pg_catalog.stcs_rpc;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_rpc(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,requests BIGINT NOT NULL  ENCODE az64	  ,rpc_type INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_rpc owner to rdsdb;--DROP TABLE pg_catalog.stcs_rtf_save;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_rtf_save(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,hash_segment INTEGER NOT NULL  ENCODE az64	  ,hash_step INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_rtf_save owner to rdsdb;--DROP TABLE pg_catalog.stcs_rtf_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_rtf_stats(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,hash_segment INTEGER NOT NULL  ENCODE az64	  ,hash_step INTEGER NOT NULL  ENCODE az64	  ,rw_id INTEGER NOT NULL  ENCODE az64	  ,was_disabled CHAR(1) NOT NULL  ENCODE lzo	  ,eval_checked BIGINT NOT NULL  ENCODE az64	  ,eval_rejected BIGINT NOT NULL  ENCODE az64	  ,checked BIGINT NOT NULL  ENCODE az64	  ,rejected BIGINT NOT NULL  ENCODE az64	  ,distributed CHAR(1) NOT NULL  ENCODE lzo	  ,prefetched CHAR(1) NOT NULL  ENCODE lzo	  ,validity_check CHAR(1) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_rtf_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3_commit_leak;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3_commit_leak(	logtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"key" CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3_commit_leak owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3_write_block_debug;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3_write_block_debug(	logtime BIGINT NOT NULL  ENCODE az64	  ,"key" CHAR(256) NOT NULL  ENCODE lzo	  ,tbl_id INTEGER NOT NULL  ENCODE az64	  ,s3_action CHAR(64) NOT NULL  ENCODE lzo	  ,s3_state CHAR(64) NOT NULL  ENCODE lzo	  ,one_perm_rep CHAR(10) NOT NULL  ENCODE lzo	  ,a_temp CHAR(10) NOT NULL  ENCODE lzo	  ,is_metadata CHAR(10) NOT NULL  ENCODE lzo	  ,flags INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,colnum INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,tombstoned_id INTEGER NOT NULL  ENCODE az64	  ,backup_id CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3_write_block_debug owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3client;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3client(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,http_method CHAR(64) NOT NULL  ENCODE lzo	  ,s3_action CHAR(64) NOT NULL  ENCODE lzo	  ,bucket CHAR(64) NOT NULL  ENCODE lzo	  ,"key" CHAR(256) NOT NULL  ENCODE lzo	  ,transfer_size BIGINT NOT NULL  ENCODE az64	  ,data_size BIGINT NOT NULL  ENCODE az64	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,end_time BIGINT NOT NULL  ENCODE az64	  ,transfer_time BIGINT NOT NULL  ENCODE az64	  ,compression_time BIGINT NOT NULL  ENCODE az64	  ,connect_time BIGINT NOT NULL  ENCODE az64	  ,app_connect_time BIGINT NOT NULL  ENCODE az64	  ,retries INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(32) NOT NULL  ENCODE lzo	  ,extended_request_id CHAR(128) NOT NULL  ENCODE lzo	  ,ip_address CHAR(64) NOT NULL  ENCODE lzo	  ,thread_id INTEGER NOT NULL  ENCODE az64	  ,original_start_time_us BIGINT NOT NULL  ENCODE az64	  ,total_transfer_time_us_with_retries BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,tbl_id INTEGER NOT NULL  ENCODE az64	  ,one_perm_rep INTEGER NOT NULL  ENCODE az64	  ,flags INTEGER NOT NULL  ENCODE az64	  ,s3_write_type CHAR(64) NOT NULL  ENCODE lzo	  ,is_s3commit_write INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3client owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3client_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3client_error(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,sliceid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,http_method CHAR(64) NOT NULL  ENCODE lzo	  ,s3_action CHAR(64) NOT NULL  ENCODE lzo	  ,bucket CHAR(64) NOT NULL  ENCODE lzo	  ,"key" CHAR(256) NOT NULL  ENCODE lzo	  ,error CHAR(1024) NOT NULL  ENCODE lzo	  ,retry_count INTEGER NOT NULL  ENCODE az64	  ,curl_code INTEGER NOT NULL  ENCODE az64	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,resolve_time BIGINT NOT NULL  ENCODE az64	  ,connect_time BIGINT NOT NULL  ENCODE az64	  ,transfer_size BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,one_perm_rep INTEGER NOT NULL  ENCODE az64	  ,flags INTEGER NOT NULL  ENCODE az64	  ,s3_write_type CHAR(64) NOT NULL  ENCODE lzo	  ,is_s3commit_write INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3client_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3client_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3client_trace(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,http_method CHAR(64) NOT NULL  ENCODE lzo	  ,s3_action CHAR(64) NOT NULL  ENCODE lzo	  ,bucket CHAR(64) NOT NULL  ENCODE lzo	  ,"key" CHAR(256) NOT NULL  ENCODE lzo	  ,message CHAR(256) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,one_perm_rep INTEGER NOT NULL  ENCODE az64	  ,flags INTEGER NOT NULL  ENCODE az64	  ,s3_write_type CHAR(64) NOT NULL  ENCODE lzo	  ,is_s3commit_write INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3client_trace owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3commit_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3commit_stats(	xid BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,end_time BIGINT NOT NULL  ENCODE az64	  ,s3_write_untagged_latency BIGINT NOT NULL  ENCODE az64	  ,s3_write_add_tag_latency BIGINT NOT NULL  ENCODE az64	  ,s3_write_delete_tag_latency BIGINT NOT NULL  ENCODE az64	  ,num_untagged_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_add_tags_issued_to_s3 BIGINT NOT NULL  ENCODE az64	  ,num_delete_tags_issued_to_s3 BIGINT NOT NULL  ENCODE az64	  ,dynamo_write_avg_latency_usec BIGINT NOT NULL  ENCODE az64	  ,synced_commits_to_s3 INTEGER NOT NULL  ENCODE az64	  ,s3commit_enable_latency BIGINT NOT NULL  ENCODE az64	  ,s3commit_disable_latency BIGINT NOT NULL  ENCODE az64	  ,dynamo_get_avg_latency_usec BIGINT NOT NULL  ENCODE az64	  ,num_tossed_guids BIGINT NOT NULL  ENCODE az64	  ,num_tombstoned_guids BIGINT NOT NULL  ENCODE az64	  ,num_untagged_untracked BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3commit_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3list;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3list(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,bucket CHAR(256) NOT NULL  ENCODE lzo	  ,prefix CHAR(256) NOT NULL  ENCODE lzo	  ,"recursive" CHAR(1) NOT NULL  ENCODE lzo	  ,retrieved_files INTEGER NOT NULL  ENCODE az64	  ,max_file_size BIGINT NOT NULL  ENCODE az64	  ,avg_file_size DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,duration BIGINT NOT NULL  ENCODE az64	  ,generated_splits INTEGER NOT NULL  ENCODE az64	  ,avg_split_length DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,scan_type INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3list owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3log;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3log(	userid INTEGER NOT NULL  ENCODE az64	  ,is_internal INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,scan_type INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(16) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3log owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3partition_elimination;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3partition_elimination(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,total_partitions INTEGER NOT NULL  ENCODE az64	  ,qualified_partitions INTEGER NOT NULL  ENCODE az64	  ,"assignment" CHAR(1) NOT NULL  ENCODE lzo	  ,duration BIGINT NOT NULL  ENCODE az64	  ,assigned_partitions INTEGER NOT NULL  ENCODE az64	  ,scan_type INTEGER NOT NULL  ENCODE az64	  ,fetched_partitions INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3partition_elimination owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3partition_predicate;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3partition_predicate(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,"predicate" CHAR(1024) NOT NULL  ENCODE lzo	  ,effectiveness CHAR(32) NOT NULL  ENCODE lzo	  ,error CHAR(1024) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3partition_predicate owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3pushdown;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3pushdown(	query INTEGER NOT NULL  ENCODE az64	  ,object_type CHAR(24) NOT NULL  ENCODE lzo	  ,oid INTEGER NOT NULL  ENCODE az64	  ,argument_type CHAR(32) NOT NULL  ENCODE lzo	  ,return_type CHAR(16) NOT NULL  ENCODE lzo	  ,is_supported CHAR(1) NOT NULL  ENCODE lzo	  ,external_source CHAR(10) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3pushdown owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3query;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3query(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,external_table_name CHAR(136) NOT NULL  ENCODE lzo	  ,is_partitioned CHAR(1) NOT NULL  ENCODE lzo	  ,is_rrscan CHAR(1) NOT NULL  ENCODE lzo	  ,s3_scanned_rows BIGINT NOT NULL  ENCODE az64	  ,s3_scanned_bytes BIGINT NOT NULL  ENCODE az64	  ,s3query_returned_rows BIGINT NOT NULL  ENCODE az64	  ,s3query_returned_bytes BIGINT NOT NULL  ENCODE az64	  ,files INTEGER NOT NULL  ENCODE az64	  ,total_retries INTEGER NOT NULL  ENCODE az64	  ,max_retries INTEGER NOT NULL  ENCODE az64	  ,max_request_duration BIGINT NOT NULL  ENCODE az64	  ,avg_request_duration BIGINT NOT NULL  ENCODE az64	  ,max_request_parallelism INTEGER NOT NULL  ENCODE az64	  ,max_allowed_parallelism INTEGER NOT NULL  ENCODE az64	  ,avg_request_parallelism DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,splits INTEGER NOT NULL  ENCODE az64	  ,total_split_size BIGINT NOT NULL  ENCODE az64	  ,max_split_size BIGINT NOT NULL  ENCODE az64	  ,request_fingerprint BIGINT NOT NULL  ENCODE az64	  ,file_format CHAR(16) NOT NULL  ENCODE lzo	  ,cache_hits INTEGER NOT NULL  ENCODE az64	  ,is_copy INTEGER NOT NULL  ENCODE az64	  ,is_nested CHAR(1) NOT NULL  ENCODE lzo	  ,slowdown_count INTEGER NOT NULL  ENCODE az64	  ,max_concurrent_slowdown_count INTEGER NOT NULL  ENCODE az64	  ,s3_billable_scanned_bytes BIGINT NOT NULL  ENCODE az64	  ,scan_type INTEGER NOT NULL  ENCODE az64	  ,s3query_returned_uncompressed_bytes BIGINT NOT NULL  ENCODE az64	  ,is_lakeformation INTEGER NOT NULL  ENCODE az64	  ,throttled_requests INTEGER NOT NULL  ENCODE az64	  ,peakmem BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3query owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3query_billing_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3query_billing_trace(	eventtime BIGINT NOT NULL  ENCODE az64	  ,requestid CHAR(40) NOT NULL  ENCODE lzo	  ,errtype CHAR(64) NOT NULL  ENCODE lzo	  ,errmsg CHAR(400) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3query_billing_trace owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3query_metering;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3query_metering(	eventtime BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,internal_request_uuid CHAR(36) NOT NULL  ENCODE lzo	  ,metered_mbs BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3query_metering owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3requests;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3requests(	query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,duration BIGINT NOT NULL  ENCODE az64	  ,retry_count INTEGER NOT NULL  ENCODE az64	  ,returned_rows BIGINT NOT NULL  ENCODE az64	  ,fetched INTEGER NOT NULL  ENCODE az64	  ,file_size BIGINT NOT NULL  ENCODE az64	  ,start_offset BIGINT NOT NULL  ENCODE az64	  ,length BIGINT NOT NULL  ENCODE az64	  ,file_name CHAR(512) NOT NULL  ENCODE lzo	  ,last_timeout BIGINT NOT NULL  ENCODE az64	  ,failed INTEGER NOT NULL  ENCODE az64	  ,etag CHAR(512) NOT NULL  ENCODE lzo	  ,num_splits INTEGER NOT NULL  ENCODE az64	  ,cache_status INTEGER NOT NULL  ENCODE az64	  ,returned_bytes BIGINT NOT NULL  ENCODE az64	  ,s3_scanned_rows BIGINT NOT NULL  ENCODE az64	  ,s3_scanned_bytes BIGINT NOT NULL  ENCODE az64	  ,"location" CHAR(128) NOT NULL  ENCODE lzo	  ,latency_caching_batches BIGINT NOT NULL  ENCODE az64	  ,latency_caching_manifest BIGINT NOT NULL  ENCODE az64	  ,row_groups BIGINT NOT NULL  ENCODE az64	  ,skipped_row_groups BIGINT NOT NULL  ENCODE az64	  ,skipped_rows BIGINT NOT NULL  ENCODE az64	  ,expected_duration BIGINT NOT NULL  ENCODE az64	  ,read_count BIGINT NOT NULL  ENCODE az64	  ,slowdown_count INTEGER NOT NULL  ENCODE az64	  ,scan_type INTEGER NOT NULL  ENCODE az64	  ,s3_physical_scanned_bytes BIGINT NOT NULL  ENCODE az64	  ,returned_uncompressed_bytes BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,peak_memory_utilization INTEGER NOT NULL  ENCODE az64	  ,codegen_time BIGINT NOT NULL  ENCODE az64	  ,total_storage_wait_time BIGINT NOT NULL  ENCODE az64	  ,total_query_cpu_time BIGINT NOT NULL  ENCODE az64	  ,scan_cpu_time BIGINT NOT NULL  ENCODE az64	  ,hostname CHAR(100) NOT NULL  ENCODE lzo	  ,spectrum_starttime BIGINT NOT NULL  ENCODE az64	  ,spectrum_endtime BIGINT NOT NULL  ENCODE az64	  ,client_fetch_wait_time BIGINT NOT NULL  ENCODE az64	  ,cache_uncompressed_size BIGINT NOT NULL  ENCODE az64	  ,cache_compressed_size BIGINT NOT NULL  ENCODE az64	  ,cache_compression_latency BIGINT NOT NULL  ENCODE az64	  ,abort_reason INTEGER NOT NULL  ENCODE az64	  ,cache_objects_count INTEGER NOT NULL  ENCODE az64	  ,backoff_time BIGINT NOT NULL  ENCODE az64	  ,connect_retries INTEGER NOT NULL  ENCODE az64	  ,connect_time BIGINT NOT NULL  ENCODE az64	  ,exectask_time BIGINT NOT NULL  ENCODE az64	  ,fetch_time BIGINT NOT NULL  ENCODE az64	  ,tokens INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(16) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3requests owner to rdsdb;--DROP TABLE pg_catalog.stcs_s3retries;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_s3retries(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,retries INTEGER NOT NULL  ENCODE az64	  ,successful_fetches INTEGER NOT NULL  ENCODE az64	  ,file_size BIGINT NOT NULL  ENCODE az64	  ,start_offset BIGINT NOT NULL  ENCODE az64	  ,length BIGINT NOT NULL  ENCODE az64	  ,"location" CHAR(256) NOT NULL  ENCODE lzo	  ,message CHAR(256) NOT NULL  ENCODE lzo	  ,retry_backoff_ms INTEGER NOT NULL  ENCODE az64	  ,scan_type INTEGER NOT NULL  ENCODE az64	  ,"timeout" BIGINT NOT NULL  ENCODE az64	  ,connect_retries INTEGER NOT NULL  ENCODE az64	  ,connect_time BIGINT NOT NULL  ENCODE az64	  ,exectask_time BIGINT NOT NULL  ENCODE az64	  ,fast_forward_fetch_time BIGINT NOT NULL  ENCODE az64	  ,fetch_time BIGINT NOT NULL  ENCODE az64	  ,request_id CHAR(16) NOT NULL  ENCODE lzo	  ,state INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_s3retries owner to rdsdb;--DROP TABLE pg_catalog.stcs_sample;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_sample(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_sample owner to rdsdb;--DROP TABLE pg_catalog.stcs_save;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_save(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,is_save_rtf CHAR(1) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_save owner to rdsdb;--DROP TABLE pg_catalog.stcs_scan;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_scan(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,fetches BIGINT NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_rrscan CHAR(1) NOT NULL  ENCODE lzo	  ,is_delayed_scan CHAR(1) NOT NULL  ENCODE lzo	  ,rows_pre_filter BIGINT NOT NULL  ENCODE az64	  ,rows_pre_user_filter BIGINT NOT NULL  ENCODE az64	  ,perm_table_name CHAR(136) NOT NULL  ENCODE lzo	  ,is_rlf_scan CHAR(1) NOT NULL  ENCODE lzo	  ,is_rlf_scan_reason INTEGER NOT NULL  ENCODE az64	  ,num_em_blocks INTEGER NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,runtime_filtering CHAR(1) NOT NULL  ENCODE lzo	  ,scan_region INTEGER NOT NULL  ENCODE az64	  ,num_sortkey_as_predicate INTEGER NOT NULL  ENCODE az64	  ,row_fetcher_state INTEGER NOT NULL  ENCODE az64	  ,consumed_scan_ranges BIGINT NOT NULL  ENCODE az64	  ,work_stealing_reason BIGINT NOT NULL  ENCODE az64	  ,is_vectorized_scan CHAR(1) NOT NULL  ENCODE lzo	  ,is_vectorized_scan_reason INTEGER NOT NULL  ENCODE az64	  ,row_fetcher_reason BIGINT NOT NULL  ENCODE az64	  ,topology_signature BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_scan owner to rdsdb;--DROP TABLE pg_catalog.stcs_scan_range_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_scan_range_stats(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,local_data_slice INTEGER NOT NULL  ENCODE az64	  ,local_compute_slice INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,num_blocks_to_scan BIGINT NOT NULL  ENCODE az64	  ,total_blocks BIGINT NOT NULL  ENCODE az64	  ,num_scan_ranges BIGINT NOT NULL  ENCODE az64	  ,min_scan_range_size BIGINT NOT NULL  ENCODE az64	  ,max_scan_range_size BIGINT NOT NULL  ENCODE az64	  ,avg_scan_range_size BIGINT NOT NULL  ENCODE az64	  ,num_blf_ranges BIGINT NOT NULL  ENCODE az64	  ,min_blf_range_size BIGINT NOT NULL  ENCODE az64	  ,max_blf_range_size BIGINT NOT NULL  ENCODE az64	  ,avg_blf_range_size BIGINT NOT NULL  ENCODE az64	  ,block_reopen_times BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_scan_range_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_schema_quota_ddl;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_schema_quota_ddl(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,schema_id INTEGER NOT NULL  ENCODE az64	  ,action_type CHAR(7) NOT NULL  ENCODE lzo	  ,"quota" INTEGER NOT NULL  ENCODE az64	  ,"timestamp" BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_schema_quota_ddl owner to rdsdb;--DROP TABLE pg_catalog.stcs_schema_quota_violations;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_schema_quota_violations(	ownerid INTEGER NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,schema_id INTEGER NOT NULL  ENCODE az64	  ,schema_name CHAR(128) NOT NULL  ENCODE lzo	  ,"quota" INTEGER NOT NULL  ENCODE az64	  ,disk_usage INTEGER NOT NULL  ENCODE az64	  ,disk_usage_pct DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,"timestamp" BIGINT NOT NULL  ENCODE az64	  ,disk_usage_diff INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_schema_quota_violations owner to rdsdb;--DROP TABLE pg_catalog.stcs_seg_completed_notify;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_seg_completed_notify(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,scheduled BIGINT NOT NULL  ENCODE az64	  ,completed BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_seg_completed_notify owner to rdsdb;--DROP TABLE pg_catalog.stcs_segment_ends_cleanly;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_segment_ends_cleanly(	userid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,dispatched BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,seg INTEGER NOT NULL  ENCODE az64	  ,global_slice INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_segment_ends_cleanly owner to rdsdb;--DROP TABLE pg_catalog.stcs_segment_starts;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_segment_starts(	userid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,seg INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_segment_starts owner to rdsdb;--DROP TABLE pg_catalog.stcs_sem_pool;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_sem_pool(	node INTEGER NOT NULL  ENCODE az64	  ,semid INTEGER NOT NULL  ENCODE az64	  ,semnum INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_sem_pool owner to rdsdb;--DROP TABLE pg_catalog.stcs_sem_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_sem_stat(	currenttime BIGINT NOT NULL  ENCODE az64	  ,sampletime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,count BIGINT NOT NULL  ENCODE az64	  ,waittime BIGINT NOT NULL  ENCODE az64	  ,longest BIGINT NOT NULL  ENCODE az64	  ,mutex_requests BIGINT NOT NULL  ENCODE az64	  ,name CHAR(25) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_sem_stat owner to rdsdb;--DROP TABLE pg_catalog.stcs_sem_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_sem_usage(	currenttime BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"last" INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,count BIGINT NOT NULL  ENCODE az64	  ,waittime BIGINT NOT NULL  ENCODE az64	  ,longest BIGINT NOT NULL  ENCODE az64	  ,mutex_requests BIGINT NOT NULL  ENCODE az64	  ,name CHAR(25) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_sem_usage owner to rdsdb;--DROP TABLE pg_catalog.stcs_serial_safety_net;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_serial_safety_net(	xid BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,write_pstamp BIGINT NOT NULL  ENCODE az64	  ,sstamp BIGINT NOT NULL  ENCODE az64	  ,is_commit INTEGER NOT NULL  ENCODE az64	  ,ssn_serializer INTEGER NOT NULL  ENCODE az64	  ,cstamp BIGINT NOT NULL  ENCODE az64	  ,write_pstamp_oid INTEGER NOT NULL  ENCODE az64	  ,write_pstamp_updated_by_read INTEGER NOT NULL  ENCODE az64	  ,sstamp_oid INTEGER NOT NULL  ENCODE az64	  ,write_pstamp_xid BIGINT NOT NULL  ENCODE az64	  ,sstamp_xid BIGINT NOT NULL  ENCODE az64	  ,ro_pstamp BIGINT NOT NULL  ENCODE az64	  ,max_snapshot_time BIGINT NOT NULL  ENCODE az64	  ,ro_pstamp_oid INTEGER NOT NULL  ENCODE az64	  ,ro_pstamp_xid BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_serial_safety_net owner to rdsdb;--DROP TABLE pg_catalog.stcs_server_write_timings;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_server_write_timings(	node INTEGER NOT NULL  ENCODE az64	  ,instance INTEGER NOT NULL  ENCODE az64	  ,write_size BIGINT NOT NULL  ENCODE az64	  ,wait_for_data BIGINT NOT NULL  ENCODE az64	  ,collect_data BIGINT NOT NULL  ENCODE az64	  ,iolocal BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_server_write_timings owner to rdsdb;--DROP TABLE pg_catalog.stcs_session_state;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_session_state(	now BIGINT NOT NULL  ENCODE az64	  ,process INTEGER NOT NULL  ENCODE az64	  ,num_prepared_stmts BIGINT NOT NULL  ENCODE az64	  ,bytes_used BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_session_state owner to rdsdb;--DROP TABLE pg_catalog.stcs_sessions;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_sessions(	userid INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,process INTEGER NOT NULL  ENCODE az64	  ,user_name CHAR(50) NOT NULL  ENCODE lzo	  ,db_name CHAR(50) NOT NULL  ENCODE lzo	  ,timeout_sec INTEGER NOT NULL  ENCODE az64	  ,timed_out INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_sessions owner to rdsdb;--DROP TABLE pg_catalog.stcs_shadow_table_commit;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_shadow_table_commit(	xid BIGINT NOT NULL  ENCODE az64	  ,record_time BIGINT NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,lock_duration BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_shadow_table_commit owner to rdsdb;--DROP TABLE pg_catalog.stcs_skr_scan_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_skr_scan_metrics(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,observed_rrscan_rows_filtered BIGINT NOT NULL  ENCODE az64	  ,observed_post_rrscan_rows_filtered BIGINT NOT NULL  ENCODE az64	  ,estimated_rows_filtered BIGINT NOT NULL  ENCODE az64	  ,observation_type INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_skr_scan_metrics owner to rdsdb;--DROP TABLE pg_catalog.stcs_small_table_convert_event;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_small_table_convert_event(	xid BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,end_time BIGINT NOT NULL  ENCODE az64	  ,command CHAR(128) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_small_table_convert_event owner to rdsdb;--DROP TABLE pg_catalog.stcs_smfaults;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_smfaults(	seq INTEGER NOT NULL  ENCODE az64	  ,run INTEGER NOT NULL  ENCODE az64	  ,mon_type CHAR(128) NOT NULL  ENCODE lzo	  ,mon_name CHAR(128) NOT NULL  ENCODE lzo	  ,severity INTEGER NOT NULL  ENCODE az64	  ,resolution_dbup CHAR(128) NOT NULL  ENCODE lzo	  ,resolution_dbdown CHAR(128) NOT NULL  ENCODE lzo	  ,code INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,observer CHAR(15) NOT NULL  ENCODE lzo	  ,culprit CHAR(15) NOT NULL  ENCODE lzo	  ,msg CHAR(256) NOT NULL  ENCODE lzo	  ,xml_extra CHAR(2048) NOT NULL  ENCODE lzo	  ,has_measure_val INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_smfaults owner to rdsdb;--DROP TABLE pg_catalog.stcs_smfaults_cleared;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_smfaults_cleared(	seq INTEGER NOT NULL  ENCODE az64	  ,run INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,msg CHAR(256) NOT NULL  ENCODE lzo	  ,resolution CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_smfaults_cleared owner to rdsdb;--DROP TABLE pg_catalog.stcs_smfaults_mval;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_smfaults_mval(	seq INTEGER NOT NULL  ENCODE az64	  ,run INTEGER NOT NULL  ENCODE az64	  ,thresh BIGINT NOT NULL  ENCODE az64	  ,value BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_smfaults_mval owner to rdsdb;--DROP TABLE pg_catalog.stcs_smfaults_overflow;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_smfaults_overflow(	parent_seq INTEGER NOT NULL  ENCODE az64	  ,parent_run INTEGER NOT NULL  ENCODE az64	  ,seq INTEGER NOT NULL  ENCODE az64	  ,run INTEGER NOT NULL  ENCODE az64	  ,mon_type CHAR(128) NOT NULL  ENCODE lzo	  ,mon_name CHAR(128) NOT NULL  ENCODE lzo	  ,severity INTEGER NOT NULL  ENCODE az64	  ,resolution_dbup CHAR(128) NOT NULL  ENCODE lzo	  ,resolution_dbdown CHAR(128) NOT NULL  ENCODE lzo	  ,code INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,observer CHAR(15) NOT NULL  ENCODE lzo	  ,culprit CHAR(15) NOT NULL  ENCODE lzo	  ,msg CHAR(256) NOT NULL  ENCODE lzo	  ,xml_extra CHAR(2048) NOT NULL  ENCODE lzo	  ,has_measure_val INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_smfaults_overflow owner to rdsdb;--DROP TABLE pg_catalog.stcs_smlog;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_smlog(	seq INTEGER NOT NULL  ENCODE az64	  ,ip CHAR(15) NOT NULL  ENCODE lzo	  ,process CHAR(15) NOT NULL  ENCODE lzo	  ,"level" INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,"file" CHAR(64) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,sys_errno INTEGER NOT NULL  ENCODE az64	  ,errno_str CHAR(64) NOT NULL  ENCODE lzo	  ,msg CHAR(256) NOT NULL  ENCODE lzo	  ,stack CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_smlog owner to rdsdb;--DROP TABLE pg_catalog.stcs_snapshotbackup;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_snapshotbackup(	snapshotname CHAR(20) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,status CHAR(15) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_snapshotbackup owner to rdsdb;--DROP TABLE pg_catalog.stcs_sort;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_sort(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_sort owner to rdsdb;--DROP TABLE pg_catalog.stcs_sorted_checker;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_sorted_checker(	recordtime BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,qid BIGINT NOT NULL  ENCODE az64	  ,relid BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,total_rows BIGINT NOT NULL  ENCODE az64	  ,expected_sorted BIGINT NOT NULL  ENCODE az64	  ,checked_rows BIGINT NOT NULL  ENCODE az64	  ,ooo_rows BIGINT NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_sorted_checker owner to rdsdb;--DROP TABLE pg_catalog.stcs_sorted_checker_leader;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_sorted_checker_leader(	starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,qid BIGINT NOT NULL  ENCODE az64	  ,dbname CHAR(128) NOT NULL  ENCODE lzo	  ,"schema" CHAR(128) NOT NULL  ENCODE lzo	  ,tablename CHAR(128) NOT NULL  ENCODE lzo	  ,relid BIGINT NOT NULL  ENCODE az64	  ,colid BIGINT NOT NULL  ENCODE az64	  ,datatype INTEGER NOT NULL  ENCODE az64	  ,"compression" INTEGER NOT NULL  ENCODE az64	  ,sorted_corrupt INTEGER NOT NULL  ENCODE az64	  ,num_incorrect_sorted_rows BIGINT NOT NULL  ENCODE az64	  ,fixer INTEGER NOT NULL  ENCODE az64	  ,version INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_sorted_checker_leader owner to rdsdb;--DROP TABLE pg_catalog.stcs_spatial_column_linker;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_spatial_column_linker(	query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,columnname CHAR(400) NOT NULL  ENCODE lzo	  ,sqloperation INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_spatial_column_linker owner to rdsdb;--DROP TABLE pg_catalog.stcs_spatial_function;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_spatial_function(	query BIGINT NOT NULL  ENCODE az64	  ,functionid INTEGER NOT NULL  ENCODE az64	  ,sqloperation INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_spatial_function owner to rdsdb;--DROP TABLE pg_catalog.stcs_spatial_index;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_spatial_index(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,num_inner BIGINT NOT NULL  ENCODE az64	  ,num_outer BIGINT NOT NULL  ENCODE az64	  ,pruned_tuples BIGINT NOT NULL  ENCODE az64	  ,"predicate" INTEGER NOT NULL  ENCODE az64	  ,created CHAR(1) NOT NULL  ENCODE lzo	  ,mem_allowance BIGINT NOT NULL  ENCODE az64	  ,predicted_size BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_spatial_index owner to rdsdb;--DROP TABLE pg_catalog.stcs_spatial_query;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_spatial_query(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,query_cmd_type INTEGER NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_spatial_query owner to rdsdb;--DROP TABLE pg_catalog.stcs_spatial_simplify;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_spatial_simplify(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,maximum_tolerance CHAR(30) NOT NULL  ENCODE lzo	  ,maximum_size BIGINT NOT NULL  ENCODE az64	  ,initial_size BIGINT NOT NULL  ENCODE az64	  ,simplified CHAR(1) NOT NULL  ENCODE lzo	  ,final_size BIGINT NOT NULL  ENCODE az64	  ,final_tolerance CHAR(30) NOT NULL  ENCODE lzo	  ,num_iterations BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_spatial_simplify owner to rdsdb;--DROP TABLE pg_catalog.stcs_spectrum_cache_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_spectrum_cache_error(	query INTEGER NOT NULL  ENCODE az64	  ,cache_key CHAR(200) NOT NULL  ENCODE lzo	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,error_id INTEGER NOT NULL  ENCODE az64	  ,error_details CHAR(350) NOT NULL  ENCODE lzo	  ,system_error INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(16) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_spectrum_cache_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_spectrum_scan_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_spectrum_scan_error(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"location" CHAR(256) NOT NULL  ENCODE lzo	  ,"rowid" CHAR(2100) NOT NULL  ENCODE lzo	  ,colname CHAR(127) NOT NULL  ENCODE lzo	  ,original_value CHAR(1024) NOT NULL  ENCODE lzo	  ,modified_value CHAR(1024) NOT NULL  ENCODE lzo	  ,"trigger" INTEGER NOT NULL  ENCODE az64	  ,"action" INTEGER NOT NULL  ENCODE az64	  ,action_value CHAR(127) NOT NULL  ENCODE lzo	  ,error_code INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_spectrum_scan_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_sshclient_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_sshclient_error(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,sliceid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,ssh_username CHAR(1024) NOT NULL  ENCODE lzo	  ,endpoint CHAR(1024) NOT NULL  ENCODE lzo	  ,command CHAR(4096) NOT NULL  ENCODE lzo	  ,error CHAR(1024) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_sshclient_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_ssn_violation;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_ssn_violation(	xid BIGINT NOT NULL  ENCODE az64	  ,session_id BIGINT NOT NULL  ENCODE az64	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,serialization_time BIGINT NOT NULL  ENCODE az64	  ,pstamp BIGINT NOT NULL  ENCODE az64	  ,sstamp BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_ssn_violation owner to rdsdb;--DROP TABLE pg_catalog.stcs_stack_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_stack_trace(	node CHAR(16) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,process CHAR(20) NOT NULL  ENCODE lzo	  ,frame INTEGER NOT NULL  ENCODE az64	  ,address CHAR(20) NOT NULL  ENCODE lzo	  ,instruction CHAR(100) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_stack_trace owner to rdsdb;--DROP TABLE pg_catalog.stcs_startup_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_startup_metrics(	node INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,phase CHAR(48) NOT NULL  ENCODE lzo	  ,"database" CHAR(32) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_startup_metrics owner to rdsdb;--DROP TABLE pg_catalog.stcs_step_parse;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_step_parse(	slice INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segnum INTEGER NOT NULL  ENCODE az64	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,field INTEGER NOT NULL  ENCODE az64	  ,"data" CHAR(90) NOT NULL  ENCODE lzo	  ,filename CHAR(90) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_step_parse owner to rdsdb;--DROP TABLE pg_catalog.stcs_steps;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_steps(	query INTEGER NOT NULL  ENCODE az64	  ,nodeid INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_steps owner to rdsdb;--DROP TABLE pg_catalog.stcs_stored_proc_call;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_stored_proc_call(	userid INTEGER NOT NULL  ENCODE az64	  ,session_userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"database" CHAR(32) NOT NULL  ENCODE lzo	  ,querytxt CHAR(500) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_stored_proc_call owner to rdsdb;--DROP TABLE pg_catalog.stcs_stored_proc_call_map;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_stored_proc_call_map(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,from_sp_call INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_stored_proc_call_map owner to rdsdb;--DROP TABLE pg_catalog.stcs_stored_proc_messages;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_stored_proc_messages(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,loglevel INTEGER NOT NULL  ENCODE az64	  ,message CHAR(1024) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_stored_proc_messages owner to rdsdb;--DROP TABLE pg_catalog.stcs_stream_segs;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_stream_segs(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,stream INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_stream_segs owner to rdsdb;--DROP TABLE pg_catalog.stcs_super_column_linker;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_super_column_linker(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,columnname CHAR(400) NOT NULL  ENCODE lzo	  ,sqloperation INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_super_column_linker owner to rdsdb;--DROP TABLE pg_catalog.stcs_super_function;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_super_function(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,functionid INTEGER NOT NULL  ENCODE az64	  ,sqloperation INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_super_function owner to rdsdb;--DROP TABLE pg_catalog.stcs_super_query;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_super_query(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,query_cmd_type INTEGER NOT NULL  ENCODE az64	  ,num_of_array_nav INTEGER NOT NULL  ENCODE az64	  ,num_of_object_nav INTEGER NOT NULL  ENCODE az64	  ,has_unnest_subquery INTEGER NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_super_query owner to rdsdb;--DROP TABLE pg_catalog.stcs_superblock_integrity_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_superblock_integrity_error(	recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,raw_disk_addr BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_superblock_integrity_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_superblock_vacuum;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_superblock_vacuum(	leaderstarttime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,nodestarttime BIGINT NOT NULL  ENCODE az64	  ,nodeendtime BIGINT NOT NULL  ENCODE az64	  ,commitstarttime BIGINT NOT NULL  ENCODE az64	  ,commitendtime BIGINT NOT NULL  ENCODE az64	  ,success INTEGER NOT NULL  ENCODE az64	  ,permbefore BIGINT NOT NULL  ENCODE az64	  ,tempbefore BIGINT NOT NULL  ENCODE az64	  ,leadersnapshotbefore BIGINT NOT NULL  ENCODE az64	  ,pgwalbefore BIGINT NOT NULL  ENCODE az64	  ,metadatabefore BIGINT NOT NULL  ENCODE az64	  ,freebefore BIGINT NOT NULL  ENCODE az64	  ,allocatedbefore BIGINT NOT NULL  ENCODE az64	  ,permafter BIGINT NOT NULL  ENCODE az64	  ,tempafter BIGINT NOT NULL  ENCODE az64	  ,leadersnapshotafter BIGINT NOT NULL  ENCODE az64	  ,pgwalafter BIGINT NOT NULL  ENCODE az64	  ,metadataafter BIGINT NOT NULL  ENCODE az64	  ,freeafter BIGINT NOT NULL  ENCODE az64	  ,allocatedafter BIGINT NOT NULL  ENCODE az64	  ,freelistbefore BIGINT NOT NULL  ENCODE az64	  ,freelistafter BIGINT NOT NULL  ENCODE az64	  ,logbefore BIGINT NOT NULL  ENCODE az64	  ,logafter BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_superblock_vacuum owner to rdsdb;--DROP TABLE pg_catalog.stcs_swap;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_swap(	recordtime BIGINT NOT NULL  ENCODE az64	  ,event CHAR(10) NOT NULL  ENCODE lzo	  ,address INTEGER NOT NULL  ENCODE az64	  ,content CHAR(24) NOT NULL  ENCODE lzo	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,size INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_swap owner to rdsdb;--DROP TABLE pg_catalog.stcs_system_abort_txn;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_system_abort_txn(	xid BIGINT NOT NULL  ENCODE az64	  ,txn_start_time BIGINT NOT NULL  ENCODE az64	  ,txn_idle_start_time BIGINT NOT NULL  ENCODE az64	  ,txn_log_abort_time BIGINT NOT NULL  ENCODE az64	  ,txn_check_type INTEGER NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_system_abort_txn owner to rdsdb;--DROP TABLE pg_catalog.stcs_system_state;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_system_state(	node INTEGER NOT NULL  ENCODE az64	  ,record_time BIGINT NOT NULL  ENCODE az64	  ,system_memfree BIGINT NOT NULL  ENCODE az64	  ,system_total BIGINT NOT NULL  ENCODE az64	  ,swap_free BIGINT NOT NULL  ENCODE az64	  ,swap_total BIGINT NOT NULL  ENCODE az64	  ,swap_in BIGINT NOT NULL  ENCODE az64	  ,swap_out BIGINT NOT NULL  ENCODE az64	  ,system_memavailable BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_system_state owner to rdsdb;--DROP TABLE pg_catalog.stcs_table_mutex;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_table_mutex(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,data_slice INTEGER NOT NULL  ENCODE az64	  ,"mode" INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_table_mutex owner to rdsdb;--DROP TABLE pg_catalog.stcs_table_partition_qpd_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_table_partition_qpd_stats(	eventtime BIGINT NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,partition_id INTEGER NOT NULL  ENCODE az64	  ,sort_key_col INTEGER NOT NULL  ENCODE az64	  ,blocks_read INTEGER NOT NULL  ENCODE az64	  ,blocks_used INTEGER NOT NULL  ENCODE az64	  ,rows_read BIGINT NOT NULL  ENCODE az64	  ,rows_used BIGINT NOT NULL  ENCODE az64	  ,bias_factor DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,query INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_table_partition_qpd_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_table_partition_scan;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_table_partition_scan(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,part INTEGER NOT NULL  ENCODE az64	  ,blocks_read INTEGER NOT NULL  ENCODE az64	  ,blocks_used INTEGER NOT NULL  ENCODE az64	  ,rows_read BIGINT NOT NULL  ENCODE az64	  ,rows_used BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_table_partition_scan owner to rdsdb;--DROP TABLE pg_catalog.stcs_table_partitions_hotness_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_table_partitions_hotness_stats(	eventtime BIGINT NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,total_wasted_blocks BIGINT NOT NULL  ENCODE az64	  ,total_blocks_read BIGINT NOT NULL  ENCODE az64	  ,total_blocks_used BIGINT NOT NULL  ENCODE az64	  ,no_loss_scans_count BIGINT NOT NULL  ENCODE az64	  ,zero_bias_scans_count BIGINT NOT NULL  ENCODE az64	  ,scan_count BIGINT NOT NULL  ENCODE az64	  ,num_sorted_rows BIGINT NOT NULL  ENCODE az64	  ,num_unsorted_rows BIGINT NOT NULL  ENCODE az64	  ,num_partitions INTEGER NOT NULL  ENCODE az64	  ,avg_qpd DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_table_partitions_hotness_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_terminate;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_terminate(	pid INTEGER NOT NULL  ENCODE az64	  ,vpid INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,signal INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_terminate owner to rdsdb;--DROP TABLE pg_catalog.stcs_tiered_storage_controller;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_tiered_storage_controller(	node_num INTEGER NOT NULL  ENCODE az64	  ,event_time BIGINT NOT NULL  ENCODE az64	  ,eviction_type INTEGER NOT NULL  ENCODE az64	  ,node_sb_version BIGINT NOT NULL  ENCODE az64	  ,leader_sb_version BIGINT NOT NULL  ENCODE az64	  ,request_accepted INTEGER NOT NULL  ENCODE az64	  ,used_capacity_perc INTEGER NOT NULL  ENCODE az64	  ,blks_evictable BIGINT NOT NULL  ENCODE az64	  ,blks_to_backup BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_tiered_storage_controller owner to rdsdb;--DROP TABLE pg_catalog.stcs_tiered_storage_s3_blocks;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_tiered_storage_s3_blocks(	node_num INTEGER NOT NULL  ENCODE az64	  ,event_time BIGINT NOT NULL  ENCODE az64	  ,num_blocks_evicted BIGINT NOT NULL  ENCODE az64	  ,on_demand_eviction INTEGER NOT NULL  ENCODE az64	  ,superblock_version BIGINT NOT NULL  ENCODE az64	  ,transaction_id BIGINT NOT NULL  ENCODE az64	  ,local_capacity BIGINT NOT NULL  ENCODE az64	  ,ts_cache_elems BIGINT NOT NULL  ENCODE az64	  ,blks_evictable BIGINT NOT NULL  ENCODE az64	  ,blks_to_backup BIGINT NOT NULL  ENCODE az64	  ,evicted_without_reads BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_tiered_storage_s3_blocks owner to rdsdb;--DROP TABLE pg_catalog.stcs_tombstone;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_tombstone(	"type" CHAR(128) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,nodenum INTEGER NOT NULL  ENCODE az64	  ,toss_guc_value INTEGER NOT NULL  ENCODE az64	  ,total BIGINT NOT NULL  ENCODE az64	  ,tombstoned BIGINT NOT NULL  ENCODE az64	  ,tossed_min_qid BIGINT NOT NULL  ENCODE az64	  ,tossed_table_ref BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_tombstone owner to rdsdb;--DROP TABLE pg_catalog.stcs_tr_conflict;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_tr_conflict(	xact_id BIGINT NOT NULL  ENCODE az64	  ,process_id BIGINT NOT NULL  ENCODE az64	  ,xact_start_ts BIGINT NOT NULL  ENCODE az64	  ,abort_time BIGINT NOT NULL  ENCODE az64	  ,table_id BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_tr_conflict owner to rdsdb;--DROP TABLE pg_catalog.stcs_transaction_read_write_set;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_transaction_read_write_set(	xid BIGINT NOT NULL  ENCODE az64	  ,table_id BIGINT NOT NULL  ENCODE az64	  ,is_write INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_transaction_read_write_set owner to rdsdb;--DROP TABLE pg_catalog.stcs_udf;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_udf(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,udfid INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_udf owner to rdsdb;--DROP TABLE pg_catalog.stcs_udf_compile_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_udf_compile_error(	userid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,error CHAR(4096) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_udf_compile_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_udf_log;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_udf_log(	query BIGINT NOT NULL  ENCODE az64	  ,message CHAR(4096) NOT NULL  ENCODE lzo	  ,created BIGINT NOT NULL  ENCODE az64	  ,filename CHAR(256) NOT NULL  ENCODE lzo	  ,funcname CHAR(256) NOT NULL  ENCODE lzo	  ,level_name CHAR(64) NOT NULL  ENCODE lzo	  ,level_number INTEGER NOT NULL  ENCODE az64	  ,lineno INTEGER NOT NULL  ENCODE az64	  ,module CHAR(256) NOT NULL  ENCODE lzo	  ,msecs DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,name CHAR(256) NOT NULL  ENCODE lzo	  ,path_name CHAR(256) NOT NULL  ENCODE lzo	  ,process BIGINT NOT NULL  ENCODE az64	  ,process_name CHAR(256) NOT NULL  ENCODE lzo	  ,relative_created DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,thread BIGINT NOT NULL  ENCODE az64	  ,thread_name CHAR(256) NOT NULL  ENCODE lzo	  ,traceback CHAR(4096) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,seq INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_udf_log owner to rdsdb;--DROP TABLE pg_catalog.stcs_udf_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_udf_trace(	component CHAR(128) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,udfid INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,message CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_udf_trace owner to rdsdb;--DROP TABLE pg_catalog.stcs_undo_transactions;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_undo_transactions(	recordtime BIGINT NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,tables_done INTEGER NOT NULL  ENCODE az64	  ,tables_total INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(137) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_undo_transactions owner to rdsdb;--DROP TABLE pg_catalog.stcs_undone;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_undone(	userid INTEGER NOT NULL  ENCODE az64	  ,xact_id BIGINT NOT NULL  ENCODE az64	  ,xact_id_undone BIGINT NOT NULL  ENCODE az64	  ,undo_start_ts BIGINT NOT NULL  ENCODE az64	  ,undo_end_ts BIGINT NOT NULL  ENCODE az64	  ,table_id BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_undone owner to rdsdb;--DROP TABLE pg_catalog.stcs_unique;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_unique(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,"type" CHAR(6) NOT NULL  ENCODE lzo	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,slots INTEGER NOT NULL  ENCODE az64	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,max_buffers_used BIGINT NOT NULL  ENCODE az64	  ,resizes INTEGER NOT NULL  ENCODE az64	  ,occupied INTEGER NOT NULL  ENCODE az64	  ,flushable INTEGER NOT NULL  ENCODE az64	  ,used_unique_prefetching CHAR(1) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_unique owner to rdsdb;--DROP TABLE pg_catalog.stcs_unload_log;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_unload_log(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"path" CHAR(1280) NOT NULL  ENCODE lzo	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,end_time BIGINT NOT NULL  ENCODE az64	  ,line_count BIGINT NOT NULL  ENCODE az64	  ,transfer_size BIGINT NOT NULL  ENCODE az64	  ,file_format CHAR(10) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_unload_log owner to rdsdb;--DROP TABLE pg_catalog.stcs_unload_options;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_unload_options(	query BIGINT NOT NULL  ENCODE az64	  ,row_count BIGINT NOT NULL  ENCODE az64	  ,"format" INTEGER NOT NULL  ENCODE az64	  ,authentication INTEGER NOT NULL  ENCODE az64	  ,compression_type INTEGER NOT NULL  ENCODE az64	  ,encryption_type INTEGER NOT NULL  ENCODE az64	  ,"manifest" INTEGER NOT NULL  ENCODE az64	  ,"maxfilesize" BIGINT NOT NULL  ENCODE az64	  ,cross_region CHAR(15) NOT NULL  ENCODE lzo	  ,opt_delimiter INTEGER NOT NULL  ENCODE az64	  ,opt_fixedwidth INTEGER NOT NULL  ENCODE az64	  ,opt_addquotes INTEGER NOT NULL  ENCODE az64	  ,opt_null_as INTEGER NOT NULL  ENCODE az64	  ,opt_escape INTEGER NOT NULL  ENCODE az64	  ,opt_allowoverwrite INTEGER NOT NULL  ENCODE az64	  ,opt_parallel INTEGER NOT NULL  ENCODE az64	  ,is_header INTEGER NOT NULL  ENCODE az64	  ,num_part_col INTEGER NOT NULL  ENCODE az64	  ,opt_incld_part_col INTEGER NOT NULL  ENCODE az64	  ,is_write_ext_tbl INTEGER NOT NULL  ENCODE az64	  ,is_encrypted_auto INTEGER NOT NULL  ENCODE az64	  ,opt_cleanpath INTEGER NOT NULL  ENCODE az64	  ,"rowgroupsize" BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_unload_options owner to rdsdb;--DROP TABLE pg_catalog.stcs_unnest;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_unnest(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_unnest owner to rdsdb;--DROP TABLE pg_catalog.stcs_usage_control;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_usage_control(	eventtime BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,usage_limit_id CHAR(40) NOT NULL  ENCODE lzo	  ,feature_type CHAR(30) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_usage_control owner to rdsdb;--DROP TABLE pg_catalog.stcs_user_query_rewrite;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_user_query_rewrite(	user_query_id CHAR(41) NOT NULL  ENCODE lzo	  ,rewritten_query_id INTEGER NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_user_query_rewrite owner to rdsdb;--DROP TABLE pg_catalog.stcs_userlog;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_userlog(	userid INTEGER NOT NULL  ENCODE az64	  ,username CHAR(50) NOT NULL  ENCODE lzo	  ,oldusername CHAR(50) NOT NULL  ENCODE lzo	  ,"action" CHAR(10) NOT NULL  ENCODE lzo	  ,usecreatedb INTEGER NOT NULL  ENCODE az64	  ,usesuper INTEGER NOT NULL  ENCODE az64	  ,usecatupd INTEGER NOT NULL  ENCODE az64	  ,valuntil BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_userlog owner to rdsdb;--DROP TABLE pg_catalog.stcs_utilitytext;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_utilitytext(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,text CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_utilitytext owner to rdsdb;--DROP TABLE pg_catalog.stcs_vacuum;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_vacuum(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,status CHAR(30) NOT NULL  ENCODE lzo	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,sortedrows BIGINT NOT NULL  ENCODE az64	  ,"blocks" INTEGER NOT NULL  ENCODE az64	  ,max_merge_partitions INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,reclaimable_rows BIGINT NOT NULL  ENCODE az64	  ,reclaimable_space_mb BIGINT NOT NULL  ENCODE az64	  ,cutoff_xid BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_vacuum owner to rdsdb;--DROP TABLE pg_catalog.stcs_vacuum_detail;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_vacuum_detail(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,part INTEGER NOT NULL  ENCODE az64	  ,start_row BIGINT NOT NULL  ENCODE az64	  ,end_row BIGINT NOT NULL  ENCODE az64	  ,num_new_rows BIGINT NOT NULL  ENCODE az64	  ,num_blocks_replaced BIGINT NOT NULL  ENCODE az64	  ,total_block_io_estimate BIGINT NOT NULL  ENCODE az64	  ,window_num INTEGER NOT NULL  ENCODE az64	  ,num_deleted_rows BIGINT NOT NULL  ENCODE az64	  ,compact INTEGER NOT NULL  ENCODE az64	  ,num_new_blocks BIGINT NOT NULL  ENCODE az64	  ,empty_space_size BIGINT NOT NULL  ENCODE az64	  ,table_partition_number INTEGER NOT NULL  ENCODE az64	  ,local_to_total_ratio DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,local_block_count BIGINT NOT NULL  ENCODE az64	  ,insufficient_local_blk_cnt INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_vacuum_detail owner to rdsdb;--DROP TABLE pg_catalog.stcs_vacuum_history;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_vacuum_history(	table_id INTEGER NOT NULL  ENCODE az64	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,num_partitions INTEGER NOT NULL  ENCODE az64	  ,event CHAR(20) NOT NULL  ENCODE lzo	  ,"trigger" CHAR(128) NOT NULL  ENCODE lzo	  ,slice INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_vacuum_history owner to rdsdb;--DROP TABLE pg_catalog.stcs_vacuum_scan_query_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_vacuum_scan_query_usage(	eventtime BIGINT NOT NULL  ENCODE az64	  ,node BIGINT NOT NULL  ENCODE az64	  ,bucket0_10 BIGINT NOT NULL  ENCODE az64	  ,bucket10_20 BIGINT NOT NULL  ENCODE az64	  ,bucket20_30 BIGINT NOT NULL  ENCODE az64	  ,bucket30_40 BIGINT NOT NULL  ENCODE az64	  ,bucket40_50 BIGINT NOT NULL  ENCODE az64	  ,bucket50_60 BIGINT NOT NULL  ENCODE az64	  ,bucket60_70 BIGINT NOT NULL  ENCODE az64	  ,bucket70_80 BIGINT NOT NULL  ENCODE az64	  ,bucket80_90 BIGINT NOT NULL  ENCODE az64	  ,bucket90_100 BIGINT NOT NULL  ENCODE az64	  ,no_loss_query_count BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_vacuum_scan_query_usage owner to rdsdb;--DROP TABLE pg_catalog.stcs_vec_scan_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_vec_scan_stats(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,scalar_encoding_type INTEGER NOT NULL  ENCODE az64	  ,predicate_window_size INTEGER NOT NULL  ENCODE az64	  ,payload_window_size INTEGER NOT NULL  ENCODE az64	  ,compact_col_count INTEGER NOT NULL  ENCODE az64	  ,is_operator_pushdown CHAR(1) NOT NULL  ENCODE lzo	  ,apply_xid_time BIGINT NOT NULL  ENCODE az64	  ,apply_predicate_time BIGINT NOT NULL  ENCODE az64	  ,extract_predicate_time BIGINT NOT NULL  ENCODE az64	  ,extract_payload_time BIGINT NOT NULL  ENCODE az64	  ,compact_predicate_time BIGINT NOT NULL  ENCODE az64	  ,compact_payload_time BIGINT NOT NULL  ENCODE az64	  ,scalar_predicate_time BIGINT NOT NULL  ENCODE az64	  ,consume_time BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_vec_scan_stats owner to rdsdb;--DROP TABLE pg_catalog.stcs_version;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_version(	bootstrap_time BIGINT NOT NULL  ENCODE az64	  ,db_version CHAR(50) NOT NULL  ENCODE lzo	  ,restart_reason CHAR(100) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_version owner to rdsdb;--DROP TABLE pg_catalog.stcs_volt_tt_sizes;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_volt_tt_sizes(	table_id INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,num_blocks INTEGER NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_volt_tt_sizes owner to rdsdb;--DROP TABLE pg_catalog.stcs_vpid;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_vpid(	vpid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,processname CHAR(200) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_vpid owner to rdsdb;--DROP TABLE pg_catalog.stcs_warning;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_warning(	userid INTEGER NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,"file" CHAR(20) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,bug_desc CHAR(512) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_warning owner to rdsdb;--DROP TABLE pg_catalog.stcs_window;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_window(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,endtime BIGINT NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_window owner to rdsdb;--DROP TABLE pg_catalog.stcs_wlm_auto_concurrency;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_wlm_auto_concurrency(	now BIGINT NOT NULL  ENCODE az64	  ,heavy_slots INTEGER NOT NULL  ENCODE az64	  ,light_slots INTEGER NOT NULL  ENCODE az64	  ,heavy_util DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,light_util DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,utilization_state CHAR(6) NOT NULL  ENCODE lzo	  ,new_light_slots INTEGER NOT NULL  ENCODE az64	  ,window_time_sec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,heavy_queries_finished INTEGER NOT NULL  ENCODE az64	  ,heavy_queries_exec_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,heavy_queries_queue_time_sec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,light_queries_finished INTEGER NOT NULL  ENCODE az64	  ,light_queries_exec_time_sec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,light_queries_queue_time_sec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,spilling_queries INTEGER NOT NULL  ENCODE az64	  ,spilled_blocks BIGINT NOT NULL  ENCODE az64	  ,light_queries_queued INTEGER NOT NULL  ENCODE az64	  ,heavy_queries_queued INTEGER NOT NULL  ENCODE az64	  ,avg_exec_time_heavy_sec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,p90_exec_time_heavy_sec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_wlm_auto_concurrency owner to rdsdb;--DROP TABLE pg_catalog.stcs_wlm_error;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_wlm_error(	userid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,error_string CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_wlm_error owner to rdsdb;--DROP TABLE pg_catalog.stcs_wlm_query;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_wlm_query(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,task INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,service_class INTEGER NOT NULL  ENCODE az64	  ,slot_count INTEGER NOT NULL  ENCODE az64	  ,service_class_start_time BIGINT NOT NULL  ENCODE az64	  ,queue_start_time BIGINT NOT NULL  ENCODE az64	  ,queue_end_time BIGINT NOT NULL  ENCODE az64	  ,total_queue_time BIGINT NOT NULL  ENCODE az64	  ,exec_start_time BIGINT NOT NULL  ENCODE az64	  ,exec_end_time BIGINT NOT NULL  ENCODE az64	  ,total_exec_time BIGINT NOT NULL  ENCODE az64	  ,service_class_end_time BIGINT NOT NULL  ENCODE az64	  ,final_state CHAR(16) NOT NULL  ENCODE lzo	  ,est_peak_mem BIGINT NOT NULL  ENCODE az64	  ,query_priority CHAR(20) NOT NULL  ENCODE lzo	  ,service_class_name CHAR(64) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_wlm_query owner to rdsdb;--DROP TABLE pg_catalog.stcs_wlm_query_preemption;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_wlm_query_preemption(	eventtime BIGINT NOT NULL  ENCODE az64	  ,service_class_preempting INTEGER NOT NULL  ENCODE az64	  ,service_class_name_preempting CHAR(64) NOT NULL  ENCODE lzo	  ,query_preempting INTEGER NOT NULL  ENCODE az64	  ,query_priority_preempting CHAR(20) NOT NULL  ENCODE lzo	  ,service_class_preempted INTEGER NOT NULL  ENCODE az64	  ,service_class_name_preempted CHAR(64) NOT NULL  ENCODE lzo	  ,query_preempted INTEGER NOT NULL  ENCODE az64	  ,query_priority_preempted CHAR(20) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_wlm_query_preemption owner to rdsdb;--DROP TABLE pg_catalog.stcs_wlm_rule_action;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_wlm_rule_action(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,service_class INTEGER NOT NULL  ENCODE az64	  ,"rule" CHAR(256) NOT NULL  ENCODE lzo	  ,"action" CHAR(256) NOT NULL  ENCODE lzo	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,action_value CHAR(256) NOT NULL  ENCODE lzo	  ,service_class_name CHAR(64) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_wlm_rule_action owner to rdsdb;--DROP TABLE pg_catalog.stcs_wlm_service_class_config;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_wlm_service_class_config(	service_class INTEGER NOT NULL  ENCODE az64	  ,queueing_strategy CHAR(32) NOT NULL  ENCODE lzo	  ,num_query_tasks INTEGER NOT NULL  ENCODE az64	  ,target_num_query_tasks INTEGER NOT NULL  ENCODE az64	  ,evictable CHAR(8) NOT NULL  ENCODE lzo	  ,eviction_threshold BIGINT NOT NULL  ENCODE az64	  ,query_working_mem INTEGER NOT NULL  ENCODE az64	  ,target_query_working_mem INTEGER NOT NULL  ENCODE az64	  ,min_step_mem INTEGER NOT NULL  ENCODE az64	  ,name CHAR(64) NOT NULL  ENCODE lzo	  ,max_execution_time INTEGER NOT NULL  ENCODE az64	  ,user_group_wild_card CHAR(8) NOT NULL  ENCODE lzo	  ,query_group_wild_card CHAR(8) NOT NULL  ENCODE lzo	  ,concurrency_scaling CHAR(20) NOT NULL  ENCODE lzo	  ,query_priority CHAR(20) NOT NULL  ENCODE lzo	  ,eventtime BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_wlm_service_class_config owner to rdsdb;--DROP TABLE pg_catalog.stcs_wlm_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_wlm_trace(	userid INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,component CHAR(64) NOT NULL  ENCODE lzo	  ,event CHAR(128) NOT NULL  ENCODE lzo	  ,detail CHAR(256) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_wlm_trace owner to rdsdb;--DROP TABLE pg_catalog.stcs_wlm_trace_query_state;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_wlm_trace_query_state(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,task INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,service_class INTEGER NOT NULL  ENCODE az64	  ,recordtime BIGINT NOT NULL  ENCODE az64	  ,old_state CHAR(16) NOT NULL  ENCODE lzo	  ,new_state CHAR(16) NOT NULL  ENCODE lzo	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_wlm_trace_query_state owner to rdsdb;--DROP TABLE pg_catalog.stcs_xid_consumption_rate;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_xid_consumption_rate(	"time" BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,num_xids_consumed BIGINT NOT NULL  ENCODE az64	  ,starting_xid BIGINT NOT NULL  ENCODE az64	  ,ending_xid BIGINT NOT NULL  ENCODE az64	  ,"interval" BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_xid_consumption_rate owner to rdsdb;--DROP TABLE pg_catalog.stcs_xrestore;CREATE TABLE IF NOT EXISTS pg_catalog.stcs_xrestore(	backup_id CHAR(256) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,catalog_download_start_time BIGINT NOT NULL  ENCODE az64	  ,catalog_download_end_time BIGINT NOT NULL  ENCODE az64	  ,slice_transfer_start_time BIGINT NOT NULL  ENCODE az64	  ,slice_transfer_end_time BIGINT NOT NULL  ENCODE az64	  ,__path VARCHAR(2050) NOT NULL  ENCODE lzo	  ,__size BIGINT NOT NULL  ENCODE az64	  ,__log_generated_date CHAR(8) NOT NULL  ENCODE lzo	  ,__cluster_type CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stcs_xrestore owner to rdsdb;--DROP TABLE pg_catalog.stll_abort_idle;CREATE TABLE IF NOT EXISTS pg_catalog.stll_abort_idle(	xid BIGINT NOT NULL  ENCODE az64	  ,idle_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,idle_check_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,txn_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_abort_idle owner to rdsdb;--DROP TABLE pg_catalog.stll_aggr;CREATE TABLE IF NOT EXISTS pg_catalog.stll_aggr(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,slots INTEGER NOT NULL  ENCODE az64	  ,occupied INTEGER NOT NULL  ENCODE az64	  ,maxlength INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,"type" CHAR(6) NOT NULL  ENCODE lzo	  ,resizes INTEGER NOT NULL  ENCODE az64	  ,flushable INTEGER NOT NULL  ENCODE az64	  ,varchar_agg_opt CHAR(1) NOT NULL  ENCODE lzo	  ,varagg_opt_bitmap BIGINT NOT NULL  ENCODE az64	  ,used_agg_prefetching CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_aggr owner to rdsdb;--DROP TABLE pg_catalog.stll_aggr_distinct;CREATE TABLE IF NOT EXISTS pg_catalog.stll_aggr_distinct(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,slots INTEGER NOT NULL  ENCODE az64	  ,occupied INTEGER NOT NULL  ENCODE az64	  ,maxlength INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,resizes INTEGER NOT NULL  ENCODE az64	  ,flushable INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_aggr_distinct owner to rdsdb;--DROP TABLE pg_catalog.stll_alert_event_log;CREATE TABLE IF NOT EXISTS pg_catalog.stll_alert_event_log(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,event CHAR(1024) NOT NULL  ENCODE lzo	  ,solution CHAR(200) NOT NULL  ENCODE lzo	  ,event_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_alert_event_log owner to rdsdb;--DROP TABLE pg_catalog.stll_alert_messages;CREATE TABLE IF NOT EXISTS pg_catalog.stll_alert_messages(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,error CHAR(512) NOT NULL  ENCODE lzo	  ,code INTEGER NOT NULL  ENCODE az64	  ,context CHAR(512) NOT NULL  ENCODE lzo	  ,query INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(512) NOT NULL  ENCODE lzo	  ,linenumber INTEGER NOT NULL  ENCODE az64	  ,process CHAR(64) NOT NULL  ENCODE lzo	  ,padb CHAR(32) NOT NULL  ENCODE lzo	  ,tracefile CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_alert_messages owner to rdsdb;--DROP TABLE pg_catalog.stll_alter_column_encode_events;CREATE TABLE IF NOT EXISTS pg_catalog.stll_alter_column_encode_events(	userid INTEGER NOT NULL  ENCODE az64	  ,vpid INTEGER NOT NULL  ENCODE az64	  ,logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,command_phase CHAR(40) NOT NULL  ENCODE lzo	  ,tbl_id INTEGER NOT NULL  ENCODE az64	  ,tbl_name CHAR(128) NOT NULL  ENCODE lzo	  ,col_id INTEGER NOT NULL  ENCODE az64	  ,col_name CHAR(128) NOT NULL  ENCODE lzo	  ,shadow_col_id INTEGER NOT NULL  ENCODE az64	  ,src_encode INTEGER NOT NULL  ENCODE az64	  ,tgt_encode INTEGER NOT NULL  ENCODE az64	  ,scan_rows BIGINT NOT NULL  ENCODE az64	  ,num_tgt_cols INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_alter_column_encode_events owner to rdsdb;--DROP TABLE pg_catalog.stll_alter_column_events;CREATE TABLE IF NOT EXISTS pg_catalog.stll_alter_column_events(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,command_type CHAR(30) NOT NULL  ENCODE lzo	  ,tbl_id INTEGER NOT NULL  ENCODE az64	  ,tbl_name CHAR(128) NOT NULL  ENCODE lzo	  ,col_id INTEGER NOT NULL  ENCODE az64	  ,col_name CHAR(128) NOT NULL  ENCODE lzo	  ,src_type INTEGER NOT NULL  ENCODE az64	  ,src_typemod INTEGER NOT NULL  ENCODE az64	  ,tgt_type INTEGER NOT NULL  ENCODE az64	  ,tgt_typemod INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_alter_column_events owner to rdsdb;--DROP TABLE pg_catalog.stll_alter_dist_sort;CREATE TABLE IF NOT EXISTS pg_catalog.stll_alter_dist_sort(	xid BIGINT NOT NULL  ENCODE az64	  ,cutoff_xid BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,event CHAR(128) NOT NULL  ENCODE lzo	  ,src_rows BIGINT NOT NULL  ENCODE az64	  ,dest_rows BIGINT NOT NULL  ENCODE az64	  ,redo_delete_rows BIGINT NOT NULL  ENCODE az64	  ,undone_rows BIGINT NOT NULL  ENCODE az64	  ,undone_txns BIGINT NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,origin_dist_style INTEGER NOT NULL  ENCODE az64	  ,num_sort_keys INTEGER NOT NULL  ENCODE az64	  ,target_distkey INTEGER NOT NULL  ENCODE az64	  ,request_sort INTEGER NOT NULL  ENCODE az64	  ,num_sort_iterations INTEGER NOT NULL  ENCODE az64	  ,dst_sorted_rows BIGINT NOT NULL  ENCODE az64	  ,is_autoworker_altered INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_alter_dist_sort owner to rdsdb;--DROP TABLE pg_catalog.stll_alter_sortkey_events;CREATE TABLE IF NOT EXISTS pg_catalog.stll_alter_sortkey_events(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tbl_id INTEGER NOT NULL  ENCODE az64	  ,is_original_sortkey INTEGER NOT NULL  ENCODE az64	  ,num_sortkeys INTEGER NOT NULL  ENCODE az64	  ,sortkey_text CHAR(2048) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_alter_sortkey_events owner to rdsdb;--DROP TABLE pg_catalog.stll_analyze;CREATE TABLE IF NOT EXISTS pg_catalog.stll_analyze(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,"database" CHAR(30) NOT NULL  ENCODE lzo	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,status CHAR(15) NOT NULL  ENCODE lzo	  ,"rows" DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,modified_rows DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,threshold_percent DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,is_auto CHAR(1) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,prevtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_predicate_cols INTEGER NOT NULL  ENCODE az64	  ,num_new_predicate_cols INTEGER NOT NULL  ENCODE az64	  ,is_background CHAR(1) NOT NULL  ENCODE lzo	  ,auto_analyze_phase CHAR(100) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_analyze owner to rdsdb;--DROP TABLE pg_catalog.stll_analyze_compression;CREATE TABLE IF NOT EXISTS pg_catalog.stll_analyze_compression(	userid INTEGER NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,tablename CHAR(128) NOT NULL  ENCODE lzo	  ,col INTEGER NOT NULL  ENCODE az64	  ,old_encoding CHAR(15) NOT NULL  ENCODE lzo	  ,new_encoding CHAR(15) NOT NULL  ENCODE lzo	  ,"mode" CHAR(14) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_analyze_compression owner to rdsdb;--DROP TABLE pg_catalog.stll_aqua_pushdown;CREATE TABLE IF NOT EXISTS pg_catalog.stll_aqua_pushdown(	query INTEGER NOT NULL  ENCODE az64	  ,object_type CHAR(74) NOT NULL  ENCODE lzo	  ,oid INTEGER NOT NULL  ENCODE az64	  ,argument_type CHAR(256) NOT NULL  ENCODE lzo	  ,return_type CHAR(16) NOT NULL  ENCODE lzo	  ,is_supported CHAR(1) NOT NULL  ENCODE lzo	  ,reason_not_supported CHAR(30) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_aqua_pushdown owner to rdsdb;--DROP TABLE pg_catalog.stll_aqua_requests;CREATE TABLE IF NOT EXISTS pg_catalog.stll_aqua_requests(	query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,aqua_shard_id CHAR(10) NOT NULL  ENCODE lzo	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,duration BIGINT NOT NULL  ENCODE az64	  ,aqua_table_arn CHAR(100) NOT NULL  ENCODE lzo	  ,aqua_endpoint CHAR(85) NOT NULL  ENCODE lzo	  ,failed INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(16) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_aqua_requests owner to rdsdb;--DROP TABLE pg_catalog.stll_auto_alter_worker_event;CREATE TABLE IF NOT EXISTS pg_catalog.stll_auto_alter_worker_event(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,recommend INTEGER NOT NULL  ENCODE az64	  ,status CHAR(128) NOT NULL  ENCODE lzo	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,retry_count INTEGER NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,previous_state CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_auto_alter_worker_event owner to rdsdb;--DROP TABLE pg_catalog.stll_auto_dispatcher_wlm_occupancy;CREATE TABLE IF NOT EXISTS pg_catalog.stll_auto_dispatcher_wlm_occupancy(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,wlm_occupancy_percent DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,autovacuum_pid INTEGER NOT NULL  ENCODE az64	  ,autoanalyze_pid INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_auto_dispatcher_wlm_occupancy owner to rdsdb;--DROP TABLE pg_catalog.stll_auto_maintenance;CREATE TABLE IF NOT EXISTS pg_catalog.stll_auto_maintenance(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,eventtext CHAR(128) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_auto_maintenance owner to rdsdb;--DROP TABLE pg_catalog.stll_auto_maintenance_worker;CREATE TABLE IF NOT EXISTS pg_catalog.stll_auto_maintenance_worker(	userid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"mode" CHAR(15) NOT NULL  ENCODE lzo	  ,db_id INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pause_count INTEGER NOT NULL  ENCODE az64	  ,tables_skipped INTEGER NOT NULL  ENCODE az64	  ,status CHAR(16) NOT NULL  ENCODE lzo	  ,error_message CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_auto_maintenance_worker owner to rdsdb;--DROP TABLE pg_catalog.stll_auto_worker_levels;CREATE TABLE IF NOT EXISTS pg_catalog.stll_auto_worker_levels(	pid INTEGER NOT NULL  ENCODE az64	  ,start_level DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,end_level DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,start_wlm_occupancy DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,end_wlm_occupancy DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,num_windows INTEGER NOT NULL  ENCODE az64	  ,since TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,status CHAR(16) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_auto_worker_levels owner to rdsdb;--DROP TABLE pg_catalog.stll_autovacuum_detail;CREATE TABLE IF NOT EXISTS pg_catalog.stll_autovacuum_detail(	pid INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,window_time INTEGER NOT NULL  ENCODE az64	  ,pause_time INTEGER NOT NULL  ENCODE az64	  ,commit_time INTEGER NOT NULL  ENCODE az64	  ,max_commit_time INTEGER NOT NULL  ENCODE az64	  ,min_commit_time INTEGER NOT NULL  ENCODE az64	  ,num_commits INTEGER NOT NULL  ENCODE az64	  ,tables_skipped INTEGER NOT NULL  ENCODE az64	  ,tables_done INTEGER NOT NULL  ENCODE az64	  ,num_vacdel INTEGER NOT NULL  ENCODE az64	  ,num_vacrp INTEGER NOT NULL  ENCODE az64	  ,num_vacsort INTEGER NOT NULL  ENCODE az64	  ,space_reclaimed_mb INTEGER NOT NULL  ENCODE az64	  ,skip_time INTEGER NOT NULL  ENCODE az64	  ,fetch_info_time INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_autovacuum_detail owner to rdsdb;--DROP TABLE pg_catalog.stll_autovacuum_skip_reason;CREATE TABLE IF NOT EXISTS pg_catalog.stll_autovacuum_skip_reason(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,"diststyle" INTEGER NOT NULL  ENCODE az64	  ,vacuum_mode CHAR(16) NOT NULL  ENCODE lzo	  ,num_columns INTEGER NOT NULL  ENCODE az64	  ,num_rows BIGINT NOT NULL  ENCODE az64	  ,reason CHAR(48) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_autovacuum_skip_reason owner to rdsdb;--DROP TABLE pg_catalog.stll_awsclient_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_awsclient_error(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,http_method CHAR(64) NOT NULL  ENCODE lzo	  ,endpoint CHAR(128) NOT NULL  ENCODE lzo	  ,error CHAR(1024) NOT NULL  ENCODE lzo	  ,amzn_request_id CHAR(36) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_awsclient_error owner to rdsdb;--DROP TABLE pg_catalog.stll_background_monitor;CREATE TABLE IF NOT EXISTS pg_catalog.stll_background_monitor(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,status CHAR(100) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_background_monitor owner to rdsdb;--DROP TABLE pg_catalog.stll_backtrace;CREATE TABLE IF NOT EXISTS pg_catalog.stll_backtrace(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,since TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,name CHAR(80) NOT NULL  ENCODE lzo	  ,count INTEGER NOT NULL  ENCODE az64	  ,hex_addresses CHAR(128) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_backtrace owner to rdsdb;--DROP TABLE pg_catalog.stll_backup;CREATE TABLE IF NOT EXISTS pg_catalog.stll_backup(	db_name CHAR(50) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,repository_name CHAR(32) NOT NULL  ENCODE lzo	  ,backup_name CHAR(256) NOT NULL  ENCODE lzo	  ,backup_type CHAR(12) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,succeeded INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_backup owner to rdsdb;--DROP TABLE pg_catalog.stll_backup_compute;CREATE TABLE IF NOT EXISTS pg_catalog.stll_backup_compute(	currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node_num INTEGER NOT NULL  ENCODE az64	  ,state CHAR(256) NOT NULL  ENCODE lzo	  ,backup_id CHAR(256) NOT NULL  ENCODE lzo	  ,sb_version BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_blocks BIGINT NOT NULL  ENCODE az64	  ,superblock_size BIGINT NOT NULL  ENCODE az64	  ,permanent_blocks BIGINT NOT NULL  ENCODE az64	  ,blocks_to_upload BIGINT NOT NULL  ENCODE az64	  ,blocks_uploaded BIGINT NOT NULL  ENCODE az64	  ,num_failures BIGINT NOT NULL  ENCODE az64	  ,num_modified_superblock_segments BIGINT NOT NULL  ENCODE az64	  ,total_num_superblock_segments BIGINT NOT NULL  ENCODE az64	  ,time_spent_stage1 BIGINT NOT NULL  ENCODE az64	  ,time_spent_read_sb_header BIGINT NOT NULL  ENCODE az64	  ,time_spent_copy_segments BIGINT NOT NULL  ENCODE az64	  ,time_spent_stage2 BIGINT NOT NULL  ENCODE az64	  ,time_spent_set_in_s3_bits BIGINT NOT NULL  ENCODE az64	  ,inc_no_backup BIGINT NOT NULL  ENCODE az64	  ,nobackup_blocks BIGINT NOT NULL  ENCODE az64	  ,distall_blocks BIGINT NOT NULL  ENCODE az64	  ,non_distall_blocks BIGINT NOT NULL  ENCODE az64	  ,perm_blocks_in_s3 BIGINT NOT NULL  ENCODE az64	  ,metadata_read_from_backup INTEGER NOT NULL  ENCODE az64	  ,blocks_validated BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_backup_compute owner to rdsdb;--DROP TABLE pg_catalog.stll_backup_leader;CREATE TABLE IF NOT EXISTS pg_catalog.stll_backup_leader(	currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,backup_id CHAR(256) NOT NULL  ENCODE lzo	  ,sb_version BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,in_progress INTEGER NOT NULL  ENCODE az64	  ,error_code INTEGER NOT NULL  ENCODE az64	  ,error_msg CHAR(256) NOT NULL  ENCODE lzo	  ,enc_key_hash_base64 CHAR(44) NOT NULL  ENCODE lzo	  ,tlr_metadata_successful INTEGER NOT NULL  ENCODE az64	  ,tlr_metadata_time BIGINT NOT NULL  ENCODE az64	  ,tlr_metadata_error_msg CHAR(256) NOT NULL  ENCODE lzo	  ,"partial" INTEGER NOT NULL  ENCODE az64	  ,backup_superblock_format INTEGER NOT NULL  ENCODE az64	  ,time_wait_commit_lock BIGINT NOT NULL  ENCODE az64	  ,time_hold_commit_lock BIGINT NOT NULL  ENCODE az64	  ,time_spent_commit_transaction BIGINT NOT NULL  ENCODE az64	  ,inc_no_backup BIGINT NOT NULL  ENCODE az64	  ,sb_version_stage3 BIGINT NOT NULL  ENCODE az64	  ,backup_superblock_method INTEGER NOT NULL  ENCODE az64	  ,num_tables INTEGER NOT NULL  ENCODE az64	  ,inc_resize_lock_optional INTEGER NOT NULL  ENCODE az64	  ,inc_resize_lock_mandatory INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_backup_leader owner to rdsdb;--DROP TABLE pg_catalog.stll_bcast;CREATE TABLE IF NOT EXISTS pg_catalog.stll_bcast(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,packets INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_bcast owner to rdsdb;--DROP TABLE pg_catalog.stll_bkg_compile_info;CREATE TABLE IF NOT EXISTS pg_catalog.stll_bkg_compile_info(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,locus INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,"path" CHAR(255) NOT NULL  ENCODE lzo	  ,compile INTEGER NOT NULL  ENCODE az64	  ,complevel INTEGER NOT NULL  ENCODE az64	  ,cachehit INTEGER NOT NULL  ENCODE az64	  ,tokwaittime BIGINT NOT NULL  ENCODE az64	  ,compilestarttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,compileendtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,compilelocktime BIGINT NOT NULL  ENCODE az64	  ,compilememory BIGINT NOT NULL  ENCODE az64	  ,putsuccess INTEGER NOT NULL  ENCODE az64	  ,getsuccess INTEGER NOT NULL  ENCODE az64	  ,puttime BIGINT NOT NULL  ENCODE az64	  ,gettime BIGINT NOT NULL  ENCODE az64	  ,objsize BIGINT NOT NULL  ENCODE az64	  ,skip_opt_compile INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_bkg_compile_info owner to rdsdb;--DROP TABLE pg_catalog.stll_blf_efficiency;CREATE TABLE IF NOT EXISTS pg_catalog.stll_blf_efficiency(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,local_data_slice INTEGER NOT NULL  ENCODE az64	  ,scanned_blocks BIGINT NOT NULL  ENCODE az64	  ,total_blocks BIGINT NOT NULL  ENCODE az64	  ,local_compute_slice INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_blf_efficiency owner to rdsdb;--DROP TABLE pg_catalog.stll_block_access_errors;CREATE TABLE IF NOT EXISTS pg_catalog.stll_block_access_errors(	node INTEGER NOT NULL  ENCODE az64	  ,logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,blkid CHAR(64) NOT NULL  ENCODE lzo	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,blknum BIGINT NOT NULL  ENCODE az64	  ,num_values INTEGER NOT NULL  ENCODE az64	  ,flags INTEGER NOT NULL  ENCODE az64	  ,reps INTEGER NOT NULL  ENCODE az64	  ,s3_state CHAR(32) NOT NULL  ENCODE lzo	  ,rep_strings CHAR(256) NOT NULL  ENCODE lzo	  ,"file" CHAR(90) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_block_access_errors owner to rdsdb;--DROP TABLE pg_catalog.stll_block_integrity_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_block_integrity_error(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,id CHAR(64) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,disk_addr BIGINT NOT NULL  ENCODE az64	  ,raw_disk_addr BIGINT NOT NULL  ENCODE az64	  ,tbl BIGINT NOT NULL  ENCODE az64	  ,col BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,remaining_reps INTEGER NOT NULL  ENCODE az64	  ,computed_crc INTEGER NOT NULL  ENCODE az64	  ,computed_crc_with_pincount INTEGER NOT NULL  ENCODE az64	  ,expected_crc INTEGER NOT NULL  ENCODE az64	  ,data_block_sb_pos INTEGER NOT NULL  ENCODE az64	  ,data_block_guid CHAR(64) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_block_integrity_error owner to rdsdb;--DROP TABLE pg_catalog.stll_block_io_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stll_block_io_metrics(	node INTEGER NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,fetch_in_memory_blocks BIGINT NOT NULL  ENCODE az64	  ,fetch_pending_io_blocks BIGINT NOT NULL  ENCODE az64	  ,fetch_primary_blocks BIGINT NOT NULL  ENCODE az64	  ,fetch_mirror_blocks BIGINT NOT NULL  ENCODE az64	  ,fetch_s3_blocks BIGINT NOT NULL  ENCODE az64	  ,primary_read_latency BIGINT NOT NULL  ENCODE az64	  ,mirror_read_latency BIGINT NOT NULL  ENCODE az64	  ,s3_read_latency BIGINT NOT NULL  ENCODE az64	  ,primary_write_latency BIGINT NOT NULL  ENCODE az64	  ,mirror_write_latency BIGINT NOT NULL  ENCODE az64	  ,rehydration_in_progress INTEGER NOT NULL  ENCODE az64	  ,block_rehydrated BIGINT NOT NULL  ENCODE az64	  ,block_need_rehydration BIGINT NOT NULL  ENCODE az64	  ,total_allocated_blocks BIGINT NOT NULL  ENCODE az64	  ,prefetch_primary_blocks BIGINT NOT NULL  ENCODE az64	  ,prefetch_mirror_blocks BIGINT NOT NULL  ENCODE az64	  ,prefetch_s3_blocks BIGINT NOT NULL  ENCODE az64	  ,s3_write_tagged_latency BIGINT NOT NULL  ENCODE az64	  ,s3_write_untagged_latency BIGINT NOT NULL  ENCODE az64	  ,s3_write_add_tag_latency BIGINT NOT NULL  ENCODE az64	  ,s3_write_delete_tag_latency BIGINT NOT NULL  ENCODE az64	  ,num_tagged_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_untagged_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_add_tags_issued_to_s3 BIGINT NOT NULL  ENCODE az64	  ,num_delete_tags_issued_to_s3 BIGINT NOT NULL  ENCODE az64	  ,num_tagged_temp_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_tagged_perm_spillover_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_untagged_perm_spillover_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_metadata_s3_writes BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_block_io_metrics owner to rdsdb;--DROP TABLE pg_catalog.stll_block_pins;CREATE TABLE IF NOT EXISTS pg_catalog.stll_block_pins(	logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_block_pins owner to rdsdb;--DROP TABLE pg_catalog.stll_block_priority_based_rereplication;CREATE TABLE IF NOT EXISTS pg_catalog.stll_block_priority_based_rereplication(	logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,seqnum BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64	  ,backed_up INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,state INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_block_priority_based_rereplication owner to rdsdb;--DROP TABLE pg_catalog.stll_blocklist;CREATE TABLE IF NOT EXISTS pg_catalog.stll_blocklist(	logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64	  ,num_values INTEGER NOT NULL  ENCODE az64	  ,extended_limits INTEGER NOT NULL  ENCODE az64	  ,"minvalue" BIGINT NOT NULL  ENCODE az64	  ,"maxvalue" BIGINT NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,"pinned" INTEGER NOT NULL  ENCODE az64	  ,on_disk INTEGER NOT NULL  ENCODE az64	  ,backed_up INTEGER NOT NULL  ENCODE az64	  ,modified INTEGER NOT NULL  ENCODE az64	  ,hdr_modified INTEGER NOT NULL  ENCODE az64	  ,unsorted INTEGER NOT NULL  ENCODE az64	  ,tombstone INTEGER NOT NULL  ENCODE az64	  ,preferred_diskno INTEGER NOT NULL  ENCODE az64	  ,"temporary" INTEGER NOT NULL  ENCODE az64	  ,newblock INTEGER NOT NULL  ENCODE az64	  ,num_readers INTEGER NOT NULL  ENCODE az64	  ,id CHAR(64) NOT NULL  ENCODE lzo	  ,flags INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_blocklist owner to rdsdb;--DROP TABLE pg_catalog.stll_bootstrap;CREATE TABLE IF NOT EXISTS pg_catalog.stll_bootstrap(	starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"file" CHAR(20) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,msg CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_bootstrap owner to rdsdb;--DROP TABLE pg_catalog.stll_burst_connection;CREATE TABLE IF NOT EXISTS pg_catalog.stll_burst_connection(	"action" CHAR(20) NOT NULL  ENCODE lzo	  ,method CHAR(50) NOT NULL  ENCODE lzo	  ,pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,cluster_arn CHAR(100) NOT NULL  ENCODE lzo	  ,connection_guid CHAR(100) NOT NULL  ENCODE lzo	  ,error CHAR(250) NOT NULL  ENCODE lzo	  ,switch_status CHAR(20) NOT NULL  ENCODE lzo	  ,switch_time INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_burst_connection owner to rdsdb;--DROP TABLE pg_catalog.stll_burst_manager_personalization;CREATE TABLE IF NOT EXISTS pg_catalog.stll_burst_manager_personalization(	userid INTEGER NOT NULL  ENCODE az64	  ,pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,cluster_arn CHAR(120) NOT NULL  ENCODE lzo	  ,backup_id CHAR(100) NOT NULL  ENCODE lzo	  ,backup_prefix CHAR(100) NOT NULL  ENCODE lzo	  ,backup_midfix CHAR(100) NOT NULL  ENCODE lzo	  ,creds_access_key CHAR(100) NOT NULL  ENCODE lzo	  ,creds_secret_key CHAR(100) NOT NULL  ENCODE lzo	  ,creds_session_token CHAR(100) NOT NULL  ENCODE lzo	  ,creds_expiration TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,cluster_id CHAR(38) NOT NULL  ENCODE lzo	  ,cluster_name CHAR(70) NOT NULL  ENCODE lzo	  ,error CHAR(250) NOT NULL  ENCODE lzo	  ,account_id CHAR(38) NOT NULL  ENCODE lzo	  ,query INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_burst_manager_personalization owner to rdsdb;--DROP TABLE pg_catalog.stll_burst_manager_refresh;CREATE TABLE IF NOT EXISTS pg_catalog.stll_burst_manager_refresh(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"action" CHAR(50) NOT NULL  ENCODE lzo	  ,"type" CHAR(20) NOT NULL  ENCODE lzo	  ,pid BIGINT NOT NULL  ENCODE az64	  ,refresh_version BIGINT NOT NULL  ENCODE az64	  ,cluster_arn CHAR(100) NOT NULL  ENCODE lzo	  ,error CHAR(350) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_burst_manager_refresh owner to rdsdb;--DROP TABLE pg_catalog.stll_burst_prepare;CREATE TABLE IF NOT EXISTS pg_catalog.stll_burst_prepare(	userid INTEGER NOT NULL  ENCODE az64	  ,pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,error CHAR(250) NOT NULL  ENCODE lzo	  ,query INTEGER NOT NULL  ENCODE az64	  ,code INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_burst_prepare owner to rdsdb;--DROP TABLE pg_catalog.stll_burst_query_execution;CREATE TABLE IF NOT EXISTS pg_catalog.stll_burst_query_execution(	"action" CHAR(20) NOT NULL  ENCODE lzo	  ,userid INTEGER NOT NULL  ENCODE az64	  ,pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,backup_id CHAR(30) NOT NULL  ENCODE lzo	  ,cluster_backup_version BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,cluster_arn CHAR(100) NOT NULL  ENCODE lzo	  ,max_vis_xid BIGINT NOT NULL  ENCODE az64	  ,query_sb_version BIGINT NOT NULL  ENCODE az64	  ,num_tuples INTEGER NOT NULL  ENCODE az64	  ,fetch_complete INTEGER NOT NULL  ENCODE az64	  ,error CHAR(350) NOT NULL  ENCODE lzo	  ,connection_guid CHAR(100) NOT NULL  ENCODE lzo	  ,xen_error_code INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_burst_query_execution owner to rdsdb;--DROP TABLE pg_catalog.stll_burst_refresh;CREATE TABLE IF NOT EXISTS pg_catalog.stll_burst_refresh(	record_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,error_code INTEGER NOT NULL  ENCODE az64	  ,message CHAR(1024) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_burst_refresh owner to rdsdb;--DROP TABLE pg_catalog.stll_burst_service_client;CREATE TABLE IF NOT EXISTS pg_catalog.stll_burst_service_client(	"action" CHAR(10) NOT NULL  ENCODE lzo	  ,pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,cluster_arn CHAR(100) NOT NULL  ENCODE lzo	  ,expiration TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,preshared_key CHAR(100) NOT NULL  ENCODE lzo	  ,num_nodes INTEGER NOT NULL  ENCODE az64	  ,error CHAR(250) NOT NULL  ENCODE lzo	  ,request_id CHAR(100) NOT NULL  ENCODE lzo	  ,reason CHAR(40) NOT NULL  ENCODE lzo	  ,query INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_burst_service_client owner to rdsdb;--DROP TABLE pg_catalog.stll_burst_write_block_header_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stll_burst_write_block_header_trace(	xid BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,block_header_rcvd BIGINT NOT NULL  ENCODE az64	  ,rcvd_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_burst_write_block_header_trace owner to rdsdb;--DROP TABLE pg_catalog.stll_burst_write_exec;CREATE TABLE IF NOT EXISTS pg_catalog.stll_burst_write_exec(	pid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,query_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,flush_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,stream_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,stream_end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,dispatch_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,snap_in_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,snap_in_end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_burst_write_exec owner to rdsdb;--DROP TABLE pg_catalog.stll_burst_write_query_event;CREATE TABLE IF NOT EXISTS pg_catalog.stll_burst_write_query_event(	pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,event CHAR(128) NOT NULL  ENCODE lzo	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,owned_cluster CHAR(128) NOT NULL  ENCODE lzo	  ,num_dirty_cluster INTEGER NOT NULL  ENCODE az64	  ,structure_change_sb INTEGER NOT NULL  ENCODE az64	  ,undo_sb INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_burst_write_query_event owner to rdsdb;--DROP TABLE pg_catalog.stll_cache_policy_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_cache_policy_stats(	node_num INTEGER NOT NULL  ENCODE az64	  ,promote_untracked_to_cold_untouch BIGINT NOT NULL  ENCODE az64	  ,promote_cold_untouch_to_cold_touch BIGINT NOT NULL  ENCODE az64	  ,promote_cold_touch_to_hot_untouch BIGINT NOT NULL  ENCODE az64	  ,promote_hot_untouch_to_hot_touch BIGINT NOT NULL  ENCODE az64	  ,reaccess_hot_touch BIGINT NOT NULL  ENCODE az64	  ,demote_hot_touch_to_hot_untouch BIGINT NOT NULL  ENCODE az64	  ,demote_hot_untouch_to_cold_touch BIGINT NOT NULL  ENCODE az64	  ,demote_cold_touch_to_cold_untouch BIGINT NOT NULL  ENCODE az64	  ,demote_cold_untouch_to_untracked BIGINT NOT NULL  ENCODE az64	  ,cold_blocks BIGINT NOT NULL  ENCODE az64	  ,hot_blocks BIGINT NOT NULL  ENCODE az64	  ,blocks_in_cache BIGINT NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,capacity BIGINT NOT NULL  ENCODE az64	  ,write_accesses BIGINT NOT NULL  ENCODE az64	  ,rerep_writes BIGINT NOT NULL  ENCODE az64	  ,hot_touched_blocks BIGINT NOT NULL  ENCODE az64	  ,hot_untouched_blocks BIGINT NOT NULL  ENCODE az64	  ,cold_touched_blocks BIGINT NOT NULL  ENCODE az64	  ,cold_untouched_blocks BIGINT NOT NULL  ENCODE az64	  ,ghost_buffer_hits BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_cache_policy_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_catalog_bloat;CREATE TABLE IF NOT EXISTS pg_catalog.stll_catalog_bloat(	database_id INTEGER NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,pid BIGINT NOT NULL  ENCODE az64	  ,logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,num_inserts INTEGER NOT NULL  ENCODE az64	  ,num_updates INTEGER NOT NULL  ENCODE az64	  ,num_deletes INTEGER NOT NULL  ENCODE az64	  ,total_insert_size INTEGER NOT NULL  ENCODE az64	  ,total_update_size INTEGER NOT NULL  ENCODE az64	  ,total_delete_size INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_catalog_bloat owner to rdsdb;--DROP TABLE pg_catalog.stll_catalog_rebuild_info;CREATE TABLE IF NOT EXISTS pg_catalog.stll_catalog_rebuild_info(	xid BIGINT NOT NULL  ENCODE az64	  ,"database" INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(64) NOT NULL  ENCODE lzo	  ,table_oid BIGINT NOT NULL  ENCODE az64	  ,num_live_tups BIGINT NOT NULL  ENCODE az64	  ,num_dead_tups BIGINT NOT NULL  ENCODE az64	  ,total_live_tup_sz BIGINT NOT NULL  ENCODE az64	  ,total_dead_tup_sz BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tuple_storage_duration_in_msec BIGINT NOT NULL  ENCODE az64	  ,commit_lock_acq_duration_in_msec BIGINT NOT NULL  ENCODE az64	  ,rebuild_duration_in_msec BIGINT NOT NULL  ENCODE az64	  ,total_duration_in_msec BIGINT NOT NULL  ENCODE az64	  ,message CHAR(128) NOT NULL  ENCODE lzo	  ,rebuild_mode CHAR(8) NOT NULL  ENCODE lzo	  ,startup INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_catalog_rebuild_info owner to rdsdb;--DROP TABLE pg_catalog.stll_catalog_rebuild_worker;CREATE TABLE IF NOT EXISTS pg_catalog.stll_catalog_rebuild_worker(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"database" INTEGER NOT NULL  ENCODE az64	  ,total_live_tup_sz BIGINT NOT NULL  ENCODE az64	  ,total_dead_tup_sz BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_rebuilds_reqd INTEGER NOT NULL  ENCODE az64	  ,rebuild_triggered INTEGER NOT NULL  ENCODE az64	  ,last_rebuild_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,rebuild_needed_duration BIGINT NOT NULL  ENCODE az64	  ,force_lock INTEGER NOT NULL  ENCODE az64	  ,exception INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_catalog_rebuild_worker owner to rdsdb;--DROP TABLE pg_catalog.stll_catalog_scan_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stll_catalog_scan_metrics(	xid BIGINT NOT NULL  ENCODE az64	  ,"database" INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(128) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,duration_msec BIGINT NOT NULL  ENCODE az64	  ,num_live_tups BIGINT NOT NULL  ENCODE az64	  ,num_dead_tups BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_catalog_scan_metrics owner to rdsdb;--DROP TABLE pg_catalog.stll_clear_reps;CREATE TABLE IF NOT EXISTS pg_catalog.stll_clear_reps(	call_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,line_num INTEGER NOT NULL  ENCODE az64	  ,sb_pos BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_clear_reps owner to rdsdb;--DROP TABLE pg_catalog.stll_client_write_timings;CREATE TABLE IF NOT EXISTS pg_catalog.stll_client_write_timings(	node INTEGER NOT NULL  ENCODE az64	  ,instance INTEGER NOT NULL  ENCODE az64	  ,write_size BIGINT NOT NULL  ENCODE az64	  ,request_write BIGINT NOT NULL  ENCODE az64	  ,round_trip BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_client_write_timings owner to rdsdb;--DROP TABLE pg_catalog.stll_cmd_requires_top_xact;CREATE TABLE IF NOT EXISTS pg_catalog.stll_cmd_requires_top_xact(	process CHAR(32) NOT NULL  ENCODE lzo	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,name CHAR(80) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,padb_version CHAR(50) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_cmd_requires_top_xact owner to rdsdb;--DROP TABLE pg_catalog.stll_codegen;CREATE TABLE IF NOT EXISTS pg_catalog.stll_codegen(	xid BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,codegenquery INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tokwaittime BIGINT NOT NULL  ENCODE az64	  ,token_acquired INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_codegen owner to rdsdb;--DROP TABLE pg_catalog.stll_column_errors;CREATE TABLE IF NOT EXISTS pg_catalog.stll_column_errors(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,expected_table_id INTEGER NOT NULL  ENCODE az64	  ,expected_column_id INTEGER NOT NULL  ENCODE az64	  ,actual_table_id INTEGER NOT NULL  ENCODE az64	  ,actual_column_id INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_column_errors owner to rdsdb;--DROP TABLE pg_catalog.stll_column_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_column_stats(	tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,total_count BIGINT NOT NULL  ENCODE az64	  ,total_runtime BIGINT NOT NULL  ENCODE az64	  ,stale_count BIGINT NOT NULL  ENCODE az64	  ,stale_runtime BIGINT NOT NULL  ENCODE az64	  ,missing_count BIGINT NOT NULL  ENCODE az64	  ,missing_runtime BIGINT NOT NULL  ENCODE az64	  ,report_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_column_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_comm_capture;CREATE TABLE IF NOT EXISTS pg_catalog.stll_comm_capture(	host_ip CHAR(15) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,src_mac CHAR(18) NOT NULL  ENCODE lzo	  ,src_ip CHAR(15) NOT NULL  ENCODE lzo	  ,src_port INTEGER NOT NULL  ENCODE az64	  ,dst_mac CHAR(18) NOT NULL  ENCODE lzo	  ,dst_ip CHAR(15) NOT NULL  ENCODE lzo	  ,dst_port INTEGER NOT NULL  ENCODE az64	  ,ip_id INTEGER NOT NULL  ENCODE az64	  ,ip_len INTEGER NOT NULL  ENCODE az64	  ,ip_frags INTEGER NOT NULL  ENCODE az64	  ,ip_frag_offset INTEGER NOT NULL  ENCODE az64	  ,cmd_code INTEGER NOT NULL  ENCODE az64	  ,seqnum BIGINT NOT NULL  ENCODE az64	  ,channel INTEGER NOT NULL  ENCODE az64	  ,src_slice INTEGER NOT NULL  ENCODE az64	  ,dst_slice INTEGER NOT NULL  ENCODE az64	  ,len INTEGER NOT NULL  ENCODE az64	  ,is_bcast INTEGER NOT NULL  ENCODE az64	  ,ack_reply INTEGER NOT NULL  ENCODE az64	  ,ack_xon INTEGER NOT NULL  ENCODE az64	  ,sync_msg INTEGER NOT NULL  ENCODE az64	  ,fragment INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_comm_capture owner to rdsdb;--DROP TABLE pg_catalog.stll_comm_diag;CREATE TABLE IF NOT EXISTS pg_catalog.stll_comm_diag(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,is_source INTEGER NOT NULL  ENCODE az64	  ,packet_count INTEGER NOT NULL  ENCODE az64	  ,duration_ms INTEGER NOT NULL  ENCODE az64	  ,bandwidth DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,config CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_comm_diag owner to rdsdb;--DROP TABLE pg_catalog.stll_comm_diag_errors;CREATE TABLE IF NOT EXISTS pg_catalog.stll_comm_diag_errors(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,component CHAR(10) NOT NULL  ENCODE lzo	  ,node_index INTEGER NOT NULL  ENCODE az64	  ,switch_index INTEGER NOT NULL  ENCODE az64	  ,ip_addr CHAR(16) NOT NULL  ENCODE lzo	  ,diagnostic_state CHAR(32) NOT NULL  ENCODE lzo	  ,enabled_switch_vec CHAR(9) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_comm_diag_errors owner to rdsdb;--DROP TABLE pg_catalog.stll_comm_excess;CREATE TABLE IF NOT EXISTS pg_catalog.stll_comm_excess(	process CHAR(32) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,cmd_code INTEGER NOT NULL  ENCODE az64	  ,seqnum BIGINT NOT NULL  ENCODE az64	  ,channel INTEGER NOT NULL  ENCODE az64	  ,src_slice INTEGER NOT NULL  ENCODE az64	  ,dst_slice INTEGER NOT NULL  ENCODE az64	  ,len INTEGER NOT NULL  ENCODE az64	  ,is_bcast INTEGER NOT NULL  ENCODE az64	  ,ack_reply INTEGER NOT NULL  ENCODE az64	  ,ack_xon INTEGER NOT NULL  ENCODE az64	  ,sync_msg INTEGER NOT NULL  ENCODE az64	  ,fragment INTEGER NOT NULL  ENCODE az64	  ,"comment" CHAR(80) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_comm_excess owner to rdsdb;--DROP TABLE pg_catalog.stll_comm_integrity_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_comm_integrity_error(	process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,sender_ip CHAR(16) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_comm_integrity_error owner to rdsdb;--DROP TABLE pg_catalog.stll_comm_pkt_latency;CREATE TABLE IF NOT EXISTS pg_catalog.stll_comm_pkt_latency(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,since TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,channel_type INTEGER NOT NULL  ENCODE az64	  ,src_node INTEGER NOT NULL  ENCODE az64	  ,dest_node INTEGER NOT NULL  ENCODE az64	  ,mean DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,stdev DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,min DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,"max" DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,total INTEGER NOT NULL  ENCODE az64	  ,ten_us INTEGER NOT NULL  ENCODE az64	  ,hundred_us INTEGER NOT NULL  ENCODE az64	  ,one_ms INTEGER NOT NULL  ENCODE az64	  ,ten_ms INTEGER NOT NULL  ENCODE az64	  ,hundred_ms INTEGER NOT NULL  ENCODE az64	  ,one_s INTEGER NOT NULL  ENCODE az64	  ,ten_s INTEGER NOT NULL  ENCODE az64	  ,inf INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_comm_pkt_latency owner to rdsdb;--DROP TABLE pg_catalog.stll_comm_pkt_oob_count;CREATE TABLE IF NOT EXISTS pg_catalog.stll_comm_pkt_oob_count(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,since TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,is_raidp INTEGER NOT NULL  ENCODE az64	  ,bad_guid INTEGER NOT NULL  ENCODE az64	  ,no_channel INTEGER NOT NULL  ENCODE az64	  ,bad_src INTEGER NOT NULL  ENCODE az64	  ,bad_dst INTEGER NOT NULL  ENCODE az64	  ,bad_cmd INTEGER NOT NULL  ENCODE az64	  ,bad_crc INTEGER NOT NULL  ENCODE az64	  ,excess_ack INTEGER NOT NULL  ENCODE az64	  ,low_seqnum INTEGER NOT NULL  ENCODE az64	  ,high_seqnum INTEGER NOT NULL  ENCODE az64	  ,early_xon INTEGER NOT NULL  ENCODE az64	  ,lost_packet INTEGER NOT NULL  ENCODE az64	  ,reorder_packet INTEGER NOT NULL  ENCODE az64	  ,likely_lost_ack INTEGER NOT NULL  ENCODE az64	  ,extreme_delay INTEGER NOT NULL  ENCODE az64	  ,in_rob INTEGER NOT NULL  ENCODE az64	  ,excess_fast_rexmit INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_comm_pkt_oob_count owner to rdsdb;--DROP TABLE pg_catalog.stll_comm_pkt_sent_count;CREATE TABLE IF NOT EXISTS pg_catalog.stll_comm_pkt_sent_count(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,since TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,src_node INTEGER NOT NULL  ENCODE az64	  ,dest_node INTEGER NOT NULL  ENCODE az64	  ,is_raidp INTEGER NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,rexmit INTEGER NOT NULL  ENCODE az64	  ,xon INTEGER NOT NULL  ENCODE az64	  ,reply INTEGER NOT NULL  ENCODE az64	  ,ack INTEGER NOT NULL  ENCODE az64	  ,packet INTEGER NOT NULL  ENCODE az64	  ,fast_rexmit INTEGER NOT NULL  ENCODE az64	  ,original_ack INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_comm_pkt_sent_count owner to rdsdb;--DROP TABLE pg_catalog.stll_comm_rexmit;CREATE TABLE IF NOT EXISTS pg_catalog.stll_comm_rexmit(	process CHAR(32) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,cmd_code INTEGER NOT NULL  ENCODE az64	  ,seqnum INTEGER NOT NULL  ENCODE az64	  ,channel INTEGER NOT NULL  ENCODE az64	  ,src_slice INTEGER NOT NULL  ENCODE az64	  ,dst_slice INTEGER NOT NULL  ENCODE az64	  ,len INTEGER NOT NULL  ENCODE az64	  ,is_bcast INTEGER NOT NULL  ENCODE az64	  ,ack_reply INTEGER NOT NULL  ENCODE az64	  ,ack_xon INTEGER NOT NULL  ENCODE az64	  ,sync_msg INTEGER NOT NULL  ENCODE az64	  ,fragment INTEGER NOT NULL  ENCODE az64	  ,rexmit_count INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_comm_rexmit owner to rdsdb;--DROP TABLE pg_catalog.stll_comm_rexmit_histogram;CREATE TABLE IF NOT EXISTS pg_catalog.stll_comm_rexmit_histogram(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,since TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,src_node INTEGER NOT NULL  ENCODE az64	  ,dest_node INTEGER NOT NULL  ENCODE az64	  ,mean DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,stdev DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,min DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,"max" DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,sum INTEGER NOT NULL  ENCODE az64	  ,sample_count INTEGER NOT NULL  ENCODE az64	  ,less_than_5 INTEGER NOT NULL  ENCODE az64	  ,less_than_10 INTEGER NOT NULL  ENCODE az64	  ,less_than_20 INTEGER NOT NULL  ENCODE az64	  ,less_than_100 INTEGER NOT NULL  ENCODE az64	  ,less_than_200 INTEGER NOT NULL  ENCODE az64	  ,less_than_1000 INTEGER NOT NULL  ENCODE az64	  ,less_than_10000 INTEGER NOT NULL  ENCODE az64	  ,inf INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_comm_rexmit_histogram owner to rdsdb;--DROP TABLE pg_catalog.stll_command_result;CREATE TABLE IF NOT EXISTS pg_catalog.stll_command_result(	commandtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,command CHAR(48) NOT NULL  ENCODE lzo	  ,args CHAR(512) NOT NULL  ENCODE lzo	  ,resultcode INTEGER NOT NULL  ENCODE az64	  ,errormsg CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_command_result owner to rdsdb;--DROP TABLE pg_catalog.stll_command_start;CREATE TABLE IF NOT EXISTS pg_catalog.stll_command_start(	commandtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,command CHAR(48) NOT NULL  ENCODE lzo	  ,args CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_command_start owner to rdsdb;--DROP TABLE pg_catalog.stll_commit_checkpoint;CREATE TABLE IF NOT EXISTS pg_catalog.stll_commit_checkpoint(	xid BIGINT NOT NULL  ENCODE az64	  ,start_acquire_checkpoint_lock TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,start_acquire_checkpoint_start_lock TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,start_checkpoint_work TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,start_create_control_file TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_create_control_file TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_checkpoint TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_commit_checkpoint owner to rdsdb;--DROP TABLE pg_catalog.stll_commit_internal_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_commit_internal_stats(	xid BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,prefetchesskipped BIGINT NOT NULL  ENCODE az64	  ,numreadsprocessed BIGINT NOT NULL  ENCODE az64	  ,numacksprocessed BIGINT NOT NULL  ENCODE az64	  ,tablebasedtosseligible INTEGER NOT NULL  ENCODE az64	  ,lastackwaittime DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,processtime DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,log_based INTEGER NOT NULL  ENCODE az64	  ,log_based_flags INTEGER NOT NULL  ENCODE az64	  ,index_log_regenerated INTEGER NOT NULL  ENCODE az64	  ,tables_total INTEGER NOT NULL  ENCODE az64	  ,tables_swept INTEGER NOT NULL  ENCODE az64	  ,headers_swept BIGINT NOT NULL  ENCODE az64	  ,tables_changed INTEGER NOT NULL  ENCODE az64	  ,blocks_pending_write BIGINT NOT NULL  ENCODE az64	  ,num_metadata_blocks_retained INTEGER NOT NULL  ENCODE az64	  ,total_metadata_blocks INTEGER NOT NULL  ENCODE az64	  ,sb_size BIGINT NOT NULL  ENCODE az64	  ,num_modified_hdrs_tracked BIGINT NOT NULL  ENCODE az64	  ,sb_sweep_tracking INTEGER NOT NULL  ENCODE az64	  ,sb_version BIGINT NOT NULL  ENCODE az64	  ,sb_sweep_optimized_commit INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_commit_internal_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_commit_regions;CREATE TABLE IF NOT EXISTS pg_catalog.stll_commit_regions(	node INTEGER NOT NULL  ENCODE az64	  ,commit_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,sb_ver BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,region_begin BIGINT NOT NULL  ENCODE az64	  ,region_end BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_commit_regions owner to rdsdb;--DROP TABLE pg_catalog.stll_commit_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_commit_stats(	xid BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,startqueue TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,startwork TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endflush TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endstage TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endlocal TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,startglobal TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,queuelen BIGINT NOT NULL  ENCODE az64	  ,permblocks BIGINT NOT NULL  ENCODE az64	  ,newblocks BIGINT NOT NULL  ENCODE az64	  ,dirtyblocks BIGINT NOT NULL  ENCODE az64	  ,tombstonedblocks BIGINT NOT NULL  ENCODE az64	  ,tossedblocks BIGINT NOT NULL  ENCODE az64	  ,headers BIGINT NOT NULL  ENCODE az64	  ,numxids INTEGER NOT NULL  ENCODE az64	  ,oldestxid BIGINT NOT NULL  ENCODE az64	  ,extwritelatency BIGINT NOT NULL  ENCODE az64	  ,metadatawritten INTEGER NOT NULL  ENCODE az64	  ,batched_by BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_commit_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_committed_txn;CREATE TABLE IF NOT EXISTS pg_catalog.stll_committed_txn(	dump_end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tbl BIGINT NOT NULL  ENCODE az64	  ,is_write INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_committed_txn owner to rdsdb;--DROP TABLE pg_catalog.stll_compile_info;CREATE TABLE IF NOT EXISTS pg_catalog.stll_compile_info(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,locus INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,"path" CHAR(255) NOT NULL  ENCODE lzo	  ,compile INTEGER NOT NULL  ENCODE az64	  ,complevel INTEGER NOT NULL  ENCODE az64	  ,cachehit INTEGER NOT NULL  ENCODE az64	  ,tokwaittime BIGINT NOT NULL  ENCODE az64	  ,compilestarttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,compileendtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,compilelocktime BIGINT NOT NULL  ENCODE az64	  ,compilememory BIGINT NOT NULL  ENCODE az64	  ,getsuccess INTEGER NOT NULL  ENCODE az64	  ,gettime BIGINT NOT NULL  ENCODE az64	  ,objsize BIGINT NOT NULL  ENCODE az64	  ,skip_opt_compile INTEGER NOT NULL  ENCODE az64	  ,replace_obj_status INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_compile_info owner to rdsdb;--DROP TABLE pg_catalog.stll_compile_service;CREATE TABLE IF NOT EXISTS pg_catalog.stll_compile_service(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,locus INTEGER NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,"path" CHAR(255) NOT NULL  ENCODE lzo	  ,lookupstarttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,lookupendtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,lookupsuccess INTEGER NOT NULL  ENCODE az64	  ,putstarttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,putendtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,putsuccess INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_compile_service owner to rdsdb;--DROP TABLE pg_catalog.stll_complyze;CREATE TABLE IF NOT EXISTS pg_catalog.stll_complyze(	measuretime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,"encoding" INTEGER NOT NULL  ENCODE az64	  ,size BIGINT NOT NULL  ENCODE az64	  ,tbl_name CHAR(256) NOT NULL  ENCODE lzo	  ,col_name CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_complyze owner to rdsdb;--DROP TABLE pg_catalog.stll_concurrency_scaling_query_mapping;CREATE TABLE IF NOT EXISTS pg_catalog.stll_concurrency_scaling_query_mapping(	userid INTEGER NOT NULL  ENCODE az64	  ,primary_query INTEGER NOT NULL  ENCODE az64	  ,concurrency_scaling_query INTEGER NOT NULL  ENCODE az64	  ,concurrency_scaling_cluster CHAR(64) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_concurrency_scaling_query_mapping owner to rdsdb;--DROP TABLE pg_catalog.stll_concurrency_scaling_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stll_concurrency_scaling_usage(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"cluster" CHAR(128) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,request_id CHAR(36) NOT NULL  ENCODE lzo	  ,incurred_usage_ms INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_concurrency_scaling_usage owner to rdsdb;--DROP TABLE pg_catalog.stll_concurrency_scaling_usage_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_concurrency_scaling_usage_error(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_concurrency_scaling_usage_error owner to rdsdb;--DROP TABLE pg_catalog.stll_config;CREATE TABLE IF NOT EXISTS pg_catalog.stll_config(	name CHAR(50) NOT NULL  ENCODE lzo	  ,value CHAR(200) NOT NULL  ENCODE lzo	  ,category CHAR(60) NOT NULL  ENCODE lzo	  ,advanced INTEGER NOT NULL  ENCODE az64	  ,helpfile CHAR(200) NOT NULL  ENCODE lzo	  ,"updater" CHAR(50) NOT NULL  ENCODE lzo	  ,chooser CHAR(50) NOT NULL  ENCODE lzo	  ,"restart" INTEGER NOT NULL  ENCODE az64	  ,summary CHAR(300) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_config owner to rdsdb;--DROP TABLE pg_catalog.stll_config_chooser;CREATE TABLE IF NOT EXISTS pg_catalog.stll_config_chooser(	name CHAR(50) NOT NULL  ENCODE lzo	  ,value CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_config_chooser owner to rdsdb;--DROP TABLE pg_catalog.stll_config_history;CREATE TABLE IF NOT EXISTS pg_catalog.stll_config_history(	changed TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,filename CHAR(200) NOT NULL  ENCODE lzo	  ,reason CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_config_history owner to rdsdb;--DROP TABLE pg_catalog.stll_connection_log;CREATE TABLE IF NOT EXISTS pg_catalog.stll_connection_log(	event CHAR(50) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,remotehost CHAR(32) NOT NULL  ENCODE lzo	  ,remoteport CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,dbname CHAR(50) NOT NULL  ENCODE lzo	  ,username CHAR(50) NOT NULL  ENCODE lzo	  ,authmethod CHAR(32) NOT NULL  ENCODE lzo	  ,duration BIGINT NOT NULL  ENCODE az64	  ,sslversion CHAR(50) NOT NULL  ENCODE lzo	  ,sslcipher CHAR(128) NOT NULL  ENCODE lzo	  ,mtu INTEGER NOT NULL  ENCODE az64	  ,sslcompression CHAR(64) NOT NULL  ENCODE lzo	  ,sslexpansion CHAR(64) NOT NULL  ENCODE lzo	  ,iamauthguid CHAR(36) NOT NULL  ENCODE lzo	  ,application_name CHAR(250) NOT NULL  ENCODE lzo	  ,os_version CHAR(64) NOT NULL  ENCODE lzo	  ,driver_version CHAR(64) NOT NULL  ENCODE lzo	  ,plugin_name CHAR(32) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_connection_log owner to rdsdb;--DROP TABLE pg_catalog.stll_consistency;CREATE TABLE IF NOT EXISTS pg_catalog.stll_consistency(	"time" TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"type" CHAR(1) NOT NULL  ENCODE lzo	  ,message CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_consistency owner to rdsdb;--DROP TABLE pg_catalog.stll_core_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stll_core_stat(	currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,sampletime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,core INTEGER NOT NULL  ENCODE az64	  ,elapsed BIGINT NOT NULL  ENCODE az64	  ,utime BIGINT NOT NULL  ENCODE az64	  ,stime BIGINT NOT NULL  ENCODE az64	  ,ntime BIGINT NOT NULL  ENCODE az64	  ,idle BIGINT NOT NULL  ENCODE az64	  ,iowait BIGINT NOT NULL  ENCODE az64	  ,irq BIGINT NOT NULL  ENCODE az64	  ,softirq BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_core_stat owner to rdsdb;--DROP TABLE pg_catalog.stll_cost_control_updates;CREATE TABLE IF NOT EXISTS pg_catalog.stll_cost_control_updates(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,quota_id CHAR(120) NOT NULL  ENCODE lzo	  ,"usage" INTEGER NOT NULL  ENCODE az64	  ,available INTEGER NOT NULL  ENCODE az64	  ,threshold INTEGER NOT NULL  ENCODE az64	  ,updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,period_start TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,period_end TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,feature CHAR(120) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_cost_control_updates owner to rdsdb;--DROP TABLE pg_catalog.stll_cqilog;CREATE TABLE IF NOT EXISTS pg_catalog.stll_cqilog(	logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"action" CHAR(256) NOT NULL  ENCODE lzo	  ,reason CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_cqilog owner to rdsdb;--DROP TABLE pg_catalog.stll_create_replication;CREATE TABLE IF NOT EXISTS pg_catalog.stll_create_replication(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,id CHAR(64) NOT NULL  ENCODE lzo	  ,flags INTEGER NOT NULL  ENCODE az64	  ,new_node INTEGER NOT NULL  ENCODE az64	  ,new_diskno INTEGER NOT NULL  ENCODE az64	  ,new_address BIGINT NOT NULL  ENCODE az64	  ,crc INTEGER NOT NULL  ENCODE az64	  ,reason CHAR(24) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_create_replication owner to rdsdb;--DROP TABLE pg_catalog.stll_dag_cleanup;CREATE TABLE IF NOT EXISTS pg_catalog.stll_dag_cleanup(	ending_xid BIGINT NOT NULL  ENCODE az64	  ,is_commit INTEGER NOT NULL  ENCODE az64	  ,"timestamp" TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,event CHAR(6) NOT NULL  ENCODE lzo	  ,dag_verts BIGINT NOT NULL  ENCODE az64	  ,txn_set_size INTEGER NOT NULL  ENCODE az64	  ,lowest_added_xid BIGINT NOT NULL  ENCODE az64	  ,highest_added_xid BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_dag_cleanup owner to rdsdb;--DROP TABLE pg_catalog.stll_datashare_changes_consumer;CREATE TABLE IF NOT EXISTS pg_catalog.stll_datashare_changes_consumer(	userid INTEGER NOT NULL  ENCODE az64	  ,username CHAR(128) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,initial_query_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,actiontime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"action" INTEGER NOT NULL  ENCODE az64	  ,sharedbid INTEGER NOT NULL  ENCODE az64	  ,sharedbname CHAR(128) NOT NULL  ENCODE lzo	  ,sharename CHAR(128) NOT NULL  ENCODE lzo	  ,produceraccount CHAR(12) NOT NULL  ENCODE lzo	  ,producernamespace CHAR(128) NOT NULL  ENCODE lzo	  ,targettype INTEGER NOT NULL  ENCODE az64	  ,targetid INTEGER NOT NULL  ENCODE az64	  ,targetname CHAR(128) NOT NULL  ENCODE lzo	  ,status INTEGER NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_datashare_changes_consumer owner to rdsdb;--DROP TABLE pg_catalog.stll_datashare_changes_producer;CREATE TABLE IF NOT EXISTS pg_catalog.stll_datashare_changes_producer(	userid INTEGER NOT NULL  ENCODE az64	  ,username CHAR(128) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,initial_query_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,actiontime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"action" INTEGER NOT NULL  ENCODE az64	  ,shareid INTEGER NOT NULL  ENCODE az64	  ,sharename CHAR(128) NOT NULL  ENCODE lzo	  ,dbid INTEGER NOT NULL  ENCODE az64	  ,dbname CHAR(128) NOT NULL  ENCODE lzo	  ,targetroletype INTEGER NOT NULL  ENCODE az64	  ,targetroleid INTEGER NOT NULL  ENCODE az64	  ,targetrolename CHAR(128) NOT NULL  ENCODE lzo	  ,datashareobjtype INTEGER NOT NULL  ENCODE az64	  ,datashareobjid INTEGER NOT NULL  ENCODE az64	  ,datashareobjname CHAR(128) NOT NULL  ENCODE lzo	  ,consumeraccount CHAR(12) NOT NULL  ENCODE lzo	  ,consumernamespace CHAR(128) NOT NULL  ENCODE lzo	  ,shareproperty CHAR(64) NOT NULL  ENCODE lzo	  ,sharepropvalue CHAR(128) NOT NULL  ENCODE lzo	  ,status INTEGER NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_datashare_changes_producer owner to rdsdb;--DROP TABLE pg_catalog.stll_datashare_dsms;CREATE TABLE IF NOT EXISTS pg_catalog.stll_datashare_dsms(	userid INTEGER NOT NULL  ENCODE az64	  ,username CHAR(128) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,initial_query_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,requestid CHAR(50) NOT NULL  ENCODE lzo	  ,shareid INTEGER NOT NULL  ENCODE az64	  ,sharename CHAR(128) NOT NULL  ENCODE lzo	  ,produceraccount CHAR(12) NOT NULL  ENCODE lzo	  ,producernamespace CHAR(128) NOT NULL  ENCODE lzo	  ,role INTEGER NOT NULL  ENCODE az64	  ,apicall INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_datashare_dsms owner to rdsdb;--DROP TABLE pg_catalog.stll_datashare_request_consumer;CREATE TABLE IF NOT EXISTS pg_catalog.stll_datashare_request_consumer(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,initial_query_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,requestid CHAR(50) NOT NULL  ENCODE lzo	  ,sb_version BIGINT NOT NULL  ENCODE az64	  ,dbtype INTEGER NOT NULL  ENCODE az64	  ,dbid INTEGER NOT NULL  ENCODE az64	  ,api_call INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,transaction_uid CHAR(50) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_datashare_request_consumer owner to rdsdb;--DROP TABLE pg_catalog.stll_datashare_request_producer;CREATE TABLE IF NOT EXISTS pg_catalog.stll_datashare_request_producer(	userid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,requestid CHAR(50) NOT NULL  ENCODE lzo	  ,sb_version BIGINT NOT NULL  ENCODE az64	  ,dbtype INTEGER NOT NULL  ENCODE az64	  ,dbid INTEGER NOT NULL  ENCODE az64	  ,shareid INTEGER NOT NULL  ENCODE az64	  ,sharename CHAR(128) NOT NULL  ENCODE lzo	  ,api_call INTEGER NOT NULL  ENCODE az64	  ,obj_type INTEGER NOT NULL  ENCODE az64	  ,obj_oid INTEGER NOT NULL  ENCODE az64	  ,obj_name CHAR(128) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,consumeraccountid CHAR(50) NOT NULL  ENCODE lzo	  ,consumernamespace CHAR(50) NOT NULL  ENCODE lzo	  ,consumer_transaction_uid CHAR(50) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_datashare_request_producer owner to rdsdb;--DROP TABLE pg_catalog.stll_datasharing_log;CREATE TABLE IF NOT EXISTS pg_catalog.stll_datasharing_log(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,dskind CHAR(20) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,message CHAR(1024) NOT NULL  ENCODE lzo	  ,on_leader INTEGER NOT NULL  ENCODE az64	  ,initial_query_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_datasharing_log owner to rdsdb;--DROP TABLE pg_catalog.stll_ddltext;CREATE TABLE IF NOT EXISTS pg_catalog.stll_ddltext(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,text CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_ddltext owner to rdsdb;--DROP TABLE pg_catalog.stll_dead_tuples_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_dead_tuples_stats(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,num_visible_rows BIGINT NOT NULL  ENCODE az64	  ,dead_tuples_accurate BIGINT NOT NULL  ENCODE az64	  ,dead_tuples_stats BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_dead_tuples_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_delete;CREATE TABLE IF NOT EXISTS pg_catalog.stll_delete(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_delete owner to rdsdb;--DROP TABLE pg_catalog.stll_delete_tag_throttle;CREATE TABLE IF NOT EXISTS pg_catalog.stll_delete_tag_throttle(	node_num INTEGER NOT NULL  ENCODE az64	  ,window_start TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,window_end TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,max_delete_tags INTEGER NOT NULL  ENCODE az64	  ,delete_tags_outstanding BIGINT NOT NULL  ENCODE az64	  ,delete_tags_total BIGINT NOT NULL  ENCODE az64	  ,delete_tags_window BIGINT NOT NULL  ENCODE az64	  ,tps INTEGER NOT NULL  ENCODE az64	  ,contains_burst_write INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_delete_tag_throttle owner to rdsdb;--DROP TABLE pg_catalog.stll_disk_cache_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_disk_cache_stats(	logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,adds BIGINT NOT NULL  ENCODE az64	  ,new_blocks BIGINT NOT NULL  ENCODE az64	  ,dbr_blocks BIGINT NOT NULL  ENCODE az64	  ,pins BIGINT NOT NULL  ENCODE az64	  ,"faults" BIGINT NOT NULL  ENCODE az64	  ,throttles BIGINT NOT NULL  ENCODE az64	  ,scan_starts BIGINT NOT NULL  ENCODE az64	  ,cache_size INTEGER NOT NULL  ENCODE az64	  ,lru_size INTEGER NOT NULL  ENCODE az64	  ,throttle BIGINT NOT NULL  ENCODE az64	  ,ra_points DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,scans_running INTEGER NOT NULL  ENCODE az64	  ,evictions BIGINT NOT NULL  ENCODE az64	  ,prefetches BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,max_size INTEGER NOT NULL  ENCODE az64	  ,max_pushout_latency_us BIGINT NOT NULL  ENCODE az64	  ,rowset_blocks_spilled BIGINT NOT NULL  ENCODE az64	  ,rerep_write_skipped_exhausted_write_pool BIGINT NOT NULL  ENCODE az64	  ,max_rowsets_pinned BIGINT NOT NULL  ENCODE az64	  ,rowsets_currently_in_cache BIGINT NOT NULL  ENCODE az64	  ,rowsets_currently_pinned BIGINT NOT NULL  ENCODE az64	  ,accesses_to_outstanding_req BIGINT NOT NULL  ENCODE az64	  ,percentage_shared_mem_used INTEGER NOT NULL  ENCODE az64	  ,max_percentage_shared_mem_used INTEGER NOT NULL  ENCODE az64	  ,disk_upgrade_requests BIGINT NOT NULL  ENCODE az64	  ,successful_disk_upgrades BIGINT NOT NULL  ENCODE az64	  ,disk_upgrades_dropped BIGINT NOT NULL  ENCODE az64	  ,disk_upgrades_not_useful BIGINT NOT NULL  ENCODE az64	  ,s3_upgrade_requests BIGINT NOT NULL  ENCODE az64	  ,successful_s3_upgrades BIGINT NOT NULL  ENCODE az64	  ,s3_upgrades_dropped BIGINT NOT NULL  ENCODE az64	  ,num_upsizings BIGINT NOT NULL  ENCODE az64	  ,num_downsizings BIGINT NOT NULL  ENCODE az64	  ,largest_size_limit BIGINT NOT NULL  ENCODE az64	  ,smallest_size_limit BIGINT NOT NULL  ENCODE az64	  ,avg_size_limit BIGINT NOT NULL  ENCODE az64	  ,oom_eviction_calls INTEGER NOT NULL  ENCODE az64	  ,num_pushout_downsizings BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_disk_cache_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_disk_cache_write;CREATE TABLE IF NOT EXISTS pg_catalog.stll_disk_cache_write(	blocks_pushed INTEGER NOT NULL  ENCODE az64	  ,blocks_instant_pushed INTEGER NOT NULL  ENCODE az64	  ,avg_lru_size_before_push INTEGER NOT NULL  ENCODE az64	  ,push_attempts INTEGER NOT NULL  ENCODE az64	  ,pending_writes_push INTEGER NOT NULL  ENCODE az64	  ,pending_reads_push INTEGER NOT NULL  ENCODE az64	  ,blocks_written_back INTEGER NOT NULL  ENCODE az64	  ,writeback_preempts INTEGER NOT NULL  ENCODE az64	  ,avg_lru_size_before_writeback INTEGER NOT NULL  ENCODE az64	  ,writeback_attempts INTEGER NOT NULL  ENCODE az64	  ,pending_writes_writeback INTEGER NOT NULL  ENCODE az64	  ,pending_reads_writeback INTEGER NOT NULL  ENCODE az64	  ,avg_push_time_microsec BIGINT NOT NULL  ENCODE az64	  ,avg_writeback_time_microsec BIGINT NOT NULL  ENCODE az64	  ,sample_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,sample_end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_disk_cache_write owner to rdsdb;--DROP TABLE pg_catalog.stll_disk_extent_splits;CREATE TABLE IF NOT EXISTS pg_catalog.stll_disk_extent_splits(	split_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"owner" INTEGER NOT NULL  ENCODE az64	  ,"host" INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,addr INTEGER NOT NULL  ENCODE az64	  ,"start" INTEGER NOT NULL  ENCODE az64	  ,size_before INTEGER NOT NULL  ENCODE az64	  ,size_after INTEGER NOT NULL  ENCODE az64	  ,new_start INTEGER NOT NULL  ENCODE az64	  ,new_size INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_disk_extent_splits owner to rdsdb;--DROP TABLE pg_catalog.stll_disk_failures;CREATE TABLE IF NOT EXISTS pg_catalog.stll_disk_failures(	event_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"host" INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,event CHAR(20) NOT NULL  ENCODE lzo	  ,err_code INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_disk_failures owner to rdsdb;--DROP TABLE pg_catalog.stll_disk_full_diag;CREATE TABLE IF NOT EXISTS pg_catalog.stll_disk_full_diag(	currenttime BIGINT NOT NULL  ENCODE az64	  ,node_num BIGINT NOT NULL  ENCODE az64	  ,query_id BIGINT NOT NULL  ENCODE az64	  ,temp_blocks BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_disk_full_diag owner to rdsdb;--DROP TABLE pg_catalog.stll_disk_speeds;CREATE TABLE IF NOT EXISTS pg_catalog.stll_disk_speeds(	measurement_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,mbps INTEGER NOT NULL  ENCODE az64	  ,failed INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_disk_speeds owner to rdsdb;--DROP TABLE pg_catalog.stll_disk_topology;CREATE TABLE IF NOT EXISTS pg_catalog.stll_disk_topology(	t TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node CHAR(28) NOT NULL  ENCODE lzo	  ,"host" CHAR(28) NOT NULL  ENCODE lzo	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,mirror INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_disk_topology owner to rdsdb;--DROP TABLE pg_catalog.stll_diskman_query_block_read_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_diskman_query_block_read_stats(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node_num INTEGER NOT NULL  ENCODE az64	  ,query_read_memory BIGINT NOT NULL  ENCODE az64	  ,query_read_disk BIGINT NOT NULL  ENCODE az64	  ,diskman_read_memory BIGINT NOT NULL  ENCODE az64	  ,diskman_read_disk BIGINT NOT NULL  ENCODE az64	  ,read_io_redirected BIGINT NOT NULL  ENCODE az64	  ,read_completion_outside_diskman BIGINT NOT NULL  ENCODE az64	  ,read_completion_in_diskman BIGINT NOT NULL  ENCODE az64	  ,read_completion_redirected BIGINT NOT NULL  ENCODE az64	  ,query_read_append_pending_io BIGINT NOT NULL  ENCODE az64	  ,diskman_read_append_pending_io BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_diskman_query_block_read_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_disks_blocks_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_disks_blocks_stats(	node INTEGER NOT NULL  ENCODE az64	  ,logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,local_cap BIGINT NOT NULL  ENCODE az64	  ,sb_cap BIGINT NOT NULL  ENCODE az64	  ,allocated_blks BIGINT NOT NULL  ENCODE az64	  ,primary_allocated_blks BIGINT NOT NULL  ENCODE az64	  ,mirror_allocated_blks BIGINT NOT NULL  ENCODE az64	  ,perm_blks BIGINT NOT NULL  ENCODE az64	  ,to_backup_blks BIGINT NOT NULL  ENCODE az64	  ,temp_blks BIGINT NOT NULL  ENCODE az64	  ,local_backedup_blks BIGINT NOT NULL  ENCODE az64	  ,primary_rerep_blks INTEGER NOT NULL  ENCODE az64	  ,mirror_rerep_blks INTEGER NOT NULL  ENCODE az64	  ,num_primary_reserved BIGINT NOT NULL  ENCODE az64	  ,num_mirror_reserved BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_disks_blocks_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_dist;CREATE TABLE IF NOT EXISTS pg_catalog.stll_dist(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,packets INTEGER NOT NULL  ENCODE az64	  ,topology_signature BIGINT NOT NULL  ENCODE az64	  ,is_intra_node CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_dist owner to rdsdb;--DROP TABLE pg_catalog.stll_dropped_replication;CREATE TABLE IF NOT EXISTS pg_catalog.stll_dropped_replication(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,address BIGINT NOT NULL  ENCODE az64	  ,invalid INTEGER NOT NULL  ENCODE az64	  ,failed INTEGER NOT NULL  ENCODE az64	  ,reps_remaining INTEGER NOT NULL  ENCODE az64	  ,reason CHAR(24) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_dropped_replication owner to rdsdb;--DROP TABLE pg_catalog.stll_dynamodb_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_dynamodb_error(	userid INTEGER NOT NULL  ENCODE az64	  ,qid INTEGER NOT NULL  ENCODE az64	  ,process CHAR(12) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,errcode INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(90) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,context CHAR(100) NOT NULL  ENCODE lzo	  ,error CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_dynamodb_error owner to rdsdb;--DROP TABLE pg_catalog.stll_dynamodb_restore;CREATE TABLE IF NOT EXISTS pg_catalog.stll_dynamodb_restore(	starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,in_progress INTEGER NOT NULL  ENCODE az64	  ,errored INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_dynamodb_restore owner to rdsdb;--DROP TABLE pg_catalog.stll_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_error(	userid INTEGER NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,errcode INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(90) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,context CHAR(100) NOT NULL  ENCODE lzo	  ,error CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_error owner to rdsdb;--DROP TABLE pg_catalog.stll_event_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stll_event_trace(	event INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,sliceid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(80) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,message CHAR(400) NOT NULL  ENCODE lzo	  ,event_name CHAR(128) NOT NULL  ENCODE lzo	  ,"level" INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_event_trace owner to rdsdb;--DROP TABLE pg_catalog.stll_exec_state;CREATE TABLE IF NOT EXISTS pg_catalog.stll_exec_state(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,"label" CHAR(256) NOT NULL  ENCODE lzo	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,num_parts INTEGER NOT NULL  ENCODE az64	  ,is_rrscan CHAR(1) NOT NULL  ENCODE lzo	  ,is_delayed_scan CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_exec_state owner to rdsdb;--DROP TABLE pg_catalog.stll_explain;CREATE TABLE IF NOT EXISTS pg_catalog.stll_explain(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,nodeid INTEGER NOT NULL  ENCODE az64	  ,parentid INTEGER NOT NULL  ENCODE az64	  ,plannode CHAR(400) NOT NULL  ENCODE lzo	  ,info CHAR(400) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_explain owner to rdsdb;--DROP TABLE pg_catalog.stll_external_catalog_calls;CREATE TABLE IF NOT EXISTS pg_catalog.stll_external_catalog_calls(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"call" INTEGER NOT NULL  ENCODE az64	  ,objects INTEGER NOT NULL  ENCODE az64	  ,duration BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_external_catalog_calls owner to rdsdb;--DROP TABLE pg_catalog.stll_fabric_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_fabric_stats(	slice INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segnum INTEGER NOT NULL  ENCODE az64	  ,dst INTEGER NOT NULL  ENCODE az64	  ,nullbytes INTEGER NOT NULL  ENCODE az64	  ,zerobytes INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_fabric_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_federated_calls;CREATE TABLE IF NOT EXISTS pg_catalog.stll_federated_calls(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,sourcetype CHAR(30) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,calltype CHAR(30) NOT NULL  ENCODE lzo	  ,duration BIGINT NOT NULL  ENCODE az64	  ,querytext CHAR(4000) NOT NULL  ENCODE lzo	  ,on_leader CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_federated_calls owner to rdsdb;--DROP TABLE pg_catalog.stll_federated_query;CREATE TABLE IF NOT EXISTS pg_catalog.stll_federated_query(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,sourcetype CHAR(30) NOT NULL  ENCODE lzo	  ,"database" CHAR(30) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,querytext CHAR(4000) NOT NULL  ENCODE lzo	  ,num_rows BIGINT NOT NULL  ENCODE az64	  ,num_bytes BIGINT NOT NULL  ENCODE az64	  ,duration BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_federated_query owner to rdsdb;--DROP TABLE pg_catalog.stll_federated_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stll_federated_trace(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,message CHAR(1024) NOT NULL  ENCODE lzo	  ,on_leader INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_federated_trace owner to rdsdb;--DROP TABLE pg_catalog.stll_fetchers;CREATE TABLE IF NOT EXISTS pg_catalog.stll_fetchers(	query INTEGER NOT NULL  ENCODE az64	  ,seg INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,fetcher_id INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pins INTEGER NOT NULL  ENCODE az64	  ,"faults" INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_fetchers owner to rdsdb;--DROP TABLE pg_catalog.stll_file_scan;CREATE TABLE IF NOT EXISTS pg_catalog.stll_file_scan(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,name CHAR(90) NOT NULL  ENCODE lzo	  ,"lines" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,loadtime BIGINT NOT NULL  ENCODE az64	  ,curtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_file_scan owner to rdsdb;--DROP TABLE pg_catalog.stll_freed_disk_addrs;CREATE TABLE IF NOT EXISTS pg_catalog.stll_freed_disk_addrs(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,context CHAR(64) NOT NULL  ENCODE lzo	  ,"owner" INTEGER NOT NULL  ENCODE az64	  ,"host" INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,disk_addr INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_freed_disk_addrs owner to rdsdb;--DROP TABLE pg_catalog.stll_ghost_buffer_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_ghost_buffer_stats(	node_num INTEGER NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,ghb_eviction_threshold BIGINT NOT NULL  ENCODE az64	  ,ghb_size_before_addition BIGINT NOT NULL  ENCODE az64	  ,num_blocks_evicted BIGINT NOT NULL  ENCODE az64	  ,num_blocks_added BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_ghost_buffer_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_ght_hash_partitions;CREATE TABLE IF NOT EXISTS pg_catalog.stll_ght_hash_partitions(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,lds INTEGER NOT NULL  ENCODE az64	  ,part_num INTEGER NOT NULL  ENCODE az64	  ,num_blocks INTEGER NOT NULL  ENCODE az64	  ,mem_resident INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,slots INTEGER NOT NULL  ENCODE az64	  ,occupied INTEGER NOT NULL  ENCODE az64	  ,resizes INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_ght_hash_partitions owner to rdsdb;--DROP TABLE pg_catalog.stll_hash;CREATE TABLE IF NOT EXISTS pg_catalog.stll_hash(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,slots INTEGER NOT NULL  ENCODE az64	  ,occupied INTEGER NOT NULL  ENCODE az64	  ,maxlength INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,num_parts INTEGER NOT NULL  ENCODE az64	  ,est_rows BIGINT NOT NULL  ENCODE az64	  ,num_blocks_permitted INTEGER NOT NULL  ENCODE az64	  ,resizes INTEGER NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,used_prefetching CHAR(1) NOT NULL  ENCODE lzo	  ,runtime_filter_size INTEGER NOT NULL  ENCODE az64	  ,max_runtime_filter_size INTEGER NOT NULL  ENCODE az64	  ,runtime_filter_type INTEGER NOT NULL  ENCODE az64	  ,is_hashed_subplan CHAR(1) NOT NULL  ENCODE lzo	  ,build_global_hash_table CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_hash owner to rdsdb;--DROP TABLE pg_catalog.stll_hash_partitions;CREATE TABLE IF NOT EXISTS pg_catalog.stll_hash_partitions(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,part_num INTEGER NOT NULL  ENCODE az64	  ,num_blocks INTEGER NOT NULL  ENCODE az64	  ,mem_resident INTEGER NOT NULL  ENCODE az64	  ,card BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_hash_partitions owner to rdsdb;--DROP TABLE pg_catalog.stll_hashjoin;CREATE TABLE IF NOT EXISTS pg_catalog.stll_hashjoin(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,num_parts INTEGER NOT NULL  ENCODE az64	  ,join_type INTEGER NOT NULL  ENCODE az64	  ,hash_looped CHAR(1) NOT NULL  ENCODE lzo	  ,switched_parts CHAR(1) NOT NULL  ENCODE lzo	  ,used_prefetching CHAR(1) NOT NULL  ENCODE lzo	  ,hash_segment INTEGER NOT NULL  ENCODE az64	  ,hash_step INTEGER NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,distribution INTEGER NOT NULL  ENCODE az64	  ,is_externalized CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_hashjoin owner to rdsdb;--DROP TABLE pg_catalog.stll_hashjoin_partitions;CREATE TABLE IF NOT EXISTS pg_catalog.stll_hashjoin_partitions(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,part_num INTEGER NOT NULL  ENCODE az64	  ,num_blocks INTEGER NOT NULL  ENCODE az64	  ,hash_loops INTEGER NOT NULL  ENCODE az64	  ,switched_parts CHAR(1) NOT NULL  ENCODE lzo	  ,input_card BIGINT NOT NULL  ENCODE az64	  ,output_card BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_hashjoin_partitions owner to rdsdb;--DROP TABLE pg_catalog.stll_hdr_integrity_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_hdr_integrity_error(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node_num INTEGER NOT NULL  ENCODE az64	  ,sb_ver BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,hdr_dump CHAR(209) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_hdr_integrity_error owner to rdsdb;--DROP TABLE pg_catalog.stll_hllsketch_column_linker;CREATE TABLE IF NOT EXISTS pg_catalog.stll_hllsketch_column_linker(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,columnname CHAR(400) NOT NULL  ENCODE lzo	  ,sqloperation INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_hllsketch_column_linker owner to rdsdb;--DROP TABLE pg_catalog.stll_hllsketch_function;CREATE TABLE IF NOT EXISTS pg_catalog.stll_hllsketch_function(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,functionid INTEGER NOT NULL  ENCODE az64	  ,sqloperation INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_hllsketch_function owner to rdsdb;--DROP TABLE pg_catalog.stll_hllsketch_query;CREATE TABLE IF NOT EXISTS pg_catalog.stll_hllsketch_query(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query_cmd_type INTEGER NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_hllsketch_query owner to rdsdb;--DROP TABLE pg_catalog.stll_hot_tables_qpd_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_hot_tables_qpd_stats(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_hot_tables INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,highest_qpd BIGINT NOT NULL  ENCODE az64	  ,min_qpd BIGINT NOT NULL  ENCODE az64	  ,max_qpd BIGINT NOT NULL  ENCODE az64	  ,avg_qpd BIGINT NOT NULL  ENCODE az64	  ,median_qpd BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_hot_tables_qpd_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_inc_commit_stats_instrumentation;CREATE TABLE IF NOT EXISTS pg_catalog.stll_inc_commit_stats_instrumentation(	mismatch_type CHAR(8) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pos INTEGER NOT NULL  ENCODE az64	  ,persistency INTEGER NOT NULL  ENCODE az64	  ,a_flags INTEGER NOT NULL  ENCODE az64	  ,tombstone_id INTEGER NOT NULL  ENCODE az64	  ,has_local_rep INTEGER NOT NULL  ENCODE az64	  ,num_reps INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,"json" CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_inc_commit_stats_instrumentation owner to rdsdb;--DROP TABLE pg_catalog.stll_incremental_resize_state;CREATE TABLE IF NOT EXISTS pg_catalog.stll_incremental_resize_state(	resizeid CHAR(128) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,resizephase CHAR(32) NOT NULL  ENCODE lzo	  ,resizeplanstate CHAR(32) NOT NULL  ENCODE lzo	  ,nodenum INTEGER NOT NULL  ENCODE az64	  ,globalslicenum INTEGER NOT NULL  ENCODE az64	  ,localslicenum INTEGER NOT NULL  ENCODE az64	  ,datablocks INTEGER NOT NULL  ENCODE az64	  ,metadatablocks INTEGER NOT NULL  ENCODE az64	  ,distallblocks INTEGER NOT NULL  ENCODE az64	  ,metachainblocks INTEGER NOT NULL  ENCODE az64	  ,blockchainmetachainblocks INTEGER NOT NULL  ENCODE az64	  ,leadersnapshotblocks INTEGER NOT NULL  ENCODE az64	  ,pgwalblocks INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,distallrows BIGINT NOT NULL  ENCODE az64	  ,persist_temp_tables_state CHAR(100) NOT NULL  ENCODE lzo	  ,temp_blocks INTEGER NOT NULL  ENCODE az64	  ,temp_distall_blocks INTEGER NOT NULL  ENCODE az64	  ,temp_rows BIGINT NOT NULL  ENCODE az64	  ,temp_distall_rows BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_incremental_resize_state owner to rdsdb;--DROP TABLE pg_catalog.stll_inflight;CREATE TABLE IF NOT EXISTS pg_catalog.stll_inflight(	userid INTEGER NOT NULL  ENCODE az64	  ,logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,text CHAR(100) NOT NULL  ENCODE lzo	  ,suspended INTEGER NOT NULL  ENCODE az64	  ,insert_pristine INTEGER NOT NULL  ENCODE az64	  ,working_mem BIGINT NOT NULL  ENCODE az64	  ,concurrency_scaling_status INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_inflight owner to rdsdb;--DROP TABLE pg_catalog.stll_insert;CREATE TABLE IF NOT EXISTS pg_catalog.stll_insert(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_insert owner to rdsdb;--DROP TABLE pg_catalog.stll_internal_query_details;CREATE TABLE IF NOT EXISTS pg_catalog.stll_internal_query_details(	query INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,initial_query_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,seldispatch_status INTEGER NOT NULL  ENCODE az64	  ,query_cmd_type INTEGER NOT NULL  ENCODE az64	  ,user_temp_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,volt_temp_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,spectrum_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,user_perm_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,system_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,query_target_table_type INTEGER NOT NULL  ENCODE az64	  ,memory_demanding_info BIGINT NOT NULL  ENCODE az64	  ,nobackup_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,zindex_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,pg_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,dirty_tables_read INTEGER NOT NULL  ENCODE az64	  ,wlm_slot_type CHAR(8) NOT NULL  ENCODE lzo	  ,is_short_query INTEGER NOT NULL  ENCODE az64	  ,est_peak_mem_needed BIGINT NOT NULL  ENCODE az64	  ,wlm_query_memory BIGINT NOT NULL  ENCODE az64	  ,datasharing_tables_accessed INTEGER NOT NULL  ENCODE az64	  ,uses_new_cost_model CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_internal_query_details owner to rdsdb;--DROP TABLE pg_catalog.stll_invalid_replication;CREATE TABLE IF NOT EXISTS pg_catalog.stll_invalid_replication(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,node0 INTEGER NOT NULL  ENCODE az64	  ,diskno0 INTEGER NOT NULL  ENCODE az64	  ,node1 INTEGER NOT NULL  ENCODE az64	  ,diskno1 INTEGER NOT NULL  ENCODE az64	  ,node2 INTEGER NOT NULL  ENCODE az64	  ,diskno2 INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_invalid_replication owner to rdsdb;--DROP TABLE pg_catalog.stll_invariant;CREATE TABLE IF NOT EXISTS pg_catalog.stll_invariant(	node INTEGER NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,name CHAR(80) NOT NULL  ENCODE lzo	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,padb_version CHAR(50) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_invariant owner to rdsdb;--DROP TABLE pg_catalog.stll_io_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_io_error(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(10) NOT NULL  ENCODE lzo	  ,io_offset BIGINT NOT NULL  ENCODE az64	  ,nbytes BIGINT NOT NULL  ENCODE az64	  ,"result" BIGINT NOT NULL  ENCODE az64	  ,sys_errno INTEGER NOT NULL  ENCODE az64	  ,error_string CHAR(32) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_io_error owner to rdsdb;--DROP TABLE pg_catalog.stll_io_iscsi_monitor;CREATE TABLE IF NOT EXISTS pg_catalog.stll_io_iscsi_monitor(	event_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(16) NOT NULL  ENCODE lzo	  ,event CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_io_iscsi_monitor owner to rdsdb;--DROP TABLE pg_catalog.stll_io_perf;CREATE TABLE IF NOT EXISTS pg_catalog.stll_io_perf(	ip CHAR(15) NOT NULL  ENCODE lzo	  ,file_size BIGINT NOT NULL  ENCODE az64	  ,block_size BIGINT NOT NULL  ENCODE az64	  ,num_disks INTEGER NOT NULL  ENCODE az64	  ,bytes_per_microsec DOUBLE PRECISION NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_io_perf owner to rdsdb;--DROP TABLE pg_catalog.stll_io_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stll_io_stat(	currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,sampletime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,reads BIGINT NOT NULL  ENCODE az64	  ,writes BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_io_stat owner to rdsdb;--DROP TABLE pg_catalog.stll_lambda_client;CREATE TABLE IF NOT EXISTS pg_catalog.stll_lambda_client(	query INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(100) NOT NULL  ENCODE lzo	  ,function_name CHAR(100) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_records INTEGER NOT NULL  ENCODE az64	  ,size INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_lambda_client owner to rdsdb;--DROP TABLE pg_catalog.stll_lambda_invocation_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_lambda_invocation_error(	query INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,message CHAR(1024) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_lambda_invocation_error owner to rdsdb;--DROP TABLE pg_catalog.stll_lbc_events;CREATE TABLE IF NOT EXISTS pg_catalog.stll_lbc_events(	"timestamp" TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,is_error INTEGER NOT NULL  ENCODE az64	  ,context CHAR(32) NOT NULL  ENCODE lzo	  ,message CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_lbc_events owner to rdsdb;--DROP TABLE pg_catalog.stll_leader_control;CREATE TABLE IF NOT EXISTS pg_catalog.stll_leader_control(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,msg CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_leader_control owner to rdsdb;--DROP TABLE pg_catalog.stll_leader_snapshot;CREATE TABLE IF NOT EXISTS pg_catalog.stll_leader_snapshot(	currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_snapshot_blocks INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_leader_snapshot owner to rdsdb;--DROP TABLE pg_catalog.stll_limit;CREATE TABLE IF NOT EXISTS pg_catalog.stll_limit(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,hit_limit CHAR(1) NOT NULL  ENCODE lzo	  ,checksum BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_limit owner to rdsdb;--DROP TABLE pg_catalog.stll_load_commits;CREATE TABLE IF NOT EXISTS pg_catalog.stll_load_commits(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,name CHAR(256) NOT NULL  ENCODE lzo	  ,filename CHAR(256) NOT NULL  ENCODE lzo	  ,byte_offset INTEGER NOT NULL  ENCODE az64	  ,lines_scanned INTEGER NOT NULL  ENCODE az64	  ,errors INTEGER NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,curtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,file_format CHAR(16) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_load_commits owner to rdsdb;--DROP TABLE pg_catalog.stll_load_error_info;CREATE TABLE IF NOT EXISTS pg_catalog.stll_load_error_info(	userid INTEGER NOT NULL  ENCODE az64	  ,"session" INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,field INTEGER NOT NULL  ENCODE az64	  ,value CHAR(100) NOT NULL  ENCODE lzo	  ,is_null CHAR(1) NOT NULL  ENCODE lzo	  ,"type" CHAR(10) NOT NULL  ENCODE lzo	  ,tmod CHAR(10) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_load_error_info owner to rdsdb;--DROP TABLE pg_catalog.stll_load_errors;CREATE TABLE IF NOT EXISTS pg_catalog.stll_load_errors(	userid INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"session" INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,filename CHAR(256) NOT NULL  ENCODE lzo	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,colname CHAR(127) NOT NULL  ENCODE lzo	  ,"type" CHAR(10) NOT NULL  ENCODE lzo	  ,col_length CHAR(10) NOT NULL  ENCODE lzo	  ,"position" INTEGER NOT NULL  ENCODE az64	  ,raw_line CHAR(1024) NOT NULL  ENCODE lzo	  ,raw_field_value CHAR(1024) NOT NULL  ENCODE lzo	  ,err_code INTEGER NOT NULL  ENCODE az64	  ,err_reason CHAR(100) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_load_errors owner to rdsdb;--DROP TABLE pg_catalog.stll_load_options;CREATE TABLE IF NOT EXISTS pg_catalog.stll_load_options(	query BIGINT NOT NULL  ENCODE az64	  ,row_count BIGINT NOT NULL  ENCODE az64	  ,source INTEGER NOT NULL  ENCODE az64	  ,"format" INTEGER NOT NULL  ENCODE az64	  ,authentication INTEGER NOT NULL  ENCODE az64	  ,compression_type INTEGER NOT NULL  ENCODE az64	  ,"encoding" INTEGER NOT NULL  ENCODE az64	  ,"compupdate" INTEGER NOT NULL  ENCODE az64	  ,"comprows" INTEGER NOT NULL  ENCODE az64	  ,max_error INTEGER NOT NULL  ENCODE az64	  ,err_count INTEGER NOT NULL  ENCODE az64	  ,read_ratio INTEGER NOT NULL  ENCODE az64	  ,ignore_header INTEGER NOT NULL  ENCODE az64	  ,cross_region CHAR(15) NOT NULL  ENCODE lzo	  ,opt_delimiter INTEGER NOT NULL  ENCODE az64	  ,opt_statupdate INTEGER NOT NULL  ENCODE az64	  ,opt_fixedwidth INTEGER NOT NULL  ENCODE az64	  ,opt_column_list INTEGER NOT NULL  ENCODE az64	  ,opt_temp_table INTEGER NOT NULL  ENCODE az64	  ,opt_manifest INTEGER NOT NULL  ENCODE az64	  ,opt_jsonpath INTEGER NOT NULL  ENCODE az64	  ,opt_csv INTEGER NOT NULL  ENCODE az64	  ,opt_ssh INTEGER NOT NULL  ENCODE az64	  ,opt_encrypted INTEGER NOT NULL  ENCODE az64	  ,opt_acceptanydate INTEGER NOT NULL  ENCODE az64	  ,opt_acceptinvchars INTEGER NOT NULL  ENCODE az64	  ,opt_blankasnull INTEGER NOT NULL  ENCODE az64	  ,opt_dateformat INTEGER NOT NULL  ENCODE az64	  ,opt_emptyasnull INTEGER NOT NULL  ENCODE az64	  ,opt_escape INTEGER NOT NULL  ENCODE az64	  ,opt_explicit_ids INTEGER NOT NULL  ENCODE az64	  ,opt_fillrecord INTEGER NOT NULL  ENCODE az64	  ,opt_ignoreblanklines INTEGER NOT NULL  ENCODE az64	  ,opt_null_as INTEGER NOT NULL  ENCODE az64	  ,opt_removequotes INTEGER NOT NULL  ENCODE az64	  ,opt_roundec INTEGER NOT NULL  ENCODE az64	  ,opt_timeformat INTEGER NOT NULL  ENCODE az64	  ,opt_trimblanks INTEGER NOT NULL  ENCODE az64	  ,opt_truncatecolumns INTEGER NOT NULL  ENCODE az64	  ,opt_noload INTEGER NOT NULL  ENCODE az64	  ,opt_simplify INTEGER NOT NULL  ENCODE az64	  ,opt_simplify_threshold DOUBLE PRECISION NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_load_options owner to rdsdb;--DROP TABLE pg_catalog.stll_load_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stll_load_trace(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,name CHAR(256) NOT NULL  ENCODE lzo	  ,bytes_scanned BIGINT NOT NULL  ENCODE az64	  ,message CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_load_trace owner to rdsdb;--DROP TABLE pg_catalog.stll_loaderror_detail;CREATE TABLE IF NOT EXISTS pg_catalog.stll_loaderror_detail(	userid INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,"session" INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,filename CHAR(256) NOT NULL  ENCODE lzo	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,field INTEGER NOT NULL  ENCODE az64	  ,colname CHAR(1024) NOT NULL  ENCODE lzo	  ,value CHAR(1024) NOT NULL  ENCODE lzo	  ,is_null INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(10) NOT NULL  ENCODE lzo	  ,col_length CHAR(10) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_loaderror_detail owner to rdsdb;--DROP TABLE pg_catalog.stll_lwlock;CREATE TABLE IF NOT EXISTS pg_catalog.stll_lwlock(	log_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,lwlockid INTEGER NOT NULL  ENCODE az64	  ,lwlock_name CHAR(50) NOT NULL  ENCODE lzo	  ,"mode" CHAR(25) NOT NULL  ENCODE lzo	  ,acquire_wait_us BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_lwlock owner to rdsdb;--DROP TABLE pg_catalog.stll_mark_partitions;CREATE TABLE IF NOT EXISTS pg_catalog.stll_mark_partitions(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"action" CHAR(7) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_mark_partitions owner to rdsdb;--DROP TABLE pg_catalog.stll_mem_alloc_history;CREATE TABLE IF NOT EXISTS pg_catalog.stll_mem_alloc_history(	process CHAR(32) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,alloc INTEGER NOT NULL  ENCODE az64	  ,address BIGINT NOT NULL  ENCODE az64	  ,size INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_mem_alloc_history owner to rdsdb;--DROP TABLE pg_catalog.stll_mem_block_details;CREATE TABLE IF NOT EXISTS pg_catalog.stll_mem_block_details(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(15) NOT NULL  ENCODE lzo	  ,uid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,process CHAR(30) NOT NULL  ENCODE lzo	  ,qid INTEGER NOT NULL  ENCODE az64	  ,requested BIGINT NOT NULL  ENCODE az64	  ,roundedsize BIGINT NOT NULL  ENCODE az64	  ,page BIGINT NOT NULL  ENCODE az64	  ,buddy_page BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_mem_block_details owner to rdsdb;--DROP TABLE pg_catalog.stll_mem_freelist;CREATE TABLE IF NOT EXISTS pg_catalog.stll_mem_freelist(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,uid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,requested BIGINT NOT NULL  ENCODE az64	  ,roundedsize BIGINT NOT NULL  ENCODE az64	  ,page BIGINT NOT NULL  ENCODE az64	  ,leaked INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_mem_freelist owner to rdsdb;--DROP TABLE pg_catalog.stll_mem_leaks;CREATE TABLE IF NOT EXISTS pg_catalog.stll_mem_leaks(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,uid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,requested BIGINT NOT NULL  ENCODE az64	  ,allocated BIGINT NOT NULL  ENCODE az64	  ,page BIGINT NOT NULL  ENCODE az64	  ,leaked INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_mem_leaks owner to rdsdb;--DROP TABLE pg_catalog.stll_memefficiency;CREATE TABLE IF NOT EXISTS pg_catalog.stll_memefficiency(	recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,memrequested BIGINT NOT NULL  ENCODE az64	  ,memtotal BIGINT NOT NULL  ENCODE az64	  ,overhead BIGINT NOT NULL  ENCODE az64	  ,wastage DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,counter BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_memefficiency owner to rdsdb;--DROP TABLE pg_catalog.stll_memhisto;CREATE TABLE IF NOT EXISTS pg_catalog.stll_memhisto(	recordtime BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,two INTEGER NOT NULL  ENCODE az64	  ,four INTEGER NOT NULL  ENCODE az64	  ,eight INTEGER NOT NULL  ENCODE az64	  ,sixteen INTEGER NOT NULL  ENCODE az64	  ,thirtytwo INTEGER NOT NULL  ENCODE az64	  ,sixtyfour INTEGER NOT NULL  ENCODE az64	  ,onetwentyeight INTEGER NOT NULL  ENCODE az64	  ,twofiftysix INTEGER NOT NULL  ENCODE az64	  ,fivetwelve INTEGER NOT NULL  ENCODE az64	  ,onekb INTEGER NOT NULL  ENCODE az64	  ,twokb INTEGER NOT NULL  ENCODE az64	  ,fourkb INTEGER NOT NULL  ENCODE az64	  ,eightkb INTEGER NOT NULL  ENCODE az64	  ,sixteenkb INTEGER NOT NULL  ENCODE az64	  ,thirtytwokb INTEGER NOT NULL  ENCODE az64	  ,sixtyfourkb INTEGER NOT NULL  ENCODE az64	  ,onetwentyeightkb INTEGER NOT NULL  ENCODE az64	  ,twofiftysixkb INTEGER NOT NULL  ENCODE az64	  ,fivetwelvekb INTEGER NOT NULL  ENCODE az64	  ,onemb INTEGER NOT NULL  ENCODE az64	  ,twomb INTEGER NOT NULL  ENCODE az64	  ,fourmb INTEGER NOT NULL  ENCODE az64	  ,eightmb INTEGER NOT NULL  ENCODE az64	  ,sixteenmb INTEGER NOT NULL  ENCODE az64	  ,thirtytwomb INTEGER NOT NULL  ENCODE az64	  ,sixtyfourmb INTEGER NOT NULL  ENCODE az64	  ,onetwentyeightmb INTEGER NOT NULL  ENCODE az64	  ,twofiftysixmb INTEGER NOT NULL  ENCODE az64	  ,fivetwelvemb INTEGER NOT NULL  ENCODE az64	  ,onegb INTEGER NOT NULL  ENCODE az64	  ,twogb INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_memhisto owner to rdsdb;--DROP TABLE pg_catalog.stll_memory_pressure_actions;CREATE TABLE IF NOT EXISTS pg_catalog.stll_memory_pressure_actions(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,memory_type CHAR(64) NOT NULL  ENCODE lzo	  ,action_type CHAR(64) NOT NULL  ENCODE lzo	  ,state INTEGER NOT NULL  ENCODE az64	  ,"process_type" CHAR(64) NOT NULL  ENCODE lzo	  ,query INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,shared_mem_used BIGINT NOT NULL  ENCODE az64	  ,heap_mem_used BIGINT NOT NULL  ENCODE az64	  ,pinned_blocks_mem_used BIGINT NOT NULL  ENCODE az64	  ,src_pid INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_memory_pressure_actions owner to rdsdb;--DROP TABLE pg_catalog.stll_memory_pressure_state;CREATE TABLE IF NOT EXISTS pg_catalog.stll_memory_pressure_state(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,memory_type CHAR(64) NOT NULL  ENCODE lzo	  ,state INTEGER NOT NULL  ENCODE az64	  ,last_state INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_memory_pressure_state owner to rdsdb;--DROP TABLE pg_catalog.stll_memory_pressure_suspects;CREATE TABLE IF NOT EXISTS pg_catalog.stll_memory_pressure_suspects(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,state INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,shared_mem_used BIGINT NOT NULL  ENCODE az64	  ,heap_mem_used BIGINT NOT NULL  ENCODE az64	  ,num_blocks_pinned BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_memory_pressure_suspects owner to rdsdb;--DROP TABLE pg_catalog.stll_merge;CREATE TABLE IF NOT EXISTS pg_catalog.stll_merge(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_merge owner to rdsdb;--DROP TABLE pg_catalog.stll_mergejoin;CREATE TABLE IF NOT EXISTS pg_catalog.stll_mergejoin(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,distribution INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_mergejoin owner to rdsdb;--DROP TABLE pg_catalog.stll_metadata_step;CREATE TABLE IF NOT EXISTS pg_catalog.stll_metadata_step(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_metadata_step owner to rdsdb;--DROP TABLE pg_catalog.stll_minmax_errors;CREATE TABLE IF NOT EXISTS pg_catalog.stll_minmax_errors(	logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64	  ,error_msg CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_minmax_errors owner to rdsdb;--DROP TABLE pg_catalog.stll_misc_sys_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stll_misc_sys_stat(	currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,bs_queue_cap BIGINT NOT NULL  ENCODE az64	  ,free_bs_workers BIGINT NOT NULL  ENCODE az64	  ,reg_queue_cap BIGINT NOT NULL  ENCODE az64	  ,free_reg_workers BIGINT NOT NULL  ENCODE az64	  ,free_shared_mem_mb BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_misc_sys_stat owner to rdsdb;--DROP TABLE pg_catalog.stll_ml_create_model_log;CREATE TABLE IF NOT EXISTS pg_catalog.stll_ml_create_model_log(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,create_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,schema_id INTEGER NOT NULL  ENCODE az64	  ,model_name CHAR(128) NOT NULL  ENCODE lzo	  ,model_id INTEGER NOT NULL  ENCODE az64	  ,"statement" CHAR(4000) NOT NULL  ENCODE lzo	  ,algo_meta CHAR(4000) NOT NULL  ENCODE lzo	  ,exec_meta CHAR(4000) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_ml_create_model_log owner to rdsdb;--DROP TABLE pg_catalog.stll_ml_log;CREATE TABLE IF NOT EXISTS pg_catalog.stll_ml_log(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,model_name CHAR(128) NOT NULL  ENCODE lzo	  ,model_id INTEGER NOT NULL  ENCODE az64	  ,operation CHAR(15) NOT NULL  ENCODE lzo	  ,message CHAR(1024) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_ml_log owner to rdsdb;--DROP TABLE pg_catalog.stll_ml_manager_log;CREATE TABLE IF NOT EXISTS pg_catalog.stll_ml_manager_log(	pid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,message CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_ml_manager_log owner to rdsdb;--DROP TABLE pg_catalog.stll_ml_model_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_ml_model_stats(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,model_name CHAR(128) NOT NULL  ENCODE lzo	  ,inference_type CHAR(30) NOT NULL  ENCODE lzo	  ,is_auto INTEGER NOT NULL  ENCODE az64	  ,"model_type" CHAR(20) NOT NULL  ENCODE lzo	  ,is_kms INTEGER NOT NULL  ENCODE az64	  ,is_s3_gc INTEGER NOT NULL  ENCODE az64	  ,param_count INTEGER NOT NULL  ENCODE az64	  ,is_vpc INTEGER NOT NULL  ENCODE az64	  ,full_stmt CHAR(4000) NOT NULL  ENCODE lzo	  ,algo_meta CHAR(4000) NOT NULL  ENCODE lzo	  ,exec_meta CHAR(4000) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_ml_model_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_ml_neo_memory_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stll_ml_neo_memory_usage(	record_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,model_name CHAR(64) NOT NULL  ENCODE lzo	  ,model_path CHAR(1024) NOT NULL  ENCODE lzo	  ,"model_type" INTEGER NOT NULL  ENCODE az64	  ,num_inputs INTEGER NOT NULL  ENCODE az64	  ,num_outputs INTEGER NOT NULL  ENCODE az64	  ,file_size INTEGER NOT NULL  ENCODE az64	  ,mem_used INTEGER NOT NULL  ENCODE az64	  ,dlr_version CHAR(64) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_ml_neo_memory_usage owner to rdsdb;--DROP TABLE pg_catalog.stll_ml_sagemaker_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_ml_sagemaker_error(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,request_type CHAR(64) NOT NULL  ENCODE lzo	  ,job_arn CHAR(64) NOT NULL  ENCODE lzo	  ,exception_name CHAR(128) NOT NULL  ENCODE lzo	  ,message CHAR(4000) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_ml_sagemaker_error owner to rdsdb;--DROP TABLE pg_catalog.stll_ml_sagemaker_request;CREATE TABLE IF NOT EXISTS pg_catalog.stll_ml_sagemaker_request(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,request_type CHAR(64) NOT NULL  ENCODE lzo	  ,request_payload CHAR(4000) NOT NULL  ENCODE lzo	  ,success INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_ml_sagemaker_request owner to rdsdb;--DROP TABLE pg_catalog.stll_mmf_details;CREATE TABLE IF NOT EXISTS pg_catalog.stll_mmf_details(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,"action" INTEGER NOT NULL  ENCODE az64	  ,source_slice INTEGER NOT NULL  ENCODE az64	  ,col_index INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_mmf_details owner to rdsdb;--DROP TABLE pg_catalog.stll_monitoring_logs_internal;CREATE TABLE IF NOT EXISTS pg_catalog.stll_monitoring_logs_internal(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,thread CHAR(25) NOT NULL  ENCODE lzo	  ,tid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(30) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,message CHAR(500) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_monitoring_logs_internal owner to rdsdb;--DROP TABLE pg_catalog.stll_multi_statement_violations;CREATE TABLE IF NOT EXISTS pg_catalog.stll_multi_statement_violations(	userid INTEGER NOT NULL  ENCODE az64	  ,"database" CHAR(32) NOT NULL  ENCODE lzo	  ,cmdname CHAR(20) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,padb_version CHAR(50) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_multi_statement_violations owner to rdsdb;--DROP TABLE pg_catalog.stll_mutex_contention;CREATE TABLE IF NOT EXISTS pg_catalog.stll_mutex_contention(	process CHAR(32) NOT NULL  ENCODE lzo	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,attempts INTEGER NOT NULL  ENCODE az64	  ,waitpid INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_mutex_contention owner to rdsdb;--DROP TABLE pg_catalog.stll_mv_aqmv;CREATE TABLE IF NOT EXISTS pg_catalog.stll_mv_aqmv(	query BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,candidates INTEGER NOT NULL  ENCODE az64	  ,matches INTEGER NOT NULL  ENCODE az64	  ,aqmv_cost DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,original_cost DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,costing_time INTEGER NOT NULL  ENCODE az64	  ,aqmv_status INTEGER NOT NULL  ENCODE az64	  ,original_exec_time_est INTEGER NOT NULL  ENCODE az64	  ,original_exec_time_est_error INTEGER NOT NULL  ENCODE az64	  ,aqmv_exec_time_est INTEGER NOT NULL  ENCODE az64	  ,aqmv_exec_time_est_error INTEGER NOT NULL  ENCODE az64	  ,candidates_fetching_time INTEGER NOT NULL  ENCODE az64	  ,algebra_translation_time INTEGER NOT NULL  ENCODE az64	  ,total_cpu_time INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_mv_aqmv owner to rdsdb;--DROP TABLE pg_catalog.stll_mv_refresh;CREATE TABLE IF NOT EXISTS pg_catalog.stll_mv_refresh(	userid BIGINT NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,schemaoid BIGINT NOT NULL  ENCODE az64	  ,mvoid BIGINT NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,refresh_type CHAR(32) NOT NULL  ENCODE lzo	  ,db_oid BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_mv_refresh owner to rdsdb;--DROP TABLE pg_catalog.stll_mv_state;CREATE TABLE IF NOT EXISTS pg_catalog.stll_mv_state(	userid BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,event_desc CHAR(500) NOT NULL  ENCODE lzo	  ,db_name CHAR(128) NOT NULL  ENCODE lzo	  ,base_table_schema CHAR(128) NOT NULL  ENCODE lzo	  ,base_table_name CHAR(128) NOT NULL  ENCODE lzo	  ,mv_schema CHAR(128) NOT NULL  ENCODE lzo	  ,mv_name CHAR(128) NOT NULL  ENCODE lzo	  ,state CHAR(32) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_mv_state owner to rdsdb;--DROP TABLE pg_catalog.stll_nestloop;CREATE TABLE IF NOT EXISTS pg_catalog.stll_nestloop(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,distribution INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_nestloop owner to rdsdb;--DROP TABLE pg_catalog.stll_net_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stll_net_stat(	currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,sampletime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,iface CHAR(20) NOT NULL  ENCODE lzo	  ,rxbytes BIGINT NOT NULL  ENCODE az64	  ,rxpackets BIGINT NOT NULL  ENCODE az64	  ,rxerrors BIGINT NOT NULL  ENCODE az64	  ,rxdrops BIGINT NOT NULL  ENCODE az64	  ,rxfifo BIGINT NOT NULL  ENCODE az64	  ,rxframe BIGINT NOT NULL  ENCODE az64	  ,rxcompressed BIGINT NOT NULL  ENCODE az64	  ,rxmulticast BIGINT NOT NULL  ENCODE az64	  ,txbytes BIGINT NOT NULL  ENCODE az64	  ,txpackets BIGINT NOT NULL  ENCODE az64	  ,txerrors BIGINT NOT NULL  ENCODE az64	  ,txdrops BIGINT NOT NULL  ENCODE az64	  ,txfifo BIGINT NOT NULL  ENCODE az64	  ,txcollisions BIGINT NOT NULL  ENCODE az64	  ,txcarrier BIGINT NOT NULL  ENCODE az64	  ,txcompressed BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_net_stat owner to rdsdb;--DROP TABLE pg_catalog.stll_netmon_ip;CREATE TABLE IF NOT EXISTS pg_catalog.stll_netmon_ip(	tn INTEGER NOT NULL  ENCODE az64	  ,sn INTEGER NOT NULL  ENCODE az64	  ,"ts" TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,ip CHAR(15) NOT NULL  ENCODE lzo	  ,din INTEGER NOT NULL  ENCODE az64	  ,ihe INTEGER NOT NULL  ENCODE az64	  ,iar INTEGER NOT NULL  ENCODE az64	  ,unk INTEGER NOT NULL  ENCODE az64	  ,idsc INTEGER NOT NULL  ENCODE az64	  ,idlv INTEGER NOT NULL  ENCODE az64	  ,outr INTEGER NOT NULL  ENCODE az64	  ,odsc INTEGER NOT NULL  ENCODE az64	  ,onor INTEGER NOT NULL  ENCODE az64	  ,rf INTEGER NOT NULL  ENCODE az64	  ,ff INTEGER NOT NULL  ENCODE az64	  ,smpl_t INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_netmon_ip owner to rdsdb;--DROP TABLE pg_catalog.stll_netmon_mac;CREATE TABLE IF NOT EXISTS pg_catalog.stll_netmon_mac(	tn INTEGER NOT NULL  ENCODE az64	  ,sn INTEGER NOT NULL  ENCODE az64	  ,"ts" TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,inter CHAR(15) NOT NULL  ENCODE lzo	  ,ip CHAR(15) NOT NULL  ENCODE lzo	  ,pin INTEGER NOT NULL  ENCODE az64	  ,bin INTEGER NOT NULL  ENCODE az64	  ,bout INTEGER NOT NULL  ENCODE az64	  ,pout INTEGER NOT NULL  ENCODE az64	  ,unk INTEGER NOT NULL  ENCODE az64	  ,norcvbuf INTEGER NOT NULL  ENCODE az64	  ,noxmtbuf INTEGER NOT NULL  ENCODE az64	  ,out_errs INTEGER NOT NULL  ENCODE az64	  ,in_errs INTEGER NOT NULL  ENCODE az64	  ,out_drops INTEGER NOT NULL  ENCODE az64	  ,in_drops INTEGER NOT NULL  ENCODE az64	  ,out_colls INTEGER NOT NULL  ENCODE az64	  ,rbytes_rate INTEGER NOT NULL  ENCODE az64	  ,obytes_rate INTEGER NOT NULL  ENCODE az64	  ,smpl_t INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_netmon_mac owner to rdsdb;--DROP TABLE pg_catalog.stll_network_throttle;CREATE TABLE IF NOT EXISTS pg_catalog.stll_network_throttle(	log_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,client_id CHAR(64) NOT NULL  ENCODE lzo	  ,registered INTEGER NOT NULL  ENCODE az64	  ,throttle_step INTEGER NOT NULL  ENCODE az64	  ,max_concurrent_sessions INTEGER NOT NULL  ENCODE az64	  ,num_high_throttle_set INTEGER NOT NULL  ENCODE az64	  ,num_low_throttle_set INTEGER NOT NULL  ENCODE az64	  ,num_low_unthrottle_set INTEGER NOT NULL  ENCODE az64	  ,num_zero_unthrottle_set INTEGER NOT NULL  ENCODE az64	  ,avg_token_wait_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,min_token_wait_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,max_token_wait_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,times_thread_wait_for_token BIGINT NOT NULL  ENCODE az64	  ,avg_token_hold_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,min_token_hold_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,max_token_hold_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,times_thread_held_token BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_network_throttle owner to rdsdb;--DROP TABLE pg_catalog.stll_node_failovers;CREATE TABLE IF NOT EXISTS pg_catalog.stll_node_failovers(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,failed_node CHAR(16) NOT NULL  ENCODE lzo	  ,standby_node CHAR(16) NOT NULL  ENCODE lzo	  ,stopped_veritas INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_node_failovers owner to rdsdb;--DROP TABLE pg_catalog.stll_nullyze;CREATE TABLE IF NOT EXISTS pg_catalog.stll_nullyze(	measuretime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,nullcount BIGINT NOT NULL  ENCODE az64	  ,tbl_name CHAR(30) NOT NULL  ENCODE lzo	  ,col_name CHAR(30) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_nullyze owner to rdsdb;--DROP TABLE pg_catalog.stll_omnisql_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_omnisql_error(	userid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,errcode INTEGER NOT NULL  ENCODE az64	  ,"file" CHAR(90) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,context CHAR(100) NOT NULL  ENCODE lzo	  ,error CHAR(512) NOT NULL  ENCODE lzo	  ,module INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_omnisql_error owner to rdsdb;--DROP TABLE pg_catalog.stll_omnisql_rewrite_rules;CREATE TABLE IF NOT EXISTS pg_catalog.stll_omnisql_rewrite_rules(	query BIGINT NOT NULL  ENCODE az64	  ,"rule" CHAR(50) NOT NULL  ENCODE lzo	  ,count INTEGER NOT NULL  ENCODE az64	  ,"time" BIGINT NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,module INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_omnisql_rewrite_rules owner to rdsdb;--DROP TABLE pg_catalog.stll_omnisql_rewrite_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_omnisql_rewrite_stats(	query BIGINT NOT NULL  ENCODE az64	  ,"time" BIGINT NOT NULL  ENCODE az64	  ,rules INTEGER NOT NULL  ENCODE az64	  ,"result" INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,translation BIGINT NOT NULL  ENCODE az64	  ,printing BIGINT NOT NULL  ENCODE az64	  ,reparsing BIGINT NOT NULL  ENCODE az64	  ,initial_sexp INTEGER NOT NULL  ENCODE az64	  ,rewritten_sexp INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,trivial_rules INTEGER NOT NULL  ENCODE az64	  ,failed_rules INTEGER NOT NULL  ENCODE az64	  ,module INTEGER NOT NULL  ENCODE az64	  ,peak_mem_kb BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_omnisql_rewrite_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_parse;CREATE TABLE IF NOT EXISTS pg_catalog.stll_parse(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_parse owner to rdsdb;--DROP TABLE pg_catalog.stll_perf_histograms;CREATE TABLE IF NOT EXISTS pg_catalog.stll_perf_histograms(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,since TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,name CHAR(64) NOT NULL  ENCODE lzo	  ,mean DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,stdev DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,ten_us INTEGER NOT NULL  ENCODE az64	  ,hundred_us INTEGER NOT NULL  ENCODE az64	  ,one_ms INTEGER NOT NULL  ENCODE az64	  ,ten_ms INTEGER NOT NULL  ENCODE az64	  ,hundred_ms INTEGER NOT NULL  ENCODE az64	  ,one_s INTEGER NOT NULL  ENCODE az64	  ,ten_s INTEGER NOT NULL  ENCODE az64	  ,inf INTEGER NOT NULL  ENCODE az64	  ,min DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,"max" DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,total INTEGER NOT NULL  ENCODE az64	  ,sum DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,node INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_perf_histograms owner to rdsdb;--DROP TABLE pg_catalog.stll_pinned_blocks;CREATE TABLE IF NOT EXISTS pg_catalog.stll_pinned_blocks(	error_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_pinned_blocks owner to rdsdb;--DROP TABLE pg_catalog.stll_plan_explain;CREATE TABLE IF NOT EXISTS pg_catalog.stll_plan_explain(	query BIGINT NOT NULL  ENCODE az64	  ,nid INTEGER NOT NULL  ENCODE az64	  ,"level" INTEGER NOT NULL  ENCODE az64	  ,blockid INTEGER NOT NULL  ENCODE az64	  ,block_nid INTEGER NOT NULL  ENCODE az64	  ,opname CHAR(25) NOT NULL  ENCODE lzo	  ,estimate_rows DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,estimate_width INTEGER NOT NULL  ENCODE az64	  ,total_cost DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,startup_cost DOUBLE PRECISION NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_plan_explain owner to rdsdb;--DROP TABLE pg_catalog.stll_plan_explain_props;CREATE TABLE IF NOT EXISTS pg_catalog.stll_plan_explain_props(	query BIGINT NOT NULL  ENCODE az64	  ,nodeid INTEGER NOT NULL  ENCODE az64	  ,propid INTEGER NOT NULL  ENCODE az64	  ,lineno INTEGER NOT NULL  ENCODE az64	  ,detail CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_plan_explain_props owner to rdsdb;--DROP TABLE pg_catalog.stll_plan_explain_tree;CREATE TABLE IF NOT EXISTS pg_catalog.stll_plan_explain_tree(	query BIGINT NOT NULL  ENCODE az64	  ,nodeid INTEGER NOT NULL  ENCODE az64	  ,parentid INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_plan_explain_tree owner to rdsdb;--DROP TABLE pg_catalog.stll_plan_info;CREATE TABLE IF NOT EXISTS pg_catalog.stll_plan_info(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,nodeid INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,locus INTEGER NOT NULL  ENCODE az64	  ,plannode INTEGER NOT NULL  ENCODE az64	  ,startupcost DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,totalcost DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_plan_info owner to rdsdb;--DROP TABLE pg_catalog.stll_plan_perf;CREATE TABLE IF NOT EXISTS pg_catalog.stll_plan_perf(	query BIGINT NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,component CHAR(50) NOT NULL  ENCODE lzo	  ,count INTEGER NOT NULL  ENCODE az64	  ,udc INTEGER NOT NULL  ENCODE az64	  ,total_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,max_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,min_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,avg_time DOUBLE PRECISION NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_plan_perf owner to rdsdb;--DROP TABLE pg_catalog.stll_plan_qid_map;CREATE TABLE IF NOT EXISTS pg_catalog.stll_plan_qid_map(	query INTEGER NOT NULL  ENCODE az64	  ,plan_qid BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_plan_qid_map owner to rdsdb;--DROP TABLE pg_catalog.stll_plan_querytext;CREATE TABLE IF NOT EXISTS pg_catalog.stll_plan_querytext(	query BIGINT NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,text CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_plan_querytext owner to rdsdb;--DROP TABLE pg_catalog.stll_plan_rule_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_plan_rule_stats(	query BIGINT NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,optimizer CHAR(15) NOT NULL  ENCODE lzo	  ,"rule" CHAR(15) NOT NULL  ENCODE lzo	  ,match_count INTEGER NOT NULL  ENCODE az64	  ,applicable_count INTEGER NOT NULL  ENCODE az64	  ,apply_count INTEGER NOT NULL  ENCODE az64	  ,trasnformed_count INTEGER NOT NULL  ENCODE az64	  ,applicable_total_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,applicable_max_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,applicable_min_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,applicable_avg_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,apply_total_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,apply_max_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,apply_min_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,apply_avg_time DOUBLE PRECISION NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_plan_rule_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_plan_state;CREATE TABLE IF NOT EXISTS pg_catalog.stll_plan_state(	query BIGINT NOT NULL  ENCODE az64	  ,component CHAR(32) NOT NULL  ENCODE lzo	  ,state CHAR(15) NOT NULL  ENCODE lzo	  ,detail CHAR(100) NOT NULL  ENCODE lzo	  ,"label" CHAR(320) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_plan_state owner to rdsdb;--DROP TABLE pg_catalog.stll_prefetch_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_prefetch_stats(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,tableid BIGINT NOT NULL  ENCODE az64	  ,columnid BIGINT NOT NULL  ENCODE az64	  ,numprefetches BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_prefetch_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_print;CREATE TABLE IF NOT EXISTS pg_catalog.stll_print(	process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,message CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_print owner to rdsdb;--DROP TABLE pg_catalog.stll_proc_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stll_proc_stat(	pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,utime BIGINT NOT NULL  ENCODE az64	  ,stime BIGINT NOT NULL  ENCODE az64	  ,processor INTEGER NOT NULL  ENCODE az64	  ,minflt BIGINT NOT NULL  ENCODE az64	  ,maxmemory BIGINT NOT NULL  ENCODE az64	  ,daemonmemory BIGINT NOT NULL  ENCODE az64	  ,block_reads INTEGER NOT NULL  ENCODE az64	  ,block_faults INTEGER NOT NULL  ENCODE az64	  ,total_block_fetchtime BIGINT NOT NULL  ENCODE az64	  ,max_block_fetchtime BIGINT NOT NULL  ENCODE az64	  ,transblock_reads INTEGER NOT NULL  ENCODE az64	  ,transblock_faults INTEGER NOT NULL  ENCODE az64	  ,total_transblock_fetchtime BIGINT NOT NULL  ENCODE az64	  ,max_transblock_fetchtime BIGINT NOT NULL  ENCODE az64	  ,blocks_used BIGINT NOT NULL  ENCODE az64	  ,comm_us BIGINT NOT NULL  ENCODE az64	  ,lock_us BIGINT NOT NULL  ENCODE az64	  ,ipc_us BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_proc_stat owner to rdsdb;--DROP TABLE pg_catalog.stll_process_state;CREATE TABLE IF NOT EXISTS pg_catalog.stll_process_state(	pid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"process_type" INTEGER NOT NULL  ENCODE az64	  ,process_type_str CHAR(64) NOT NULL  ENCODE lzo	  ,record_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,mem_current_virtual_kb BIGINT NOT NULL  ENCODE az64	  ,mem_peak_virtual_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_kb BIGINT NOT NULL  ENCODE az64	  ,mem_peak_rss_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_anon_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_file_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_shared_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_swap_kb BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_process_state owner to rdsdb;--DROP TABLE pg_catalog.stll_project;CREATE TABLE IF NOT EXISTS pg_catalog.stll_project(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_project owner to rdsdb;--DROP TABLE pg_catalog.stll_query;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"database" CHAR(32) NOT NULL  ENCODE lzo	  ,querytxt CHAR(4000) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64	  ,insert_pristine INTEGER NOT NULL  ENCODE az64	  ,concurrency_scaling_status INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query owner to rdsdb;--DROP TABLE pg_catalog.stll_query_block_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_block_stats(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,block_reads INTEGER NOT NULL  ENCODE az64	  ,block_faults INTEGER NOT NULL  ENCODE az64	  ,total_block_fetchtime BIGINT NOT NULL  ENCODE az64	  ,max_block_fetchtime BIGINT NOT NULL  ENCODE az64	  ,transblock_reads INTEGER NOT NULL  ENCODE az64	  ,transblock_faults INTEGER NOT NULL  ENCODE az64	  ,total_transblock_fetchtime BIGINT NOT NULL  ENCODE az64	  ,max_transblock_fetchtime BIGINT NOT NULL  ENCODE az64	  ,blocks_used BIGINT NOT NULL  ENCODE az64	  ,block_reads_already_in_s3 INTEGER NOT NULL  ENCODE az64	  ,disk_fetches BIGINT NOT NULL  ENCODE az64	  ,disk_prefetches BIGINT NOT NULL  ENCODE az64	  ,s3_fetches BIGINT NOT NULL  ENCODE az64	  ,s3_prefetches BIGINT NOT NULL  ENCODE az64	  ,trans_block_fetches BIGINT NOT NULL  ENCODE az64	  ,trans_block_prefetches BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_block_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_query_concurrency_scaling_decision;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_concurrency_scaling_decision(	query INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,xact_version BIGINT NOT NULL  ENCODE az64	  ,suitable_sb_version BIGINT NOT NULL  ENCODE az64	  ,decision_msg CHAR(64) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_concurrency_scaling_decision owner to rdsdb;--DROP TABLE pg_catalog.stll_query_execution_time_prediction;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_execution_time_prediction(	query INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,predicted_exec_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,predicted_exec_time_error_boundary DOUBLE PRECISION NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_execution_time_prediction owner to rdsdb;--DROP TABLE pg_catalog.stll_query_heap_memory_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_heap_memory_usage(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,checkpoint INTEGER NOT NULL  ENCODE az64	  ,heap_mem_usage BIGINT NOT NULL  ENCODE az64	  ,heap_max_mem_usage BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_heap_memory_usage owner to rdsdb;--DROP TABLE pg_catalog.stll_query_internal;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_internal(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"database" CHAR(32) NOT NULL  ENCODE lzo	  ,querytxt CHAR(4000) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_internal owner to rdsdb;--DROP TABLE pg_catalog.stll_query_mem_leaks;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_mem_leaks(	qid INTEGER NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,pname CHAR(15) NOT NULL  ENCODE lzo	  ,size BIGINT NOT NULL  ENCODE az64	  ,rounded BIGINT NOT NULL  ENCODE az64	  ,allocated BIGINT NOT NULL  ENCODE az64	  ,hexa CHAR(65) NOT NULL  ENCODE lzo	  ,ascii CHAR(32) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_mem_leaks owner to rdsdb;--DROP TABLE pg_catalog.stll_query_mem_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_mem_stats(	node INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,max_mem_count BIGINT NOT NULL  ENCODE az64	  ,max_mem_size BIGINT NOT NULL  ENCODE az64	  ,num_pin_count BIGINT NOT NULL  ENCODE az64	  ,num_unpin_count BIGINT NOT NULL  ENCODE az64	  ,max_pinned_count BIGINT NOT NULL  ENCODE az64	  ,now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_mem_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_query_mem_stats_by_type;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_mem_stats_by_type(	node INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(25) NOT NULL  ENCODE lzo	  ,allocated_count BIGINT NOT NULL  ENCODE az64	  ,freed_count BIGINT NOT NULL  ENCODE az64	  ,max_mem_count BIGINT NOT NULL  ENCODE az64	  ,allocated_size BIGINT NOT NULL  ENCODE az64	  ,freed_size BIGINT NOT NULL  ENCODE az64	  ,max_mem_size BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_mem_stats_by_type owner to rdsdb;--DROP TABLE pg_catalog.stll_query_memory_cheating;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_memory_cheating(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,memory_used_mb INTEGER NOT NULL  ENCODE az64	  ,workmem_mb INTEGER NOT NULL  ENCODE az64	  ,sim CHAR(10) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_memory_cheating owner to rdsdb;--DROP TABLE pg_catalog.stll_query_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_metrics(	userid INTEGER NOT NULL  ENCODE az64	  ,service_class INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step_type INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,slices INTEGER NOT NULL  ENCODE az64	  ,max_rows BIGINT NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,max_cpu_time BIGINT NOT NULL  ENCODE az64	  ,cpu_time BIGINT NOT NULL  ENCODE az64	  ,max_blocks_read INTEGER NOT NULL  ENCODE az64	  ,blocks_read BIGINT NOT NULL  ENCODE az64	  ,max_run_time BIGINT NOT NULL  ENCODE az64	  ,run_time BIGINT NOT NULL  ENCODE az64	  ,max_blocks_to_disk BIGINT NOT NULL  ENCODE az64	  ,blocks_to_disk BIGINT NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,max_query_scan_size BIGINT NOT NULL  ENCODE az64	  ,query_scan_size BIGINT NOT NULL  ENCODE az64	  ,query_priority INTEGER NOT NULL  ENCODE az64	  ,query_queue_time BIGINT NOT NULL  ENCODE az64	  ,service_class_name CHAR(64) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_metrics owner to rdsdb;--DROP TABLE pg_catalog.stll_query_prediction;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_prediction(	query INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,execution_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,execution_time_error DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,memory DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,memory_error DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,execution_time_without_compile DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,execution_time_without_compile_error DOUBLE PRECISION NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_prediction owner to rdsdb;--DROP TABLE pg_catalog.stll_query_step_times;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_step_times(	xid BIGINT NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,step_name CHAR(32) NOT NULL  ENCODE lzo	  ,step_type CHAR(32) NOT NULL  ENCODE lzo	  ,step_specific CHAR(32) NOT NULL  ENCODE lzo	  ,step_shared CHAR(32) NOT NULL  ENCODE lzo	  ,step_common CHAR(32) NOT NULL  ENCODE lzo	  ,duration BIGINT NOT NULL  ENCODE az64	  ,on_cpu BIGINT NOT NULL  ENCODE az64	  ,off_cpu BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_step_times owner to rdsdb;--DROP TABLE pg_catalog.stll_query_transmit_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_transmit_metrics(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,send_starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,send_endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,send_time_spent_usec BIGINT NOT NULL  ENCODE az64	  ,send_bytes BIGINT NOT NULL  ENCODE az64	  ,send_rows BIGINT NOT NULL  ENCODE az64	  ,recv_starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,recv_endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,recv_time_spent_usec BIGINT NOT NULL  ENCODE az64	  ,recv_bytes BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_transmit_metrics owner to rdsdb;--DROP TABLE pg_catalog.stll_query_tx_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stll_query_tx_metrics(	query INTEGER NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,time_spent_sending_micros BIGINT NOT NULL  ENCODE az64	  ,num_bytes_sent BIGINT NOT NULL  ENCODE az64	  ,num_rows_sent BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_query_tx_metrics owner to rdsdb;--DROP TABLE pg_catalog.stll_querytext;CREATE TABLE IF NOT EXISTS pg_catalog.stll_querytext(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,text CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_querytext owner to rdsdb;--DROP TABLE pg_catalog.stll_querytext_internal;CREATE TABLE IF NOT EXISTS pg_catalog.stll_querytext_internal(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,text CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_querytext_internal owner to rdsdb;--DROP TABLE pg_catalog.stll_range_insert;CREATE TABLE IF NOT EXISTS pg_catalog.stll_range_insert(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_range_insert owner to rdsdb;--DROP TABLE pg_catalog.stll_redcat_journal_gc_info;CREATE TABLE IF NOT EXISTS pg_catalog.stll_redcat_journal_gc_info(	delete_xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"database" INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(64) NOT NULL  ENCODE lzo	  ,pivot_xid BIGINT NOT NULL  ENCODE az64	  ,pivot_timestamp TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,duration_msec BIGINT NOT NULL  ENCODE az64	  ,num_tuples_deleted BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_redcat_journal_gc_info owner to rdsdb;--DROP TABLE pg_catalog.stll_redshift_proxy_log;CREATE TABLE IF NOT EXISTS pg_catalog.stll_redshift_proxy_log(	"time" TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,client_endpoint CHAR(64) NOT NULL  ENCODE lzo	  ,event CHAR(255) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_redshift_proxy_log owner to rdsdb;--DROP TABLE pg_catalog.stll_rehydration_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stll_rehydration_metrics(	start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,rehydrated_blocks BIGINT NOT NULL  ENCODE az64	  ,primary_reads BIGINT NOT NULL  ENCODE az64	  ,primary_read_latency INTEGER NOT NULL  ENCODE az64	  ,mirror_reads BIGINT NOT NULL  ENCODE az64	  ,mirror_read_latency INTEGER NOT NULL  ENCODE az64	  ,s3_reads BIGINT NOT NULL  ENCODE az64	  ,s3_read_latency INTEGER NOT NULL  ENCODE az64	  ,primary_writes BIGINT NOT NULL  ENCODE az64	  ,primary_write_latency INTEGER NOT NULL  ENCODE az64	  ,mirror_writes BIGINT NOT NULL  ENCODE az64	  ,mirror_write_latency INTEGER NOT NULL  ENCODE az64	  ,in_progress INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,avg_rerep_reqs INTEGER NOT NULL  ENCODE az64	  ,s3_writes BIGINT NOT NULL  ENCODE az64	  ,s3_write_latency INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_rehydration_metrics owner to rdsdb;--DROP TABLE pg_catalog.stll_remote_access_blocklist;CREATE TABLE IF NOT EXISTS pg_catalog.stll_remote_access_blocklist(	logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,local_table_id INTEGER NOT NULL  ENCODE az64	  ,remote_table_id INTEGER NOT NULL  ENCODE az64	  ,col_num INTEGER NOT NULL  ENCODE az64	  ,slice_num INTEGER NOT NULL  ENCODE az64	  ,local_block_id CHAR(64) NOT NULL  ENCODE lzo	  ,remote_block_id CHAR(64) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_remote_access_blocklist owner to rdsdb;--DROP TABLE pg_catalog.stll_replacements;CREATE TABLE IF NOT EXISTS pg_catalog.stll_replacements(	userid INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"session" INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,filename CHAR(256) NOT NULL  ENCODE lzo	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,colname CHAR(127) NOT NULL  ENCODE lzo	  ,raw_line CHAR(1024) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_replacements owner to rdsdb;--DROP TABLE pg_catalog.stll_rereplication;CREATE TABLE IF NOT EXISTS pg_catalog.stll_rereplication(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,id CHAR(64) NOT NULL  ENCODE lzo	  ,flags INTEGER NOT NULL  ENCODE az64	  ,new_node INTEGER NOT NULL  ENCODE az64	  ,new_diskno INTEGER NOT NULL  ENCODE az64	  ,new_address BIGINT NOT NULL  ENCODE az64	  ,context CHAR(24) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_rereplication owner to rdsdb;--DROP TABLE pg_catalog.stll_res_leaks;CREATE TABLE IF NOT EXISTS pg_catalog.stll_res_leaks(	node INTEGER NOT NULL  ENCODE az64	  ,mark INTEGER NOT NULL  ENCODE az64	  ,restype CHAR(30) NOT NULL  ENCODE lzo	  ,leakinfo CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_res_leaks owner to rdsdb;--DROP TABLE pg_catalog.stll_restarted_sessions;CREATE TABLE IF NOT EXISTS pg_catalog.stll_restarted_sessions(	currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,dbname CHAR(50) NOT NULL  ENCODE lzo	  ,newpid INTEGER NOT NULL  ENCODE az64	  ,oldpid INTEGER NOT NULL  ENCODE az64	  ,username CHAR(50) NOT NULL  ENCODE lzo	  ,remotehost CHAR(32) NOT NULL  ENCODE lzo	  ,remoteport CHAR(32) NOT NULL  ENCODE lzo	  ,parkedtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,session_vars CHAR(2000) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_restarted_sessions owner to rdsdb;--DROP TABLE pg_catalog.stll_restarted_sessions_internal;CREATE TABLE IF NOT EXISTS pg_catalog.stll_restarted_sessions_internal(	currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,is_reforkable CHAR(10) NOT NULL  ENCODE lzo	  ,temp_tbl_created CHAR(10) NOT NULL  ENCODE lzo	  ,named_prep_stmt_ct INTEGER NOT NULL  ENCODE az64	  ,unnamed_stmt_ct INTEGER NOT NULL  ENCODE az64	  ,in_xact_blk CHAR(10) NOT NULL  ENCODE lzo	  ,is_read_only CHAR(10) NOT NULL  ENCODE lzo	  ,is_single_stmt_query CHAR(10) NOT NULL  ENCODE lzo	  ,conn_state CHAR(100) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,in_authentication CHAR(10) NOT NULL  ENCODE lzo	  ,is_bootstrap CHAR(10) NOT NULL  ENCODE lzo	  ,is_restarted_session CHAR(10) NOT NULL  ENCODE lzo	  ,is_extended_protocol CHAR(10) NOT NULL  ENCODE lzo	  ,is_idle_connection CHAR(10) NOT NULL  ENCODE lzo	  ,current_executing_command CHAR(10) NOT NULL  ENCODE lzo	  ,is_ssl_compressed CHAR(10) NOT NULL  ENCODE lzo	  ,is_protocol_v3 CHAR(10) NOT NULL  ENCODE lzo	  ,are_commands_repeated CHAR(10) NOT NULL  ENCODE lzo	  ,unsupported_command_sequence CHAR(10) NOT NULL  ENCODE lzo	  ,can_reissue_query CHAR(10) NOT NULL  ENCODE lzo	  ,parked_state_in_proxy CHAR(10) NOT NULL  ENCODE lzo	  ,session_size BIGINT NOT NULL  ENCODE az64	  ,is_inc_resize CHAR(10) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_restarted_sessions_internal owner to rdsdb;--DROP TABLE pg_catalog.stll_restore;CREATE TABLE IF NOT EXISTS pg_catalog.stll_restore(	db_name CHAR(50) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,seq INTEGER NOT NULL  ENCODE az64	  ,backup_name CHAR(256) NOT NULL  ENCODE lzo	  ,backup_label CHAR(64) NOT NULL  ENCODE lzo	  ,source_cluster_name CHAR(32) NOT NULL  ENCODE lzo	  ,source_db_name CHAR(50) NOT NULL  ENCODE lzo	  ,source_backup_starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,backup_type CHAR(12) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,succeeded INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_restore owner to rdsdb;--DROP TABLE pg_catalog.stll_result_cache_history;CREATE TABLE IF NOT EXISTS pg_catalog.stll_result_cache_history(	userid INTEGER NOT NULL  ENCODE az64	  ,cache_hit_query INTEGER NOT NULL  ENCODE az64	  ,source_query INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_result_cache_history owner to rdsdb;--DROP TABLE pg_catalog.stll_result_cache_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_result_cache_stats(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_entries INTEGER NOT NULL  ENCODE az64	  ,num_valid_entries INTEGER NOT NULL  ENCODE az64	  ,lookup_count BIGINT NOT NULL  ENCODE az64	  ,hit_count BIGINT NOT NULL  ENCODE az64	  ,populate_count BIGINT NOT NULL  ENCODE az64	  ,evict_count BIGINT NOT NULL  ENCODE az64	  ,invalidate_count BIGINT NOT NULL  ENCODE az64	  ,mem_usage BIGINT NOT NULL  ENCODE az64	  ,match_count BIGINT NOT NULL  ENCODE az64	  ,telemetry CHAR(500) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_result_cache_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_return;CREATE TABLE IF NOT EXISTS pg_catalog.stll_return(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,packets INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_return owner to rdsdb;--DROP TABLE pg_catalog.stll_rlf_scan;CREATE TABLE IF NOT EXISTS pg_catalog.stll_rlf_scan(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,section INTEGER NOT NULL  ENCODE az64	  ,total_time BIGINT NOT NULL  ENCODE az64	  ,min_time BIGINT NOT NULL  ENCODE az64	  ,max_time BIGINT NOT NULL  ENCODE az64	  ,windows_processed BIGINT NOT NULL  ENCODE az64	  ,blocks_opened BIGINT NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,materialized_columns CHAR(300) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_rlf_scan owner to rdsdb;--DROP TABLE pg_catalog.stll_rms_calls;CREATE TABLE IF NOT EXISTS pg_catalog.stll_rms_calls(	"transaction" INTEGER NOT NULL  ENCODE az64	  ,api_call CHAR(60) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,duration_us BIGINT NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,num_returned_objects INTEGER NOT NULL  ENCODE az64	  ,status CHAR(128) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_rms_calls owner to rdsdb;--DROP TABLE pg_catalog.stll_rpc;CREATE TABLE IF NOT EXISTS pg_catalog.stll_rpc(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,requests BIGINT NOT NULL  ENCODE az64	  ,rpc_type INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_rpc owner to rdsdb;--DROP TABLE pg_catalog.stll_rtf_save;CREATE TABLE IF NOT EXISTS pg_catalog.stll_rtf_save(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,hash_segment INTEGER NOT NULL  ENCODE az64	  ,hash_step INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_rtf_save owner to rdsdb;--DROP TABLE pg_catalog.stll_rtf_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_rtf_stats(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,hash_segment INTEGER NOT NULL  ENCODE az64	  ,hash_step INTEGER NOT NULL  ENCODE az64	  ,rw_id INTEGER NOT NULL  ENCODE az64	  ,was_disabled CHAR(1) NOT NULL  ENCODE lzo	  ,eval_checked BIGINT NOT NULL  ENCODE az64	  ,eval_rejected BIGINT NOT NULL  ENCODE az64	  ,checked BIGINT NOT NULL  ENCODE az64	  ,rejected BIGINT NOT NULL  ENCODE az64	  ,distributed CHAR(1) NOT NULL  ENCODE lzo	  ,prefetched CHAR(1) NOT NULL  ENCODE lzo	  ,validity_check CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_rtf_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_s3_commit_leak;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3_commit_leak(	logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"key" CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3_commit_leak owner to rdsdb;--DROP TABLE pg_catalog.stll_s3_write_block_debug;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3_write_block_debug(	logtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"key" CHAR(256) NOT NULL  ENCODE lzo	  ,tbl_id INTEGER NOT NULL  ENCODE az64	  ,s3_action CHAR(64) NOT NULL  ENCODE lzo	  ,s3_state CHAR(64) NOT NULL  ENCODE lzo	  ,one_perm_rep CHAR(10) NOT NULL  ENCODE lzo	  ,a_temp CHAR(10) NOT NULL  ENCODE lzo	  ,is_metadata CHAR(10) NOT NULL  ENCODE lzo	  ,flags INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,colnum INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,tombstoned_id INTEGER NOT NULL  ENCODE az64	  ,backup_id CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3_write_block_debug owner to rdsdb;--DROP TABLE pg_catalog.stll_s3client;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3client(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,http_method CHAR(64) NOT NULL  ENCODE lzo	  ,s3_action CHAR(64) NOT NULL  ENCODE lzo	  ,bucket CHAR(64) NOT NULL  ENCODE lzo	  ,"key" CHAR(256) NOT NULL  ENCODE lzo	  ,transfer_size BIGINT NOT NULL  ENCODE az64	  ,data_size BIGINT NOT NULL  ENCODE az64	  ,start_time BIGINT NOT NULL  ENCODE az64	  ,end_time BIGINT NOT NULL  ENCODE az64	  ,transfer_time BIGINT NOT NULL  ENCODE az64	  ,compression_time BIGINT NOT NULL  ENCODE az64	  ,connect_time BIGINT NOT NULL  ENCODE az64	  ,app_connect_time BIGINT NOT NULL  ENCODE az64	  ,retries INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(32) NOT NULL  ENCODE lzo	  ,extended_request_id CHAR(128) NOT NULL  ENCODE lzo	  ,ip_address CHAR(64) NOT NULL  ENCODE lzo	  ,thread_id INTEGER NOT NULL  ENCODE az64	  ,original_start_time_us BIGINT NOT NULL  ENCODE az64	  ,total_transfer_time_us_with_retries BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,tbl_id INTEGER NOT NULL  ENCODE az64	  ,one_perm_rep INTEGER NOT NULL  ENCODE az64	  ,flags INTEGER NOT NULL  ENCODE az64	  ,s3_write_type CHAR(64) NOT NULL  ENCODE lzo	  ,is_s3commit_write INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3client owner to rdsdb;--DROP TABLE pg_catalog.stll_s3client_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3client_error(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,sliceid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,http_method CHAR(64) NOT NULL  ENCODE lzo	  ,s3_action CHAR(64) NOT NULL  ENCODE lzo	  ,bucket CHAR(64) NOT NULL  ENCODE lzo	  ,"key" CHAR(256) NOT NULL  ENCODE lzo	  ,error CHAR(1024) NOT NULL  ENCODE lzo	  ,retry_count INTEGER NOT NULL  ENCODE az64	  ,curl_code INTEGER NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,resolve_time BIGINT NOT NULL  ENCODE az64	  ,connect_time BIGINT NOT NULL  ENCODE az64	  ,transfer_size BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,one_perm_rep INTEGER NOT NULL  ENCODE az64	  ,flags INTEGER NOT NULL  ENCODE az64	  ,s3_write_type CHAR(64) NOT NULL  ENCODE lzo	  ,is_s3commit_write INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3client_error owner to rdsdb;--DROP TABLE pg_catalog.stll_s3client_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3client_trace(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,http_method CHAR(64) NOT NULL  ENCODE lzo	  ,s3_action CHAR(64) NOT NULL  ENCODE lzo	  ,bucket CHAR(64) NOT NULL  ENCODE lzo	  ,"key" CHAR(256) NOT NULL  ENCODE lzo	  ,message CHAR(256) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,one_perm_rep INTEGER NOT NULL  ENCODE az64	  ,flags INTEGER NOT NULL  ENCODE az64	  ,s3_write_type CHAR(64) NOT NULL  ENCODE lzo	  ,is_s3commit_write INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3client_trace owner to rdsdb;--DROP TABLE pg_catalog.stll_s3commit_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3commit_stats(	xid BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,s3_write_untagged_latency BIGINT NOT NULL  ENCODE az64	  ,s3_write_add_tag_latency BIGINT NOT NULL  ENCODE az64	  ,s3_write_delete_tag_latency BIGINT NOT NULL  ENCODE az64	  ,num_untagged_s3_writes BIGINT NOT NULL  ENCODE az64	  ,num_add_tags_issued_to_s3 BIGINT NOT NULL  ENCODE az64	  ,num_delete_tags_issued_to_s3 BIGINT NOT NULL  ENCODE az64	  ,dynamo_write_avg_latency_usec BIGINT NOT NULL  ENCODE az64	  ,synced_commits_to_s3 INTEGER NOT NULL  ENCODE az64	  ,s3commit_enable_latency BIGINT NOT NULL  ENCODE az64	  ,s3commit_disable_latency BIGINT NOT NULL  ENCODE az64	  ,dynamo_get_avg_latency_usec BIGINT NOT NULL  ENCODE az64	  ,num_tossed_guids BIGINT NOT NULL  ENCODE az64	  ,num_tombstoned_guids BIGINT NOT NULL  ENCODE az64	  ,num_untagged_untracked BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3commit_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_s3list;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3list(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,bucket CHAR(256) NOT NULL  ENCODE lzo	  ,prefix CHAR(256) NOT NULL  ENCODE lzo	  ,"recursive" CHAR(1) NOT NULL  ENCODE lzo	  ,retrieved_files INTEGER NOT NULL  ENCODE az64	  ,max_file_size BIGINT NOT NULL  ENCODE az64	  ,avg_file_size DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,duration BIGINT NOT NULL  ENCODE az64	  ,generated_splits INTEGER NOT NULL  ENCODE az64	  ,avg_split_length DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,scan_type INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3list owner to rdsdb;--DROP TABLE pg_catalog.stll_s3log;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3log(	userid INTEGER NOT NULL  ENCODE az64	  ,is_internal INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,message CHAR(512) NOT NULL  ENCODE lzo	  ,scan_type INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(16) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3log owner to rdsdb;--DROP TABLE pg_catalog.stll_s3partition_elimination;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3partition_elimination(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,total_partitions INTEGER NOT NULL  ENCODE az64	  ,qualified_partitions INTEGER NOT NULL  ENCODE az64	  ,"assignment" CHAR(1) NOT NULL  ENCODE lzo	  ,duration BIGINT NOT NULL  ENCODE az64	  ,assigned_partitions INTEGER NOT NULL  ENCODE az64	  ,scan_type INTEGER NOT NULL  ENCODE az64	  ,fetched_partitions INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3partition_elimination owner to rdsdb;--DROP TABLE pg_catalog.stll_s3partition_predicate;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3partition_predicate(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"predicate" CHAR(1024) NOT NULL  ENCODE lzo	  ,effectiveness CHAR(32) NOT NULL  ENCODE lzo	  ,error CHAR(1024) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3partition_predicate owner to rdsdb;--DROP TABLE pg_catalog.stll_s3pushdown;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3pushdown(	query INTEGER NOT NULL  ENCODE az64	  ,object_type CHAR(24) NOT NULL  ENCODE lzo	  ,oid INTEGER NOT NULL  ENCODE az64	  ,argument_type CHAR(32) NOT NULL  ENCODE lzo	  ,return_type CHAR(16) NOT NULL  ENCODE lzo	  ,is_supported CHAR(1) NOT NULL  ENCODE lzo	  ,external_source CHAR(10) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3pushdown owner to rdsdb;--DROP TABLE pg_catalog.stll_s3query;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3query(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,external_table_name CHAR(136) NOT NULL  ENCODE lzo	  ,is_partitioned CHAR(1) NOT NULL  ENCODE lzo	  ,is_rrscan CHAR(1) NOT NULL  ENCODE lzo	  ,s3_scanned_rows BIGINT NOT NULL  ENCODE az64	  ,s3_scanned_bytes BIGINT NOT NULL  ENCODE az64	  ,s3query_returned_rows BIGINT NOT NULL  ENCODE az64	  ,s3query_returned_bytes BIGINT NOT NULL  ENCODE az64	  ,files INTEGER NOT NULL  ENCODE az64	  ,total_retries INTEGER NOT NULL  ENCODE az64	  ,max_retries INTEGER NOT NULL  ENCODE az64	  ,max_request_duration BIGINT NOT NULL  ENCODE az64	  ,avg_request_duration BIGINT NOT NULL  ENCODE az64	  ,max_request_parallelism INTEGER NOT NULL  ENCODE az64	  ,max_allowed_parallelism INTEGER NOT NULL  ENCODE az64	  ,avg_request_parallelism DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,splits INTEGER NOT NULL  ENCODE az64	  ,total_split_size BIGINT NOT NULL  ENCODE az64	  ,max_split_size BIGINT NOT NULL  ENCODE az64	  ,request_fingerprint BIGINT NOT NULL  ENCODE az64	  ,file_format CHAR(16) NOT NULL  ENCODE lzo	  ,cache_hits INTEGER NOT NULL  ENCODE az64	  ,is_copy INTEGER NOT NULL  ENCODE az64	  ,is_nested CHAR(1) NOT NULL  ENCODE lzo	  ,slowdown_count INTEGER NOT NULL  ENCODE az64	  ,max_concurrent_slowdown_count INTEGER NOT NULL  ENCODE az64	  ,s3_billable_scanned_bytes BIGINT NOT NULL  ENCODE az64	  ,scan_type INTEGER NOT NULL  ENCODE az64	  ,s3query_returned_uncompressed_bytes BIGINT NOT NULL  ENCODE az64	  ,is_lakeformation INTEGER NOT NULL  ENCODE az64	  ,throttled_requests INTEGER NOT NULL  ENCODE az64	  ,peakmem BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3query owner to rdsdb;--DROP TABLE pg_catalog.stll_s3query_billing_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3query_billing_trace(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,requestid CHAR(40) NOT NULL  ENCODE lzo	  ,errtype CHAR(64) NOT NULL  ENCODE lzo	  ,errmsg CHAR(400) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3query_billing_trace owner to rdsdb;--DROP TABLE pg_catalog.stll_s3query_metering;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3query_metering(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,internal_request_uuid CHAR(36) NOT NULL  ENCODE lzo	  ,metered_mbs BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3query_metering owner to rdsdb;--DROP TABLE pg_catalog.stll_s3requests;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3requests(	query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,duration BIGINT NOT NULL  ENCODE az64	  ,retry_count INTEGER NOT NULL  ENCODE az64	  ,returned_rows BIGINT NOT NULL  ENCODE az64	  ,fetched INTEGER NOT NULL  ENCODE az64	  ,file_size BIGINT NOT NULL  ENCODE az64	  ,start_offset BIGINT NOT NULL  ENCODE az64	  ,length BIGINT NOT NULL  ENCODE az64	  ,file_name CHAR(512) NOT NULL  ENCODE lzo	  ,last_timeout BIGINT NOT NULL  ENCODE az64	  ,failed INTEGER NOT NULL  ENCODE az64	  ,etag CHAR(512) NOT NULL  ENCODE lzo	  ,num_splits INTEGER NOT NULL  ENCODE az64	  ,cache_status INTEGER NOT NULL  ENCODE az64	  ,returned_bytes BIGINT NOT NULL  ENCODE az64	  ,s3_scanned_rows BIGINT NOT NULL  ENCODE az64	  ,s3_scanned_bytes BIGINT NOT NULL  ENCODE az64	  ,"location" CHAR(128) NOT NULL  ENCODE lzo	  ,latency_caching_batches BIGINT NOT NULL  ENCODE az64	  ,latency_caching_manifest BIGINT NOT NULL  ENCODE az64	  ,row_groups BIGINT NOT NULL  ENCODE az64	  ,skipped_row_groups BIGINT NOT NULL  ENCODE az64	  ,skipped_rows BIGINT NOT NULL  ENCODE az64	  ,expected_duration BIGINT NOT NULL  ENCODE az64	  ,read_count BIGINT NOT NULL  ENCODE az64	  ,slowdown_count INTEGER NOT NULL  ENCODE az64	  ,scan_type INTEGER NOT NULL  ENCODE az64	  ,s3_physical_scanned_bytes BIGINT NOT NULL  ENCODE az64	  ,returned_uncompressed_bytes BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,peak_memory_utilization INTEGER NOT NULL  ENCODE az64	  ,codegen_time BIGINT NOT NULL  ENCODE az64	  ,total_storage_wait_time BIGINT NOT NULL  ENCODE az64	  ,total_query_cpu_time BIGINT NOT NULL  ENCODE az64	  ,scan_cpu_time BIGINT NOT NULL  ENCODE az64	  ,hostname CHAR(100) NOT NULL  ENCODE lzo	  ,spectrum_starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,spectrum_endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,client_fetch_wait_time BIGINT NOT NULL  ENCODE az64	  ,cache_uncompressed_size BIGINT NOT NULL  ENCODE az64	  ,cache_compressed_size BIGINT NOT NULL  ENCODE az64	  ,cache_compression_latency BIGINT NOT NULL  ENCODE az64	  ,abort_reason INTEGER NOT NULL  ENCODE az64	  ,cache_objects_count INTEGER NOT NULL  ENCODE az64	  ,backoff_time BIGINT NOT NULL  ENCODE az64	  ,connect_retries INTEGER NOT NULL  ENCODE az64	  ,connect_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,exectask_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,fetch_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tokens INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(16) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3requests owner to rdsdb;--DROP TABLE pg_catalog.stll_s3retries;CREATE TABLE IF NOT EXISTS pg_catalog.stll_s3retries(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,uuid CHAR(36) NOT NULL  ENCODE lzo	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,retries INTEGER NOT NULL  ENCODE az64	  ,successful_fetches INTEGER NOT NULL  ENCODE az64	  ,file_size BIGINT NOT NULL  ENCODE az64	  ,start_offset BIGINT NOT NULL  ENCODE az64	  ,length BIGINT NOT NULL  ENCODE az64	  ,"location" CHAR(256) NOT NULL  ENCODE lzo	  ,message CHAR(256) NOT NULL  ENCODE lzo	  ,retry_backoff_ms INTEGER NOT NULL  ENCODE az64	  ,scan_type INTEGER NOT NULL  ENCODE az64	  ,"timeout" BIGINT NOT NULL  ENCODE az64	  ,connect_retries INTEGER NOT NULL  ENCODE az64	  ,connect_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,exectask_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,fast_forward_fetch_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,fetch_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,request_id CHAR(16) NOT NULL  ENCODE lzo	  ,state INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_s3retries owner to rdsdb;--DROP TABLE pg_catalog.stll_sample;CREATE TABLE IF NOT EXISTS pg_catalog.stll_sample(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_sample owner to rdsdb;--DROP TABLE pg_catalog.stll_save;CREATE TABLE IF NOT EXISTS pg_catalog.stll_save(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,is_save_rtf CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_save owner to rdsdb;--DROP TABLE pg_catalog.stll_scan;CREATE TABLE IF NOT EXISTS pg_catalog.stll_scan(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,fetches BIGINT NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_rrscan CHAR(1) NOT NULL  ENCODE lzo	  ,is_delayed_scan CHAR(1) NOT NULL  ENCODE lzo	  ,rows_pre_filter BIGINT NOT NULL  ENCODE az64	  ,rows_pre_user_filter BIGINT NOT NULL  ENCODE az64	  ,perm_table_name CHAR(136) NOT NULL  ENCODE lzo	  ,is_rlf_scan CHAR(1) NOT NULL  ENCODE lzo	  ,is_rlf_scan_reason INTEGER NOT NULL  ENCODE az64	  ,num_em_blocks INTEGER NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,runtime_filtering CHAR(1) NOT NULL  ENCODE lzo	  ,scan_region INTEGER NOT NULL  ENCODE az64	  ,num_sortkey_as_predicate INTEGER NOT NULL  ENCODE az64	  ,row_fetcher_state INTEGER NOT NULL  ENCODE az64	  ,consumed_scan_ranges BIGINT NOT NULL  ENCODE az64	  ,work_stealing_reason BIGINT NOT NULL  ENCODE az64	  ,is_vectorized_scan CHAR(1) NOT NULL  ENCODE lzo	  ,is_vectorized_scan_reason INTEGER NOT NULL  ENCODE az64	  ,row_fetcher_reason BIGINT NOT NULL  ENCODE az64	  ,topology_signature BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_scan owner to rdsdb;--DROP TABLE pg_catalog.stll_scan_range_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_scan_range_stats(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,local_data_slice INTEGER NOT NULL  ENCODE az64	  ,local_compute_slice INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_blocks_to_scan BIGINT NOT NULL  ENCODE az64	  ,total_blocks BIGINT NOT NULL  ENCODE az64	  ,num_scan_ranges BIGINT NOT NULL  ENCODE az64	  ,min_scan_range_size BIGINT NOT NULL  ENCODE az64	  ,max_scan_range_size BIGINT NOT NULL  ENCODE az64	  ,avg_scan_range_size BIGINT NOT NULL  ENCODE az64	  ,num_blf_ranges BIGINT NOT NULL  ENCODE az64	  ,min_blf_range_size BIGINT NOT NULL  ENCODE az64	  ,max_blf_range_size BIGINT NOT NULL  ENCODE az64	  ,avg_blf_range_size BIGINT NOT NULL  ENCODE az64	  ,block_reopen_times BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_scan_range_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_schema_quota_ddl;CREATE TABLE IF NOT EXISTS pg_catalog.stll_schema_quota_ddl(	xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,schema_id INTEGER NOT NULL  ENCODE az64	  ,action_type CHAR(7) NOT NULL  ENCODE lzo	  ,"quota" INTEGER NOT NULL  ENCODE az64	  ,"timestamp" TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_schema_quota_ddl owner to rdsdb;--DROP TABLE pg_catalog.stll_schema_quota_violations;CREATE TABLE IF NOT EXISTS pg_catalog.stll_schema_quota_violations(	ownerid INTEGER NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,schema_id INTEGER NOT NULL  ENCODE az64	  ,schema_name CHAR(128) NOT NULL  ENCODE lzo	  ,"quota" INTEGER NOT NULL  ENCODE az64	  ,disk_usage INTEGER NOT NULL  ENCODE az64	  ,disk_usage_pct DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,"timestamp" TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,disk_usage_diff INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_schema_quota_violations owner to rdsdb;--DROP TABLE pg_catalog.stll_seg_completed_notify;CREATE TABLE IF NOT EXISTS pg_catalog.stll_seg_completed_notify(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,scheduled TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,completed TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_seg_completed_notify owner to rdsdb;--DROP TABLE pg_catalog.stll_segment_ends_cleanly;CREATE TABLE IF NOT EXISTS pg_catalog.stll_segment_ends_cleanly(	userid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,dispatched TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,seg INTEGER NOT NULL  ENCODE az64	  ,global_slice INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_segment_ends_cleanly owner to rdsdb;--DROP TABLE pg_catalog.stll_segment_starts;CREATE TABLE IF NOT EXISTS pg_catalog.stll_segment_starts(	userid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,seg INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_segment_starts owner to rdsdb;--DROP TABLE pg_catalog.stll_sem_pool;CREATE TABLE IF NOT EXISTS pg_catalog.stll_sem_pool(	node INTEGER NOT NULL  ENCODE az64	  ,semid INTEGER NOT NULL  ENCODE az64	  ,semnum INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_sem_pool owner to rdsdb;--DROP TABLE pg_catalog.stll_sem_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stll_sem_stat(	currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,sampletime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,count BIGINT NOT NULL  ENCODE az64	  ,waittime BIGINT NOT NULL  ENCODE az64	  ,longest BIGINT NOT NULL  ENCODE az64	  ,mutex_requests BIGINT NOT NULL  ENCODE az64	  ,name CHAR(25) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_sem_stat owner to rdsdb;--DROP TABLE pg_catalog.stll_sem_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stll_sem_usage(	currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"last" INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,count BIGINT NOT NULL  ENCODE az64	  ,waittime BIGINT NOT NULL  ENCODE az64	  ,longest BIGINT NOT NULL  ENCODE az64	  ,mutex_requests BIGINT NOT NULL  ENCODE az64	  ,name CHAR(25) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_sem_usage owner to rdsdb;--DROP TABLE pg_catalog.stll_serial_safety_net;CREATE TABLE IF NOT EXISTS pg_catalog.stll_serial_safety_net(	xid BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,write_pstamp TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,sstamp TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,is_commit INTEGER NOT NULL  ENCODE az64	  ,ssn_serializer INTEGER NOT NULL  ENCODE az64	  ,cstamp TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,write_pstamp_oid INTEGER NOT NULL  ENCODE az64	  ,write_pstamp_updated_by_read INTEGER NOT NULL  ENCODE az64	  ,sstamp_oid INTEGER NOT NULL  ENCODE az64	  ,write_pstamp_xid BIGINT NOT NULL  ENCODE az64	  ,sstamp_xid BIGINT NOT NULL  ENCODE az64	  ,ro_pstamp TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,max_snapshot_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,ro_pstamp_oid INTEGER NOT NULL  ENCODE az64	  ,ro_pstamp_xid BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_serial_safety_net owner to rdsdb;--DROP TABLE pg_catalog.stll_server_write_timings;CREATE TABLE IF NOT EXISTS pg_catalog.stll_server_write_timings(	node INTEGER NOT NULL  ENCODE az64	  ,instance INTEGER NOT NULL  ENCODE az64	  ,write_size BIGINT NOT NULL  ENCODE az64	  ,wait_for_data BIGINT NOT NULL  ENCODE az64	  ,collect_data BIGINT NOT NULL  ENCODE az64	  ,iolocal BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_server_write_timings owner to rdsdb;--DROP TABLE pg_catalog.stll_session_state;CREATE TABLE IF NOT EXISTS pg_catalog.stll_session_state(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,process INTEGER NOT NULL  ENCODE az64	  ,num_prepared_stmts BIGINT NOT NULL  ENCODE az64	  ,bytes_used BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_session_state owner to rdsdb;--DROP TABLE pg_catalog.stll_sessions;CREATE TABLE IF NOT EXISTS pg_catalog.stll_sessions(	userid INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,process INTEGER NOT NULL  ENCODE az64	  ,user_name CHAR(50) NOT NULL  ENCODE lzo	  ,db_name CHAR(50) NOT NULL  ENCODE lzo	  ,timeout_sec INTEGER NOT NULL  ENCODE az64	  ,timed_out INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_sessions owner to rdsdb;--DROP TABLE pg_catalog.stll_shadow_table_commit;CREATE TABLE IF NOT EXISTS pg_catalog.stll_shadow_table_commit(	xid BIGINT NOT NULL  ENCODE az64	  ,record_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64	  ,lock_duration BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_shadow_table_commit owner to rdsdb;--DROP TABLE pg_catalog.stll_skr_scan_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stll_skr_scan_metrics(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,observed_rrscan_rows_filtered BIGINT NOT NULL  ENCODE az64	  ,observed_post_rrscan_rows_filtered BIGINT NOT NULL  ENCODE az64	  ,estimated_rows_filtered BIGINT NOT NULL  ENCODE az64	  ,observation_type INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_skr_scan_metrics owner to rdsdb;--DROP TABLE pg_catalog.stll_small_table_convert_event;CREATE TABLE IF NOT EXISTS pg_catalog.stll_small_table_convert_event(	xid BIGINT NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,command CHAR(128) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_small_table_convert_event owner to rdsdb;--DROP TABLE pg_catalog.stll_smfaults;CREATE TABLE IF NOT EXISTS pg_catalog.stll_smfaults(	seq INTEGER NOT NULL  ENCODE az64	  ,run INTEGER NOT NULL  ENCODE az64	  ,mon_type CHAR(128) NOT NULL  ENCODE lzo	  ,mon_name CHAR(128) NOT NULL  ENCODE lzo	  ,severity INTEGER NOT NULL  ENCODE az64	  ,resolution_dbup CHAR(128) NOT NULL  ENCODE lzo	  ,resolution_dbdown CHAR(128) NOT NULL  ENCODE lzo	  ,code INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,observer CHAR(15) NOT NULL  ENCODE lzo	  ,culprit CHAR(15) NOT NULL  ENCODE lzo	  ,msg CHAR(256) NOT NULL  ENCODE lzo	  ,xml_extra CHAR(2048) NOT NULL  ENCODE lzo	  ,has_measure_val INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_smfaults owner to rdsdb;--DROP TABLE pg_catalog.stll_smfaults_cleared;CREATE TABLE IF NOT EXISTS pg_catalog.stll_smfaults_cleared(	seq INTEGER NOT NULL  ENCODE az64	  ,run INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,msg CHAR(256) NOT NULL  ENCODE lzo	  ,resolution CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_smfaults_cleared owner to rdsdb;--DROP TABLE pg_catalog.stll_smfaults_mval;CREATE TABLE IF NOT EXISTS pg_catalog.stll_smfaults_mval(	seq INTEGER NOT NULL  ENCODE az64	  ,run INTEGER NOT NULL  ENCODE az64	  ,thresh BIGINT NOT NULL  ENCODE az64	  ,value BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_smfaults_mval owner to rdsdb;--DROP TABLE pg_catalog.stll_smfaults_overflow;CREATE TABLE IF NOT EXISTS pg_catalog.stll_smfaults_overflow(	parent_seq INTEGER NOT NULL  ENCODE az64	  ,parent_run INTEGER NOT NULL  ENCODE az64	  ,seq INTEGER NOT NULL  ENCODE az64	  ,run INTEGER NOT NULL  ENCODE az64	  ,mon_type CHAR(128) NOT NULL  ENCODE lzo	  ,mon_name CHAR(128) NOT NULL  ENCODE lzo	  ,severity INTEGER NOT NULL  ENCODE az64	  ,resolution_dbup CHAR(128) NOT NULL  ENCODE lzo	  ,resolution_dbdown CHAR(128) NOT NULL  ENCODE lzo	  ,code INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,observer CHAR(15) NOT NULL  ENCODE lzo	  ,culprit CHAR(15) NOT NULL  ENCODE lzo	  ,msg CHAR(256) NOT NULL  ENCODE lzo	  ,xml_extra CHAR(2048) NOT NULL  ENCODE lzo	  ,has_measure_val INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_smfaults_overflow owner to rdsdb;--DROP TABLE pg_catalog.stll_smlog;CREATE TABLE IF NOT EXISTS pg_catalog.stll_smlog(	seq INTEGER NOT NULL  ENCODE az64	  ,ip CHAR(15) NOT NULL  ENCODE lzo	  ,process CHAR(15) NOT NULL  ENCODE lzo	  ,"level" INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"file" CHAR(64) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,sys_errno INTEGER NOT NULL  ENCODE az64	  ,errno_str CHAR(64) NOT NULL  ENCODE lzo	  ,msg CHAR(256) NOT NULL  ENCODE lzo	  ,stack CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_smlog owner to rdsdb;--DROP TABLE pg_catalog.stll_snapshotbackup;CREATE TABLE IF NOT EXISTS pg_catalog.stll_snapshotbackup(	snapshotname CHAR(20) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,status CHAR(15) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_snapshotbackup owner to rdsdb;--DROP TABLE pg_catalog.stll_sort;CREATE TABLE IF NOT EXISTS pg_catalog.stll_sort(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_sort owner to rdsdb;--DROP TABLE pg_catalog.stll_sorted_checker;CREATE TABLE IF NOT EXISTS pg_catalog.stll_sorted_checker(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,qid BIGINT NOT NULL  ENCODE az64	  ,relid BIGINT NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,total_rows BIGINT NOT NULL  ENCODE az64	  ,expected_sorted BIGINT NOT NULL  ENCODE az64	  ,checked_rows BIGINT NOT NULL  ENCODE az64	  ,ooo_rows BIGINT NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_sorted_checker owner to rdsdb;--DROP TABLE pg_catalog.stll_sorted_checker_leader;CREATE TABLE IF NOT EXISTS pg_catalog.stll_sorted_checker_leader(	starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,qid BIGINT NOT NULL  ENCODE az64	  ,dbname CHAR(128) NOT NULL  ENCODE lzo	  ,"schema" CHAR(128) NOT NULL  ENCODE lzo	  ,tablename CHAR(128) NOT NULL  ENCODE lzo	  ,relid BIGINT NOT NULL  ENCODE az64	  ,colid BIGINT NOT NULL  ENCODE az64	  ,datatype INTEGER NOT NULL  ENCODE az64	  ,"compression" INTEGER NOT NULL  ENCODE az64	  ,sorted_corrupt INTEGER NOT NULL  ENCODE az64	  ,num_incorrect_sorted_rows BIGINT NOT NULL  ENCODE az64	  ,fixer INTEGER NOT NULL  ENCODE az64	  ,version INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_sorted_checker_leader owner to rdsdb;--DROP TABLE pg_catalog.stll_spatial_column_linker;CREATE TABLE IF NOT EXISTS pg_catalog.stll_spatial_column_linker(	query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,columnname CHAR(400) NOT NULL  ENCODE lzo	  ,sqloperation INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_spatial_column_linker owner to rdsdb;--DROP TABLE pg_catalog.stll_spatial_function;CREATE TABLE IF NOT EXISTS pg_catalog.stll_spatial_function(	query BIGINT NOT NULL  ENCODE az64	  ,functionid INTEGER NOT NULL  ENCODE az64	  ,sqloperation INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_spatial_function owner to rdsdb;--DROP TABLE pg_catalog.stll_spatial_index;CREATE TABLE IF NOT EXISTS pg_catalog.stll_spatial_index(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,num_inner BIGINT NOT NULL  ENCODE az64	  ,num_outer BIGINT NOT NULL  ENCODE az64	  ,pruned_tuples BIGINT NOT NULL  ENCODE az64	  ,"predicate" INTEGER NOT NULL  ENCODE az64	  ,created CHAR(1) NOT NULL  ENCODE lzo	  ,mem_allowance BIGINT NOT NULL  ENCODE az64	  ,predicted_size BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_spatial_index owner to rdsdb;--DROP TABLE pg_catalog.stll_spatial_query;CREATE TABLE IF NOT EXISTS pg_catalog.stll_spatial_query(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query_cmd_type INTEGER NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_spatial_query owner to rdsdb;--DROP TABLE pg_catalog.stll_spatial_simplify;CREATE TABLE IF NOT EXISTS pg_catalog.stll_spatial_simplify(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,line_number BIGINT NOT NULL  ENCODE az64	  ,maximum_tolerance CHAR(30) NOT NULL  ENCODE lzo	  ,maximum_size BIGINT NOT NULL  ENCODE az64	  ,initial_size BIGINT NOT NULL  ENCODE az64	  ,simplified CHAR(1) NOT NULL  ENCODE lzo	  ,final_size BIGINT NOT NULL  ENCODE az64	  ,final_tolerance CHAR(30) NOT NULL  ENCODE lzo	  ,num_iterations BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_spatial_simplify owner to rdsdb;--DROP TABLE pg_catalog.stll_spectrum_cache_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_spectrum_cache_error(	query INTEGER NOT NULL  ENCODE az64	  ,cache_key CHAR(200) NOT NULL  ENCODE lzo	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,error_id INTEGER NOT NULL  ENCODE az64	  ,error_details CHAR(350) NOT NULL  ENCODE lzo	  ,system_error INTEGER NOT NULL  ENCODE az64	  ,request_id CHAR(16) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_spectrum_cache_error owner to rdsdb;--DROP TABLE pg_catalog.stll_spectrum_scan_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_spectrum_scan_error(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"location" CHAR(256) NOT NULL  ENCODE lzo	  ,"rowid" CHAR(2100) NOT NULL  ENCODE lzo	  ,colname CHAR(127) NOT NULL  ENCODE lzo	  ,original_value CHAR(1024) NOT NULL  ENCODE lzo	  ,modified_value CHAR(1024) NOT NULL  ENCODE lzo	  ,"trigger" INTEGER NOT NULL  ENCODE az64	  ,"action" INTEGER NOT NULL  ENCODE az64	  ,action_value CHAR(127) NOT NULL  ENCODE lzo	  ,error_code INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_spectrum_scan_error owner to rdsdb;--DROP TABLE pg_catalog.stll_sshclient_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_sshclient_error(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,sliceid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,ssh_username CHAR(1024) NOT NULL  ENCODE lzo	  ,endpoint CHAR(1024) NOT NULL  ENCODE lzo	  ,command CHAR(4096) NOT NULL  ENCODE lzo	  ,error CHAR(1024) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_sshclient_error owner to rdsdb;--DROP TABLE pg_catalog.stll_ssn_violation;CREATE TABLE IF NOT EXISTS pg_catalog.stll_ssn_violation(	xid BIGINT NOT NULL  ENCODE az64	  ,session_id BIGINT NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,serialization_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pstamp TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,sstamp TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_ssn_violation owner to rdsdb;--DROP TABLE pg_catalog.stll_stack_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stll_stack_trace(	node CHAR(16) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,process CHAR(20) NOT NULL  ENCODE lzo	  ,frame INTEGER NOT NULL  ENCODE az64	  ,address CHAR(20) NOT NULL  ENCODE lzo	  ,instruction CHAR(100) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_stack_trace owner to rdsdb;--DROP TABLE pg_catalog.stll_startup_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stll_startup_metrics(	node INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,phase CHAR(48) NOT NULL  ENCODE lzo	  ,"database" CHAR(32) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_startup_metrics owner to rdsdb;--DROP TABLE pg_catalog.stll_step_parse;CREATE TABLE IF NOT EXISTS pg_catalog.stll_step_parse(	slice INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segnum INTEGER NOT NULL  ENCODE az64	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,field INTEGER NOT NULL  ENCODE az64	  ,"data" CHAR(90) NOT NULL  ENCODE lzo	  ,filename CHAR(90) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_step_parse owner to rdsdb;--DROP TABLE pg_catalog.stll_steps;CREATE TABLE IF NOT EXISTS pg_catalog.stll_steps(	query INTEGER NOT NULL  ENCODE az64	  ,nodeid INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_steps owner to rdsdb;--DROP TABLE pg_catalog.stll_stored_proc_call;CREATE TABLE IF NOT EXISTS pg_catalog.stll_stored_proc_call(	userid INTEGER NOT NULL  ENCODE az64	  ,session_userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"database" CHAR(32) NOT NULL  ENCODE lzo	  ,querytxt CHAR(500) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_stored_proc_call owner to rdsdb;--DROP TABLE pg_catalog.stll_stored_proc_call_map;CREATE TABLE IF NOT EXISTS pg_catalog.stll_stored_proc_call_map(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,from_sp_call INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_stored_proc_call_map owner to rdsdb;--DROP TABLE pg_catalog.stll_stored_proc_messages;CREATE TABLE IF NOT EXISTS pg_catalog.stll_stored_proc_messages(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,loglevel INTEGER NOT NULL  ENCODE az64	  ,message CHAR(1024) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_stored_proc_messages owner to rdsdb;--DROP TABLE pg_catalog.stll_stream_segs;CREATE TABLE IF NOT EXISTS pg_catalog.stll_stream_segs(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,stream INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_stream_segs owner to rdsdb;--DROP TABLE pg_catalog.stll_super_column_linker;CREATE TABLE IF NOT EXISTS pg_catalog.stll_super_column_linker(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,columnname CHAR(400) NOT NULL  ENCODE lzo	  ,sqloperation INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_super_column_linker owner to rdsdb;--DROP TABLE pg_catalog.stll_super_function;CREATE TABLE IF NOT EXISTS pg_catalog.stll_super_function(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,functionid INTEGER NOT NULL  ENCODE az64	  ,sqloperation INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_super_function owner to rdsdb;--DROP TABLE pg_catalog.stll_super_query;CREATE TABLE IF NOT EXISTS pg_catalog.stll_super_query(	userid INTEGER NOT NULL  ENCODE az64	  ,query BIGINT NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query_cmd_type INTEGER NOT NULL  ENCODE az64	  ,num_of_array_nav INTEGER NOT NULL  ENCODE az64	  ,num_of_object_nav INTEGER NOT NULL  ENCODE az64	  ,has_unnest_subquery INTEGER NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_super_query owner to rdsdb;--DROP TABLE pg_catalog.stll_superblock_integrity_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_superblock_integrity_error(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,raw_disk_addr BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_superblock_integrity_error owner to rdsdb;--DROP TABLE pg_catalog.stll_superblock_vacuum;CREATE TABLE IF NOT EXISTS pg_catalog.stll_superblock_vacuum(	leaderstarttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,nodestarttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,nodeendtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,commitstarttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,commitendtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,success INTEGER NOT NULL  ENCODE az64	  ,permbefore BIGINT NOT NULL  ENCODE az64	  ,tempbefore BIGINT NOT NULL  ENCODE az64	  ,leadersnapshotbefore BIGINT NOT NULL  ENCODE az64	  ,pgwalbefore BIGINT NOT NULL  ENCODE az64	  ,metadatabefore BIGINT NOT NULL  ENCODE az64	  ,freebefore BIGINT NOT NULL  ENCODE az64	  ,allocatedbefore BIGINT NOT NULL  ENCODE az64	  ,permafter BIGINT NOT NULL  ENCODE az64	  ,tempafter BIGINT NOT NULL  ENCODE az64	  ,leadersnapshotafter BIGINT NOT NULL  ENCODE az64	  ,pgwalafter BIGINT NOT NULL  ENCODE az64	  ,metadataafter BIGINT NOT NULL  ENCODE az64	  ,freeafter BIGINT NOT NULL  ENCODE az64	  ,allocatedafter BIGINT NOT NULL  ENCODE az64	  ,freelistbefore BIGINT NOT NULL  ENCODE az64	  ,freelistafter BIGINT NOT NULL  ENCODE az64	  ,logbefore BIGINT NOT NULL  ENCODE az64	  ,logafter BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_superblock_vacuum owner to rdsdb;--DROP TABLE pg_catalog.stll_swap;CREATE TABLE IF NOT EXISTS pg_catalog.stll_swap(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,event CHAR(10) NOT NULL  ENCODE lzo	  ,address INTEGER NOT NULL  ENCODE az64	  ,content CHAR(24) NOT NULL  ENCODE lzo	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,size INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_swap owner to rdsdb;--DROP TABLE pg_catalog.stll_system_abort_txn;CREATE TABLE IF NOT EXISTS pg_catalog.stll_system_abort_txn(	xid BIGINT NOT NULL  ENCODE az64	  ,txn_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,txn_idle_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,txn_log_abort_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,txn_check_type INTEGER NOT NULL  ENCODE az64	  ,aborted INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_system_abort_txn owner to rdsdb;--DROP TABLE pg_catalog.stll_system_state;CREATE TABLE IF NOT EXISTS pg_catalog.stll_system_state(	node INTEGER NOT NULL  ENCODE az64	  ,record_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,system_memfree BIGINT NOT NULL  ENCODE az64	  ,system_total BIGINT NOT NULL  ENCODE az64	  ,swap_free BIGINT NOT NULL  ENCODE az64	  ,swap_total BIGINT NOT NULL  ENCODE az64	  ,swap_in BIGINT NOT NULL  ENCODE az64	  ,swap_out BIGINT NOT NULL  ENCODE az64	  ,system_memavailable BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_system_state owner to rdsdb;--DROP TABLE pg_catalog.stll_table_mutex;CREATE TABLE IF NOT EXISTS pg_catalog.stll_table_mutex(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,data_slice INTEGER NOT NULL  ENCODE az64	  ,"mode" INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_table_mutex owner to rdsdb;--DROP TABLE pg_catalog.stll_table_partition_qpd_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_table_partition_qpd_stats(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,partition_id INTEGER NOT NULL  ENCODE az64	  ,sort_key_col INTEGER NOT NULL  ENCODE az64	  ,blocks_read INTEGER NOT NULL  ENCODE az64	  ,blocks_used INTEGER NOT NULL  ENCODE az64	  ,rows_read BIGINT NOT NULL  ENCODE az64	  ,rows_used BIGINT NOT NULL  ENCODE az64	  ,bias_factor DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,query INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_table_partition_qpd_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_table_partition_scan;CREATE TABLE IF NOT EXISTS pg_catalog.stll_table_partition_scan(	query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,part INTEGER NOT NULL  ENCODE az64	  ,blocks_read INTEGER NOT NULL  ENCODE az64	  ,blocks_used INTEGER NOT NULL  ENCODE az64	  ,rows_read BIGINT NOT NULL  ENCODE az64	  ,rows_used BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_table_partition_scan owner to rdsdb;--DROP TABLE pg_catalog.stll_table_partitions_hotness_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_table_partitions_hotness_stats(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,total_wasted_blocks BIGINT NOT NULL  ENCODE az64	  ,total_blocks_read BIGINT NOT NULL  ENCODE az64	  ,total_blocks_used BIGINT NOT NULL  ENCODE az64	  ,no_loss_scans_count BIGINT NOT NULL  ENCODE az64	  ,zero_bias_scans_count BIGINT NOT NULL  ENCODE az64	  ,scan_count BIGINT NOT NULL  ENCODE az64	  ,num_sorted_rows BIGINT NOT NULL  ENCODE az64	  ,num_unsorted_rows BIGINT NOT NULL  ENCODE az64	  ,num_partitions INTEGER NOT NULL  ENCODE az64	  ,avg_qpd DOUBLE PRECISION NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_table_partitions_hotness_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_terminate;CREATE TABLE IF NOT EXISTS pg_catalog.stll_terminate(	pid INTEGER NOT NULL  ENCODE az64	  ,vpid INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,userid INTEGER NOT NULL  ENCODE az64	  ,signal INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_terminate owner to rdsdb;--DROP TABLE pg_catalog.stll_tiered_storage_controller;CREATE TABLE IF NOT EXISTS pg_catalog.stll_tiered_storage_controller(	node_num INTEGER NOT NULL  ENCODE az64	  ,event_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,eviction_type INTEGER NOT NULL  ENCODE az64	  ,node_sb_version BIGINT NOT NULL  ENCODE az64	  ,leader_sb_version BIGINT NOT NULL  ENCODE az64	  ,request_accepted INTEGER NOT NULL  ENCODE az64	  ,used_capacity_perc INTEGER NOT NULL  ENCODE az64	  ,blks_evictable BIGINT NOT NULL  ENCODE az64	  ,blks_to_backup BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_tiered_storage_controller owner to rdsdb;--DROP TABLE pg_catalog.stll_tiered_storage_s3_blocks;CREATE TABLE IF NOT EXISTS pg_catalog.stll_tiered_storage_s3_blocks(	node_num INTEGER NOT NULL  ENCODE az64	  ,event_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_blocks_evicted BIGINT NOT NULL  ENCODE az64	  ,on_demand_eviction INTEGER NOT NULL  ENCODE az64	  ,superblock_version BIGINT NOT NULL  ENCODE az64	  ,transaction_id BIGINT NOT NULL  ENCODE az64	  ,local_capacity BIGINT NOT NULL  ENCODE az64	  ,ts_cache_elems BIGINT NOT NULL  ENCODE az64	  ,blks_evictable BIGINT NOT NULL  ENCODE az64	  ,blks_to_backup BIGINT NOT NULL  ENCODE az64	  ,evicted_without_reads BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_tiered_storage_s3_blocks owner to rdsdb;--DROP TABLE pg_catalog.stll_tombstone;CREATE TABLE IF NOT EXISTS pg_catalog.stll_tombstone(	"type" CHAR(128) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,nodenum INTEGER NOT NULL  ENCODE az64	  ,toss_guc_value INTEGER NOT NULL  ENCODE az64	  ,total BIGINT NOT NULL  ENCODE az64	  ,tombstoned BIGINT NOT NULL  ENCODE az64	  ,tossed_min_qid BIGINT NOT NULL  ENCODE az64	  ,tossed_table_ref BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_tombstone owner to rdsdb;--DROP TABLE pg_catalog.stll_tr_conflict;CREATE TABLE IF NOT EXISTS pg_catalog.stll_tr_conflict(	xact_id BIGINT NOT NULL  ENCODE az64	  ,process_id BIGINT NOT NULL  ENCODE az64	  ,xact_start_ts TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,abort_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,table_id BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_tr_conflict owner to rdsdb;--DROP TABLE pg_catalog.stll_transaction_read_write_set;CREATE TABLE IF NOT EXISTS pg_catalog.stll_transaction_read_write_set(	xid BIGINT NOT NULL  ENCODE az64	  ,table_id BIGINT NOT NULL  ENCODE az64	  ,is_write INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_transaction_read_write_set owner to rdsdb;--DROP TABLE pg_catalog.stll_udf;CREATE TABLE IF NOT EXISTS pg_catalog.stll_udf(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,udfid INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_udf owner to rdsdb;--DROP TABLE pg_catalog.stll_udf_compile_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_udf_compile_error(	userid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,error CHAR(4096) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_udf_compile_error owner to rdsdb;--DROP TABLE pg_catalog.stll_udf_log;CREATE TABLE IF NOT EXISTS pg_catalog.stll_udf_log(	query BIGINT NOT NULL  ENCODE az64	  ,message CHAR(4096) NOT NULL  ENCODE lzo	  ,created TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,filename CHAR(256) NOT NULL  ENCODE lzo	  ,funcname CHAR(256) NOT NULL  ENCODE lzo	  ,level_name CHAR(64) NOT NULL  ENCODE lzo	  ,level_number INTEGER NOT NULL  ENCODE az64	  ,lineno INTEGER NOT NULL  ENCODE az64	  ,module CHAR(256) NOT NULL  ENCODE lzo	  ,msecs DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,name CHAR(256) NOT NULL  ENCODE lzo	  ,path_name CHAR(256) NOT NULL  ENCODE lzo	  ,process BIGINT NOT NULL  ENCODE az64	  ,process_name CHAR(256) NOT NULL  ENCODE lzo	  ,relative_created DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,thread BIGINT NOT NULL  ENCODE az64	  ,thread_name CHAR(256) NOT NULL  ENCODE lzo	  ,traceback CHAR(4096) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,seq INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_udf_log owner to rdsdb;--DROP TABLE pg_catalog.stll_udf_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stll_udf_trace(	component CHAR(128) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,udfid INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,message CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_udf_trace owner to rdsdb;--DROP TABLE pg_catalog.stll_undo_transactions;CREATE TABLE IF NOT EXISTS pg_catalog.stll_undo_transactions(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,tables_done INTEGER NOT NULL  ENCODE az64	  ,tables_total INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(137) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_undo_transactions owner to rdsdb;--DROP TABLE pg_catalog.stll_undone;CREATE TABLE IF NOT EXISTS pg_catalog.stll_undone(	userid INTEGER NOT NULL  ENCODE az64	  ,xact_id BIGINT NOT NULL  ENCODE az64	  ,xact_id_undone BIGINT NOT NULL  ENCODE az64	  ,undo_start_ts TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,undo_end_ts TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,table_id BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_undone owner to rdsdb;--DROP TABLE pg_catalog.stll_unique;CREATE TABLE IF NOT EXISTS pg_catalog.stll_unique(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,"type" CHAR(6) NOT NULL  ENCODE lzo	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,slots INTEGER NOT NULL  ENCODE az64	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,max_buffers_used BIGINT NOT NULL  ENCODE az64	  ,resizes INTEGER NOT NULL  ENCODE az64	  ,occupied INTEGER NOT NULL  ENCODE az64	  ,flushable INTEGER NOT NULL  ENCODE az64	  ,used_unique_prefetching CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_unique owner to rdsdb;--DROP TABLE pg_catalog.stll_unload_log;CREATE TABLE IF NOT EXISTS pg_catalog.stll_unload_log(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"path" CHAR(1280) NOT NULL  ENCODE lzo	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,line_count BIGINT NOT NULL  ENCODE az64	  ,transfer_size BIGINT NOT NULL  ENCODE az64	  ,file_format CHAR(10) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_unload_log owner to rdsdb;--DROP TABLE pg_catalog.stll_unload_options;CREATE TABLE IF NOT EXISTS pg_catalog.stll_unload_options(	query BIGINT NOT NULL  ENCODE az64	  ,row_count BIGINT NOT NULL  ENCODE az64	  ,"format" INTEGER NOT NULL  ENCODE az64	  ,authentication INTEGER NOT NULL  ENCODE az64	  ,compression_type INTEGER NOT NULL  ENCODE az64	  ,encryption_type INTEGER NOT NULL  ENCODE az64	  ,"manifest" INTEGER NOT NULL  ENCODE az64	  ,"maxfilesize" BIGINT NOT NULL  ENCODE az64	  ,cross_region CHAR(15) NOT NULL  ENCODE lzo	  ,opt_delimiter INTEGER NOT NULL  ENCODE az64	  ,opt_fixedwidth INTEGER NOT NULL  ENCODE az64	  ,opt_addquotes INTEGER NOT NULL  ENCODE az64	  ,opt_null_as INTEGER NOT NULL  ENCODE az64	  ,opt_escape INTEGER NOT NULL  ENCODE az64	  ,opt_allowoverwrite INTEGER NOT NULL  ENCODE az64	  ,opt_parallel INTEGER NOT NULL  ENCODE az64	  ,is_header INTEGER NOT NULL  ENCODE az64	  ,num_part_col INTEGER NOT NULL  ENCODE az64	  ,opt_incld_part_col INTEGER NOT NULL  ENCODE az64	  ,is_write_ext_tbl INTEGER NOT NULL  ENCODE az64	  ,is_encrypted_auto INTEGER NOT NULL  ENCODE az64	  ,opt_cleanpath INTEGER NOT NULL  ENCODE az64	  ,"rowgroupsize" BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_unload_options owner to rdsdb;--DROP TABLE pg_catalog.stll_unnest;CREATE TABLE IF NOT EXISTS pg_catalog.stll_unnest(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_unnest owner to rdsdb;--DROP TABLE pg_catalog.stll_usage_control;CREATE TABLE IF NOT EXISTS pg_catalog.stll_usage_control(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,usage_limit_id CHAR(40) NOT NULL  ENCODE lzo	  ,feature_type CHAR(30) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_usage_control owner to rdsdb;--DROP TABLE pg_catalog.stll_user_query_rewrite;CREATE TABLE IF NOT EXISTS pg_catalog.stll_user_query_rewrite(	user_query_id CHAR(41) NOT NULL  ENCODE lzo	  ,rewritten_query_id INTEGER NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_user_query_rewrite owner to rdsdb;--DROP TABLE pg_catalog.stll_userlog;CREATE TABLE IF NOT EXISTS pg_catalog.stll_userlog(	userid INTEGER NOT NULL  ENCODE az64	  ,username CHAR(50) NOT NULL  ENCODE lzo	  ,oldusername CHAR(50) NOT NULL  ENCODE lzo	  ,"action" CHAR(10) NOT NULL  ENCODE lzo	  ,usecreatedb INTEGER NOT NULL  ENCODE az64	  ,usesuper INTEGER NOT NULL  ENCODE az64	  ,usecatupd INTEGER NOT NULL  ENCODE az64	  ,valuntil TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_userlog owner to rdsdb;--DROP TABLE pg_catalog.stll_utilitytext;CREATE TABLE IF NOT EXISTS pg_catalog.stll_utilitytext(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"sequence" INTEGER NOT NULL  ENCODE az64	  ,text CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_utilitytext owner to rdsdb;--DROP TABLE pg_catalog.stll_vacuum;CREATE TABLE IF NOT EXISTS pg_catalog.stll_vacuum(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,status CHAR(30) NOT NULL  ENCODE lzo	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,sortedrows BIGINT NOT NULL  ENCODE az64	  ,"blocks" INTEGER NOT NULL  ENCODE az64	  ,max_merge_partitions INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,reclaimable_rows BIGINT NOT NULL  ENCODE az64	  ,reclaimable_space_mb BIGINT NOT NULL  ENCODE az64	  ,cutoff_xid BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_vacuum owner to rdsdb;--DROP TABLE pg_catalog.stll_vacuum_detail;CREATE TABLE IF NOT EXISTS pg_catalog.stll_vacuum_detail(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,part INTEGER NOT NULL  ENCODE az64	  ,start_row BIGINT NOT NULL  ENCODE az64	  ,end_row BIGINT NOT NULL  ENCODE az64	  ,num_new_rows BIGINT NOT NULL  ENCODE az64	  ,num_blocks_replaced BIGINT NOT NULL  ENCODE az64	  ,total_block_io_estimate BIGINT NOT NULL  ENCODE az64	  ,window_num INTEGER NOT NULL  ENCODE az64	  ,num_deleted_rows BIGINT NOT NULL  ENCODE az64	  ,compact INTEGER NOT NULL  ENCODE az64	  ,num_new_blocks BIGINT NOT NULL  ENCODE az64	  ,empty_space_size BIGINT NOT NULL  ENCODE az64	  ,table_partition_number INTEGER NOT NULL  ENCODE az64	  ,local_to_total_ratio DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,local_block_count BIGINT NOT NULL  ENCODE az64	  ,insufficient_local_blk_cnt INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_vacuum_detail owner to rdsdb;--DROP TABLE pg_catalog.stll_vacuum_history;CREATE TABLE IF NOT EXISTS pg_catalog.stll_vacuum_history(	table_id INTEGER NOT NULL  ENCODE az64	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_partitions INTEGER NOT NULL  ENCODE az64	  ,event CHAR(20) NOT NULL  ENCODE lzo	  ,"trigger" CHAR(128) NOT NULL  ENCODE lzo	  ,slice INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_vacuum_history owner to rdsdb;--DROP TABLE pg_catalog.stll_vacuum_scan_query_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stll_vacuum_scan_query_usage(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node BIGINT NOT NULL  ENCODE az64	  ,bucket0_10 BIGINT NOT NULL  ENCODE az64	  ,bucket10_20 BIGINT NOT NULL  ENCODE az64	  ,bucket20_30 BIGINT NOT NULL  ENCODE az64	  ,bucket30_40 BIGINT NOT NULL  ENCODE az64	  ,bucket40_50 BIGINT NOT NULL  ENCODE az64	  ,bucket50_60 BIGINT NOT NULL  ENCODE az64	  ,bucket60_70 BIGINT NOT NULL  ENCODE az64	  ,bucket70_80 BIGINT NOT NULL  ENCODE az64	  ,bucket80_90 BIGINT NOT NULL  ENCODE az64	  ,bucket90_100 BIGINT NOT NULL  ENCODE az64	  ,no_loss_query_count BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_vacuum_scan_query_usage owner to rdsdb;--DROP TABLE pg_catalog.stll_vec_scan_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stll_vec_scan_stats(	query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,scalar_encoding_type INTEGER NOT NULL  ENCODE az64	  ,predicate_window_size INTEGER NOT NULL  ENCODE az64	  ,payload_window_size INTEGER NOT NULL  ENCODE az64	  ,compact_col_count INTEGER NOT NULL  ENCODE az64	  ,is_operator_pushdown CHAR(1) NOT NULL  ENCODE lzo	  ,apply_xid_time BIGINT NOT NULL  ENCODE az64	  ,apply_predicate_time BIGINT NOT NULL  ENCODE az64	  ,extract_predicate_time BIGINT NOT NULL  ENCODE az64	  ,extract_payload_time BIGINT NOT NULL  ENCODE az64	  ,compact_predicate_time BIGINT NOT NULL  ENCODE az64	  ,compact_payload_time BIGINT NOT NULL  ENCODE az64	  ,scalar_predicate_time BIGINT NOT NULL  ENCODE az64	  ,consume_time BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_vec_scan_stats owner to rdsdb;--DROP TABLE pg_catalog.stll_version;CREATE TABLE IF NOT EXISTS pg_catalog.stll_version(	bootstrap_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,db_version CHAR(50) NOT NULL  ENCODE lzo	  ,restart_reason CHAR(100) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_version owner to rdsdb;--DROP TABLE pg_catalog.stll_volt_tt_sizes;CREATE TABLE IF NOT EXISTS pg_catalog.stll_volt_tt_sizes(	table_id INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,num_blocks INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_volt_tt_sizes owner to rdsdb;--DROP TABLE pg_catalog.stll_vpid;CREATE TABLE IF NOT EXISTS pg_catalog.stll_vpid(	vpid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,processname CHAR(200) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_vpid owner to rdsdb;--DROP TABLE pg_catalog.stll_warning;CREATE TABLE IF NOT EXISTS pg_catalog.stll_warning(	userid INTEGER NOT NULL  ENCODE az64	  ,process CHAR(32) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,"file" CHAR(20) NOT NULL  ENCODE lzo	  ,linenum INTEGER NOT NULL  ENCODE az64	  ,bug_desc CHAR(512) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_warning owner to rdsdb;--DROP TABLE pg_catalog.stll_window;CREATE TABLE IF NOT EXISTS pg_catalog.stll_window(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_window owner to rdsdb;--DROP TABLE pg_catalog.stll_wlm_auto_concurrency;CREATE TABLE IF NOT EXISTS pg_catalog.stll_wlm_auto_concurrency(	now TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,heavy_slots INTEGER NOT NULL  ENCODE az64	  ,light_slots INTEGER NOT NULL  ENCODE az64	  ,heavy_util DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,light_util DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,utilization_state CHAR(6) NOT NULL  ENCODE lzo	  ,new_light_slots INTEGER NOT NULL  ENCODE az64	  ,window_time_sec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,heavy_queries_finished INTEGER NOT NULL  ENCODE az64	  ,heavy_queries_exec_time DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,heavy_queries_queue_time_sec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,light_queries_finished INTEGER NOT NULL  ENCODE az64	  ,light_queries_exec_time_sec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,light_queries_queue_time_sec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,spilling_queries INTEGER NOT NULL  ENCODE az64	  ,spilled_blocks BIGINT NOT NULL  ENCODE az64	  ,light_queries_queued INTEGER NOT NULL  ENCODE az64	  ,heavy_queries_queued INTEGER NOT NULL  ENCODE az64	  ,avg_exec_time_heavy_sec DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,p90_exec_time_heavy_sec DOUBLE PRECISION NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_wlm_auto_concurrency owner to rdsdb;--DROP TABLE pg_catalog.stll_wlm_error;CREATE TABLE IF NOT EXISTS pg_catalog.stll_wlm_error(	userid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,error_string CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_wlm_error owner to rdsdb;--DROP TABLE pg_catalog.stll_wlm_query;CREATE TABLE IF NOT EXISTS pg_catalog.stll_wlm_query(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,task INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,service_class INTEGER NOT NULL  ENCODE az64	  ,slot_count INTEGER NOT NULL  ENCODE az64	  ,service_class_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,queue_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,queue_end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,total_queue_time BIGINT NOT NULL  ENCODE az64	  ,exec_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,exec_end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,total_exec_time BIGINT NOT NULL  ENCODE az64	  ,service_class_end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,final_state CHAR(16) NOT NULL  ENCODE lzo	  ,est_peak_mem BIGINT NOT NULL  ENCODE az64	  ,query_priority CHAR(20) NOT NULL  ENCODE lzo	  ,service_class_name CHAR(64) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_wlm_query owner to rdsdb;--DROP TABLE pg_catalog.stll_wlm_query_preemption;CREATE TABLE IF NOT EXISTS pg_catalog.stll_wlm_query_preemption(	eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,service_class_preempting INTEGER NOT NULL  ENCODE az64	  ,service_class_name_preempting CHAR(64) NOT NULL  ENCODE lzo	  ,query_preempting INTEGER NOT NULL  ENCODE az64	  ,query_priority_preempting CHAR(20) NOT NULL  ENCODE lzo	  ,service_class_preempted INTEGER NOT NULL  ENCODE az64	  ,service_class_name_preempted CHAR(64) NOT NULL  ENCODE lzo	  ,query_preempted INTEGER NOT NULL  ENCODE az64	  ,query_priority_preempted CHAR(20) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_wlm_query_preemption owner to rdsdb;--DROP TABLE pg_catalog.stll_wlm_rule_action;CREATE TABLE IF NOT EXISTS pg_catalog.stll_wlm_rule_action(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,service_class INTEGER NOT NULL  ENCODE az64	  ,"rule" CHAR(256) NOT NULL  ENCODE lzo	  ,"action" CHAR(256) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,action_value CHAR(256) NOT NULL  ENCODE lzo	  ,service_class_name CHAR(64) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_wlm_rule_action owner to rdsdb;--DROP TABLE pg_catalog.stll_wlm_service_class_config;CREATE TABLE IF NOT EXISTS pg_catalog.stll_wlm_service_class_config(	service_class INTEGER NOT NULL  ENCODE az64	  ,queueing_strategy CHAR(32) NOT NULL  ENCODE lzo	  ,num_query_tasks INTEGER NOT NULL  ENCODE az64	  ,target_num_query_tasks INTEGER NOT NULL  ENCODE az64	  ,evictable CHAR(8) NOT NULL  ENCODE lzo	  ,eviction_threshold BIGINT NOT NULL  ENCODE az64	  ,query_working_mem INTEGER NOT NULL  ENCODE az64	  ,target_query_working_mem INTEGER NOT NULL  ENCODE az64	  ,min_step_mem INTEGER NOT NULL  ENCODE az64	  ,name CHAR(64) NOT NULL  ENCODE lzo	  ,max_execution_time INTEGER NOT NULL  ENCODE az64	  ,user_group_wild_card CHAR(8) NOT NULL  ENCODE lzo	  ,query_group_wild_card CHAR(8) NOT NULL  ENCODE lzo	  ,concurrency_scaling CHAR(20) NOT NULL  ENCODE lzo	  ,query_priority CHAR(20) NOT NULL  ENCODE lzo	  ,eventtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_wlm_service_class_config owner to rdsdb;--DROP TABLE pg_catalog.stll_wlm_trace;CREATE TABLE IF NOT EXISTS pg_catalog.stll_wlm_trace(	userid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,component CHAR(64) NOT NULL  ENCODE lzo	  ,event CHAR(128) NOT NULL  ENCODE lzo	  ,detail CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_wlm_trace owner to rdsdb;--DROP TABLE pg_catalog.stll_wlm_trace_query_state;CREATE TABLE IF NOT EXISTS pg_catalog.stll_wlm_trace_query_state(	userid INTEGER NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64	  ,task INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,service_class INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,old_state CHAR(16) NOT NULL  ENCODE lzo	  ,new_state CHAR(16) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_wlm_trace_query_state owner to rdsdb;--DROP TABLE pg_catalog.stll_xid_consumption_rate;CREATE TABLE IF NOT EXISTS pg_catalog.stll_xid_consumption_rate(	"time" TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,num_xids_consumed BIGINT NOT NULL  ENCODE az64	  ,starting_xid BIGINT NOT NULL  ENCODE az64	  ,ending_xid BIGINT NOT NULL  ENCODE az64	  ,"interval" BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_xid_consumption_rate owner to rdsdb;--DROP TABLE pg_catalog.stll_xrestore;CREATE TABLE IF NOT EXISTS pg_catalog.stll_xrestore(	backup_id CHAR(256) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,catalog_download_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,catalog_download_end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,slice_transfer_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,slice_transfer_end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stll_xrestore owner to rdsdb;--DROP TABLE pg_catalog.stv_active_cursors;CREATE TABLE IF NOT EXISTS pg_catalog.stv_active_cursors(	userid INTEGER NOT NULL  ENCODE az64	  ,name CHAR(256) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,row_count BIGINT NOT NULL  ENCODE az64	  ,byte_count BIGINT NOT NULL  ENCODE az64	  ,fetched_rows BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_active_cursors owner to rdsdb;--DROP TABLE pg_catalog.stv_aio_reads;CREATE TABLE IF NOT EXISTS pg_catalog.stv_aio_reads(	node INTEGER NOT NULL  ENCODE az64	  ,allocated_now INTEGER NOT NULL  ENCODE az64	  ,allocated_high_water INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_aio_reads owner to rdsdb;--DROP TABLE pg_catalog.stv_aio_writes;CREATE TABLE IF NOT EXISTS pg_catalog.stv_aio_writes(	node INTEGER NOT NULL  ENCODE az64	  ,allocated_now INTEGER NOT NULL  ENCODE az64	  ,allocated_high_water INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_aio_writes owner to rdsdb;--DROP TABLE pg_catalog.stv_allocator;CREATE TABLE IF NOT EXISTS pg_catalog.stv_allocator(	node INTEGER NOT NULL  ENCODE az64	  ,num_allocated INTEGER NOT NULL  ENCODE az64	  ,user_allocated BIGINT NOT NULL  ENCODE az64	  ,size_allocated BIGINT NOT NULL  ENCODE az64	  ,max_num_allocated INTEGER NOT NULL  ENCODE az64	  ,max_user_allocated BIGINT NOT NULL  ENCODE az64	  ,max_size_allocated BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_allocator owner to rdsdb;--DROP TABLE pg_catalog.stv_alter_checkpoint_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_alter_checkpoint_state(	xid BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,command_type CHAR(128) NOT NULL  ENCODE lzo	  ,target_distkey INTEGER NOT NULL  ENCODE az64	  ,scanned_rows INTEGER NOT NULL  ENCODE az64	  ,tbl_rows INTEGER NOT NULL  ENCODE az64	  ,num_of_iterations INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_alter_checkpoint_state owner to rdsdb;--DROP TABLE pg_catalog.stv_alter_dist_sort;CREATE TABLE IF NOT EXISTS pg_catalog.stv_alter_dist_sort(	xid BIGINT NOT NULL  ENCODE az64	  ,reloid INTEGER NOT NULL  ENCODE az64	  ,alter_type INTEGER NOT NULL  ENCODE az64	  ,data_tbl INTEGER NOT NULL  ENCODE az64	  ,shadow_tbl INTEGER NOT NULL  ENCODE az64	  ,stage INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_alter_dist_sort owner to rdsdb;--DROP TABLE pg_catalog.stv_alter_table_recommendations;CREATE TABLE IF NOT EXISTS pg_catalog.stv_alter_table_recommendations(	"type" INTEGER NOT NULL  ENCODE az64	  ,"database" CHAR(128) NOT NULL  ENCODE lzo	  ,"schema" CHAR(128) NOT NULL  ENCODE lzo	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(128) NOT NULL  ENCODE lzo	  ,col_names CHAR(512) NOT NULL  ENCODE lzo	  ,group_id INTEGER NOT NULL  ENCODE az64	  ,benefit BIGINT NOT NULL  ENCODE az64	  ,status INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_alter_table_recommendations owner to rdsdb;--DROP TABLE pg_catalog.stv_block_access_times;CREATE TABLE IF NOT EXISTS pg_catalog.stv_block_access_times(	tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64	  ,id CHAR(64) NOT NULL  ENCODE lzo	  ,sb_pos BIGINT NOT NULL  ENCODE az64	  ,last_access_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_block_access_times owner to rdsdb;--DROP TABLE pg_catalog.stv_block_limits_metadata;CREATE TABLE IF NOT EXISTS pg_catalog.stv_block_limits_metadata(	node INTEGER NOT NULL  ENCODE az64	  ,"index" INTEGER NOT NULL  ENCODE az64	  ,allocated INTEGER NOT NULL  ENCODE az64	  ,"minvalue" CHAR(16) NOT NULL  ENCODE lzo	  ,"maxvalue" CHAR(16) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_block_limits_metadata owner to rdsdb;--DROP TABLE pg_catalog.stv_block_lru;CREATE TABLE IF NOT EXISTS pg_catalog.stv_block_lru(	slice INTEGER NOT NULL  ENCODE az64	  ,lru INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64	  ,disk_pos INTEGER NOT NULL  ENCODE az64	  ,num_values INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,"pinned" INTEGER NOT NULL  ENCODE az64	  ,modified INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_block_lru owner to rdsdb;--DROP TABLE pg_catalog.stv_block_reps;CREATE TABLE IF NOT EXISTS pg_catalog.stv_block_reps(	blkid CHAR(64) NOT NULL  ENCODE lzo	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,blknum BIGINT NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,host_node INTEGER NOT NULL  ENCODE az64	  ,"local" INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,s3_state CHAR(32) NOT NULL  ENCODE lzo	  ,reps INTEGER NOT NULL  ENCODE az64	  ,invalid INTEGER NOT NULL  ENCODE az64	  ,failed INTEGER NOT NULL  ENCODE az64	  ,diskaddr BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_block_reps owner to rdsdb;--DROP TABLE pg_catalog.stv_block_tag_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_block_tag_state(	blkid CHAR(64) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,state CHAR(32) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_block_tag_state owner to rdsdb;--DROP TABLE pg_catalog.stv_blocklist;CREATE TABLE IF NOT EXISTS pg_catalog.stv_blocklist(	slice INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64	  ,num_values INTEGER NOT NULL  ENCODE az64	  ,extended_limits INTEGER NOT NULL  ENCODE az64	  ,"minvalue" BIGINT NOT NULL  ENCODE az64	  ,"maxvalue" BIGINT NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,"pinned" INTEGER NOT NULL  ENCODE az64	  ,on_disk INTEGER NOT NULL  ENCODE az64	  ,backed_up INTEGER NOT NULL  ENCODE az64	  ,modified INTEGER NOT NULL  ENCODE az64	  ,hdr_modified INTEGER NOT NULL  ENCODE az64	  ,unsorted INTEGER NOT NULL  ENCODE az64	  ,tombstone INTEGER NOT NULL  ENCODE az64	  ,preferred_diskno INTEGER NOT NULL  ENCODE az64	  ,"temporary" INTEGER NOT NULL  ENCODE az64	  ,newblock INTEGER NOT NULL  ENCODE az64	  ,num_readers INTEGER NOT NULL  ENCODE az64	  ,id CHAR(64) NOT NULL  ENCODE lzo	  ,flags INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_blocklist owner to rdsdb;--DROP TABLE pg_catalog.stv_burst_manager_cluster_info;CREATE TABLE IF NOT EXISTS pg_catalog.stv_burst_manager_cluster_info(	cluster_arn CHAR(120) NOT NULL  ENCODE lzo	  ,num_sessions INTEGER NOT NULL  ENCODE az64	  ,max_sessions INTEGER NOT NULL  ENCODE az64	  ,backup_version BIGINT NOT NULL  ENCODE az64	  ,backup_id CHAR(100) NOT NULL  ENCODE lzo	  ,last_heartbeat_check TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,last_used TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,idle_counter INTEGER NOT NULL  ENCODE az64	  ,active_pids CHAR(40) NOT NULL  ENCODE lzo	  ,personalized INTEGER NOT NULL  ENCODE az64	  ,gateway_errors INTEGER NOT NULL  ENCODE az64	  ,credentials_errors INTEGER NOT NULL  ENCODE az64	  ,refresh_backup_version BIGINT NOT NULL  ENCODE az64	  ,refresh_backup_id CHAR(100) NOT NULL  ENCODE lzo	  ,refresh_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_burst_manager_cluster_info owner to rdsdb;--DROP TABLE pg_catalog.stv_burst_tbl_ownership;CREATE TABLE IF NOT EXISTS pg_catalog.stv_burst_tbl_ownership(	xid BIGINT NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,name CHAR(128) NOT NULL  ENCODE lzo	  ,arn CHAR(128) NOT NULL  ENCODE lzo	  ,state CHAR(32) NOT NULL  ENCODE lzo	  ,sb_version BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_burst_tbl_ownership owner to rdsdb;--DROP TABLE pg_catalog.stv_burst_tbl_sb_version;CREATE TABLE IF NOT EXISTS pg_catalog.stv_burst_tbl_sb_version(	id INTEGER NOT NULL  ENCODE az64	  ,last_write_xid BIGINT NOT NULL  ENCODE az64	  ,undo_sb_version BIGINT NOT NULL  ENCODE az64	  ,clean_write_sb_version BIGINT NOT NULL  ENCODE az64	  ,dml_sb_version BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_burst_tbl_sb_version owner to rdsdb;--DROP TABLE pg_catalog.stv_burst_write_blocklist;CREATE TABLE IF NOT EXISTS pg_catalog.stv_burst_write_blocklist(	xid BIGINT NOT NULL  ENCODE az64	  ,blkid CHAR(64) NOT NULL  ENCODE lzo	  ,slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_burst_write_blocklist owner to rdsdb;--DROP TABLE pg_catalog.stv_cache_policy_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stv_cache_policy_stats(	node_num INTEGER NOT NULL  ENCODE az64	  ,name CHAR(64) NOT NULL  ENCODE lzo	  ,value BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_cache_policy_stats owner to rdsdb;--DROP TABLE pg_catalog.stv_catalog_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stv_catalog_metrics(	"database" INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(48) NOT NULL  ENCODE lzo	  ,table_oid INTEGER NOT NULL  ENCODE az64	  ,num_live_tups BIGINT NOT NULL  ENCODE az64	  ,num_dead_tups BIGINT NOT NULL  ENCODE az64	  ,total_live_tup_sz BIGINT NOT NULL  ENCODE az64	  ,total_dead_tup_sz BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_catalog_metrics owner to rdsdb;--DROP TABLE pg_catalog.stv_channel_reservation;CREATE TABLE IF NOT EXISTS pg_catalog.stv_channel_reservation(	node INTEGER NOT NULL  ENCODE az64	  ,channel INTEGER NOT NULL  ENCODE az64	  ,reserved INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_channel_reservation owner to rdsdb;--DROP TABLE pg_catalog.stv_channel_sink;CREATE TABLE IF NOT EXISTS pg_catalog.stv_channel_sink(	channel INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,dst_slice INTEGER NOT NULL  ENCODE az64	  ,numcloses INTEGER NOT NULL  ENCODE az64	  ,queued INTEGER NOT NULL  ENCODE az64	  ,src_slice INTEGER NOT NULL  ENCODE az64	  ,seqnum BIGINT NOT NULL  ENCODE az64	  ,rwin INTEGER NOT NULL  ENCODE az64	  ,xoff INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_channel_sink owner to rdsdb;--DROP TABLE pg_catalog.stv_channel_source;CREATE TABLE IF NOT EXISTS pg_catalog.stv_channel_source(	channel INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,src_slice INTEGER NOT NULL  ENCODE az64	  ,bcast INTEGER NOT NULL  ENCODE az64	  ,dst_slice INTEGER NOT NULL  ENCODE az64	  ,seqnum BIGINT NOT NULL  ENCODE az64	  ,rwin INTEGER NOT NULL  ENCODE az64	  ,unacked INTEGER NOT NULL  ENCODE az64	  ,max_acked_seqnum BIGINT NOT NULL  ENCODE az64	  ,queued INTEGER NOT NULL  ENCODE az64	  ,slice_proxy BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_channel_source owner to rdsdb;--DROP TABLE pg_catalog.stv_channel_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stv_channel_usage(	node INTEGER NOT NULL  ENCODE az64	  ,channel INTEGER NOT NULL  ENCODE az64	  ,address INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,issource INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_channel_usage owner to rdsdb;--DROP TABLE pg_catalog.stv_code_pool;CREATE TABLE IF NOT EXISTS pg_catalog.stv_code_pool(	code_id INTEGER NOT NULL  ENCODE az64	  ,use_count INTEGER NOT NULL  ENCODE az64	  ,use_total INTEGER NOT NULL  ENCODE az64	  ,"position" INTEGER NOT NULL  ENCODE az64	  ,"chain" INTEGER NOT NULL  ENCODE az64	  ,"path" CHAR(255) NOT NULL  ENCODE lzo	  ,src_buf_size BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_code_pool owner to rdsdb;--DROP TABLE pg_catalog.stv_comm_diag_ping_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stv_comm_diag_ping_stats(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,ip_addr CHAR(16) NOT NULL  ENCODE lzo	  ,status CHAR(5) NOT NULL  ENCODE lzo	  ,elapsed_time_us INTEGER NOT NULL  ENCODE az64	  ,expected_seq BIGINT NOT NULL  ENCODE az64	  ,recd_seq BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_comm_diag_ping_stats owner to rdsdb;--DROP TABLE pg_catalog.stv_comm_slice;CREATE TABLE IF NOT EXISTS pg_catalog.stv_comm_slice(	node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,unacked INTEGER NOT NULL  ENCODE az64	  ,sendwin INTEGER NOT NULL  ENCODE az64	  ,total_unacked INTEGER NOT NULL  ENCODE az64	  ,regulator BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_comm_slice owner to rdsdb;--DROP TABLE pg_catalog.stv_comm_state_orphans;CREATE TABLE IF NOT EXISTS pg_catalog.stv_comm_state_orphans(	node INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(8) NOT NULL  ENCODE lzo	  ,channel_id INTEGER NOT NULL  ENCODE az64	  ,channel_type CHAR(32) NOT NULL  ENCODE lzo	  ,ref_count INTEGER NOT NULL  ENCODE az64	  ,shutdown_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,shutdown_pid INTEGER NOT NULL  ENCODE az64	  ,shutdown_bt CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_comm_state_orphans owner to rdsdb;--DROP TABLE pg_catalog.stv_commit_context;CREATE TABLE IF NOT EXISTS pg_catalog.stv_commit_context(	live_sb_version BIGINT NOT NULL  ENCODE az64	  ,live_highest_committed_write_xid BIGINT NOT NULL  ENCODE az64	  ,live_active_xids_size INTEGER NOT NULL  ENCODE az64	  ,live_min_active_xid BIGINT NOT NULL  ENCODE az64	  ,live_max_active_xid BIGINT NOT NULL  ENCODE az64	  ,pref_sb_version BIGINT NOT NULL  ENCODE az64	  ,pref_highest_committed_write_xid BIGINT NOT NULL  ENCODE az64	  ,pref_active_xids_size INTEGER NOT NULL  ENCODE az64	  ,pref_min_active_xid BIGINT NOT NULL  ENCODE az64	  ,pref_max_active_xid BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_commit_context owner to rdsdb;--DROP TABLE pg_catalog.stv_compression;CREATE TABLE IF NOT EXISTS pg_catalog.stv_compression(	slice INTEGER NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,"encoding" INTEGER NOT NULL  ENCODE az64	  ,size BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_compression owner to rdsdb;--DROP TABLE pg_catalog.stv_configuration;CREATE TABLE IF NOT EXISTS pg_catalog.stv_configuration(	name CHAR(64) NOT NULL  ENCODE lzo	  ,value CHAR(512) NOT NULL  ENCODE lzo	  ,category CHAR(24) NOT NULL  ENCODE lzo	  ,short_desc CHAR(128) NOT NULL  ENCODE lzo	  ,extra_desc CHAR(256) NOT NULL  ENCODE lzo	  ,context CHAR(12) NOT NULL  ENCODE lzo	  ,vartype CHAR(16) NOT NULL  ENCODE lzo	  ,source CHAR(24) NOT NULL  ENCODE lzo	  ,min_val CHAR(24) NOT NULL  ENCODE lzo	  ,max_val CHAR(24) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_configuration owner to rdsdb;--DROP TABLE pg_catalog.stv_core_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stv_core_stat(	node INTEGER NOT NULL  ENCODE az64	  ,core INTEGER NOT NULL  ENCODE az64	  ,elapsed INTEGER NOT NULL  ENCODE az64	  ,utime BIGINT NOT NULL  ENCODE az64	  ,stime BIGINT NOT NULL  ENCODE az64	  ,ntime BIGINT NOT NULL  ENCODE az64	  ,idle BIGINT NOT NULL  ENCODE az64	  ,iowait BIGINT NOT NULL  ENCODE az64	  ,irq BIGINT NOT NULL  ENCODE az64	  ,softirq BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_core_stat owner to rdsdb;--DROP TABLE pg_catalog.stv_cost_control;CREATE TABLE IF NOT EXISTS pg_catalog.stv_cost_control(	quota_id CHAR(120) NOT NULL  ENCODE lzo	  ,period_start TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,period_end TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,feature CHAR(120) NOT NULL  ENCODE lzo	  ,resource CHAR(120) NOT NULL  ENCODE lzo	  ,"action" CHAR(120) NOT NULL  ENCODE lzo	  ,"usage" INTEGER NOT NULL  ENCODE az64	  ,available INTEGER NOT NULL  ENCODE az64	  ,threshold INTEGER NOT NULL  ENCODE az64	  ,updated_at TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,customer_id CHAR(120) NOT NULL  ENCODE lzo	  ,cluster_id CHAR(120) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_cost_control owner to rdsdb;--DROP TABLE pg_catalog.stv_cursor_configuration;CREATE TABLE IF NOT EXISTS pg_catalog.stv_cursor_configuration(	current_cursor_count INTEGER NOT NULL  ENCODE az64	  ,max_diskspace_usable INTEGER NOT NULL  ENCODE az64	  ,current_diskspace_used INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_cursor_configuration owner to rdsdb;--DROP TABLE pg_catalog.stv_disk_addresses;CREATE TABLE IF NOT EXISTS pg_catalog.stv_disk_addresses(	slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,disk_address BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_disk_addresses owner to rdsdb;--DROP TABLE pg_catalog.stv_disk_cache_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_disk_cache_state(	node INTEGER NOT NULL  ENCODE az64	  ,cache_size_mb DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,size_limit_mb DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,lru_size BIGINT NOT NULL  ENCODE az64	  ,throttle_points BIGINT NOT NULL  ENCODE az64	  ,ra_points DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,scans_running INTEGER NOT NULL  ENCODE az64	  ,rowsets_currently_in_cache BIGINT NOT NULL  ENCODE az64	  ,rowsets_currently_pinned BIGINT NOT NULL  ENCODE az64	  ,percentage_shared_mem_used DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,cache_shd_mem_perc DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,size_delta_mb INTEGER NOT NULL  ENCODE az64	  ,high_water_mark BIGINT NOT NULL  ENCODE az64	  ,low_water_mark BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_disk_cache_state owner to rdsdb;--DROP TABLE pg_catalog.stv_disk_extents;CREATE TABLE IF NOT EXISTS pg_catalog.stv_disk_extents(	"owner" INTEGER NOT NULL  ENCODE az64	  ,"host" INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,start_addr BIGINT NOT NULL  ENCODE az64	  ,end_addr BIGINT NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,num_allocated INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_disk_extents owner to rdsdb;--DROP TABLE pg_catalog.stv_disk_map;CREATE TABLE IF NOT EXISTS pg_catalog.stv_disk_map(	node INTEGER NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,"disk" INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_disk_map owner to rdsdb;--DROP TABLE pg_catalog.stv_diskman_query_block_alloc_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stv_diskman_query_block_alloc_stats(	node_num INTEGER NOT NULL  ENCODE az64	  ,query_allocated BIGINT NOT NULL  ENCODE az64	  ,diskman_allocated BIGINT NOT NULL  ENCODE az64	  ,query_fail_disk_cache_full BIGINT NOT NULL  ENCODE az64	  ,query_fail_table_id BIGINT NOT NULL  ENCODE az64	  ,query_fail_block_hdr BIGINT NOT NULL  ENCODE az64	  ,query_fail_disk_borrow_block BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_diskman_query_block_alloc_stats owner to rdsdb;--DROP TABLE pg_catalog.stv_exec_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_exec_state(	userid INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,currenttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,bytes BIGINT NOT NULL  ENCODE az64	  ,"label" CHAR(256) NOT NULL  ENCODE lzo	  ,is_diskbased CHAR(1) NOT NULL  ENCODE lzo	  ,workmem BIGINT NOT NULL  ENCODE az64	  ,num_parts INTEGER NOT NULL  ENCODE az64	  ,is_rrscan CHAR(1) NOT NULL  ENCODE lzo	  ,is_delayed_scan CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_exec_state owner to rdsdb;--DROP TABLE pg_catalog.stv_external_databases;CREATE TABLE IF NOT EXISTS pg_catalog.stv_external_databases(	eskind INTEGER NOT NULL  ENCODE az64	  ,esoptions CHAR(128) NOT NULL  ENCODE lzo	  ,databasename CHAR(128) NOT NULL  ENCODE lzo	  ,"location" CHAR(128) NOT NULL  ENCODE lzo	  ,"parameters" CHAR(128) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_external_databases owner to rdsdb;--DROP TABLE pg_catalog.stv_external_partitions;CREATE TABLE IF NOT EXISTS pg_catalog.stv_external_partitions(	esoid INTEGER NOT NULL  ENCODE az64	  ,schemaname CHAR(128) NOT NULL  ENCODE lzo	  ,tablename CHAR(128) NOT NULL  ENCODE lzo	  ,"values" CHAR(512) NOT NULL  ENCODE lzo	  ,"location" CHAR(256) NOT NULL  ENCODE lzo	  ,input_format CHAR(128) NOT NULL  ENCODE lzo	  ,output_format CHAR(128) NOT NULL  ENCODE lzo	  ,serialization_lib CHAR(128) NOT NULL  ENCODE lzo	  ,serde_parameters CHAR(128) NOT NULL  ENCODE lzo	  ,compressed INTEGER NOT NULL  ENCODE az64	  ,"parameters" CHAR(128) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_external_partitions owner to rdsdb;--DROP TABLE pg_catalog.stv_fdisk_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stv_fdisk_stats(	node_num INTEGER NOT NULL  ENCODE az64	  ,name CHAR(32) NOT NULL  ENCODE lzo	  ,value BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_fdisk_stats owner to rdsdb;--DROP TABLE pg_catalog.stv_fragmentation;CREATE TABLE IF NOT EXISTS pg_catalog.stv_fragmentation(	node INTEGER NOT NULL  ENCODE az64	  ,"disk" INTEGER NOT NULL  ENCODE az64	  ,frag_pct DOUBLE PRECISION NOT NULL  ENCODE RAW)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_fragmentation owner to rdsdb;--DROP TABLE pg_catalog.stv_gui_status;CREATE TABLE IF NOT EXISTS pg_catalog.stv_gui_status(	start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_nodes INTEGER NOT NULL  ENCODE az64	  ,num_sessions INTEGER NOT NULL  ENCODE az64	  ,total_queries INTEGER NOT NULL  ENCODE az64	  ,recent_queries INTEGER NOT NULL  ENCODE az64	  ,load_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,system_status CHAR(30) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_gui_status owner to rdsdb;--DROP TABLE pg_catalog.stv_identity_highwater;CREATE TABLE IF NOT EXISTS pg_catalog.stv_identity_highwater(	tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,highwater BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_identity_highwater owner to rdsdb;--DROP TABLE pg_catalog.stv_inflight;CREATE TABLE IF NOT EXISTS pg_catalog.stv_inflight(	userid INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"label" CHAR(320) NOT NULL  ENCODE lzo	  ,xid BIGINT NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,text CHAR(100) NOT NULL  ENCODE lzo	  ,suspended INTEGER NOT NULL  ENCODE az64	  ,insert_pristine INTEGER NOT NULL  ENCODE az64	  ,concurrency_scaling_status INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_inflight owner to rdsdb;--DROP TABLE pg_catalog.stv_interleaved_counts;CREATE TABLE IF NOT EXISTS pg_catalog.stv_interleaved_counts(	node INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,"index" INTEGER NOT NULL  ENCODE az64	  ,active INTEGER NOT NULL  ENCODE az64	  ,compressed_val INTEGER NOT NULL  ENCODE az64	  ,count BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_interleaved_counts owner to rdsdb;--DROP TABLE pg_catalog.stv_invalid_replication;CREATE TABLE IF NOT EXISTS pg_catalog.stv_invalid_replication(	slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,node0 INTEGER NOT NULL  ENCODE az64	  ,diskno0 INTEGER NOT NULL  ENCODE az64	  ,node1 INTEGER NOT NULL  ENCODE az64	  ,diskno1 INTEGER NOT NULL  ENCODE az64	  ,node2 INTEGER NOT NULL  ENCODE az64	  ,diskno2 INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_invalid_replication owner to rdsdb;--DROP TABLE pg_catalog.stv_invisible_xact;CREATE TABLE IF NOT EXISTS pg_catalog.stv_invisible_xact(	xid BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_invisible_xact owner to rdsdb;--DROP TABLE pg_catalog.stv_io_local_pending;CREATE TABLE IF NOT EXISTS pg_catalog.stv_io_local_pending(	node INTEGER NOT NULL  ENCODE az64	  ,pending INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_io_local_pending owner to rdsdb;--DROP TABLE pg_catalog.stv_io_local_pending_time;CREATE TABLE IF NOT EXISTS pg_catalog.stv_io_local_pending_time(	node INTEGER NOT NULL  ENCODE az64	  ,pending_time INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_io_local_pending_time owner to rdsdb;--DROP TABLE pg_catalog.stv_io_local_times;CREATE TABLE IF NOT EXISTS pg_catalog.stv_io_local_times(	node INTEGER NOT NULL  ENCODE az64	  ,is_write INTEGER NOT NULL  ENCODE az64	  ,os_sum BIGINT NOT NULL  ENCODE az64	  ,submit_sum BIGINT NOT NULL  ENCODE az64	  ,num_io BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_io_local_times owner to rdsdb;--DROP TABLE pg_catalog.stv_io_raidp_client_pending;CREATE TABLE IF NOT EXISTS pg_catalog.stv_io_raidp_client_pending(	node INTEGER NOT NULL  ENCODE az64	  ,instance INTEGER NOT NULL  ENCODE az64	  ,pending INTEGER NOT NULL  ENCODE az64	  ,awaiting_write_auth INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_io_raidp_client_pending owner to rdsdb;--DROP TABLE pg_catalog.stv_io_raidp_server_pending;CREATE TABLE IF NOT EXISTS pg_catalog.stv_io_raidp_server_pending(	node INTEGER NOT NULL  ENCODE az64	  ,instance INTEGER NOT NULL  ENCODE az64	  ,started_tasks INTEGER NOT NULL  ENCODE az64	  ,postponed_tasks INTEGER NOT NULL  ENCODE az64	  ,awaiting_bytes INTEGER NOT NULL  ENCODE az64	  ,submitted_io INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_io_raidp_server_pending owner to rdsdb;--DROP TABLE pg_catalog.stv_io_readahead;CREATE TABLE IF NOT EXISTS pg_catalog.stv_io_readahead(	node INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,scanner INTEGER NOT NULL  ENCODE az64	  ,fraction DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,numblocks INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_io_readahead owner to rdsdb;--DROP TABLE pg_catalog.stv_io_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stv_io_stat(	"owner" INTEGER NOT NULL  ENCODE az64	  ,"host" INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,is_write INTEGER NOT NULL  ENCODE az64	  ,io_size INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_io_stat owner to rdsdb;--DROP TABLE pg_catalog.stv_ip;CREATE TABLE IF NOT EXISTS pg_catalog.stv_ip(	node INTEGER NOT NULL  ENCODE az64	  ,ip CHAR(15) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_ip owner to rdsdb;--DROP TABLE pg_catalog.stv_load_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_load_state(	userid INTEGER NOT NULL  ENCODE az64	  ,"session" INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,bytes_to_load BIGINT NOT NULL  ENCODE az64	  ,bytes_loaded BIGINT NOT NULL  ENCODE az64	  ,bytes_to_load_compressed BIGINT NOT NULL  ENCODE az64	  ,bytes_loaded_compressed BIGINT NOT NULL  ENCODE az64	  ,"lines" BIGINT NOT NULL  ENCODE az64	  ,num_files INTEGER NOT NULL  ENCODE az64	  ,num_files_complete INTEGER NOT NULL  ENCODE az64	  ,current_file CHAR(256) NOT NULL  ENCODE lzo	  ,pct_complete INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_load_state owner to rdsdb;--DROP TABLE pg_catalog.stv_local_block_cache_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_local_block_cache_state(	slice INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,blocknum INTEGER NOT NULL  ENCODE az64	  ,backup_state INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64	  ,state INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_local_block_cache_state owner to rdsdb;--DROP TABLE pg_catalog.stv_local_superblock_manager;CREATE TABLE IF NOT EXISTS pg_catalog.stv_local_superblock_manager(	local_node_num INTEGER NOT NULL  ENCODE az64	  ,producer_cluster_id INTEGER NOT NULL  ENCODE az64	  ,producer_node_num INTEGER NOT NULL  ENCODE az64	  ,superblock_size BIGINT NOT NULL  ENCODE az64	  ,last_accessed_timestamp BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_local_superblock_manager owner to rdsdb;--DROP TABLE pg_catalog.stv_locks;CREATE TABLE IF NOT EXISTS pg_catalog.stv_locks(	table_id BIGINT NOT NULL  ENCODE az64	  ,last_commit TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,last_update TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,lock_owner BIGINT NOT NULL  ENCODE az64	  ,lock_owner_pid BIGINT NOT NULL  ENCODE az64	  ,lock_owner_start_ts TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,lock_owner_end_ts TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,lock_status CHAR(22) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_locks owner to rdsdb;--DROP TABLE pg_catalog.stv_logical_data_slices;CREATE TABLE IF NOT EXISTS pg_catalog.stv_logical_data_slices(	slice INTEGER NOT NULL  ENCODE az64	  ,num_data_slices INTEGER NOT NULL  ENCODE az64	  ,num_logical_data_slices INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_logical_data_slices owner to rdsdb;--DROP TABLE pg_catalog.stv_mem_alloc_history;CREATE TABLE IF NOT EXISTS pg_catalog.stv_mem_alloc_history(	process CHAR(32) NOT NULL  ENCODE lzo	  ,recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,alloc INTEGER NOT NULL  ENCODE az64	  ,address BIGINT NOT NULL  ENCODE az64	  ,size INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_mem_alloc_history owner to rdsdb;--DROP TABLE pg_catalog.stv_mem_fragmentation;CREATE TABLE IF NOT EXISTS pg_catalog.stv_mem_fragmentation(	node INTEGER NOT NULL  ENCODE az64	  ,allocator CHAR(16) NOT NULL  ENCODE lzo	  ,available BIGINT NOT NULL  ENCODE az64	  ,fragmentation DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,blocks_4k BIGINT NOT NULL  ENCODE az64	  ,blocks_8k BIGINT NOT NULL  ENCODE az64	  ,blocks_16k BIGINT NOT NULL  ENCODE az64	  ,blocks_32k BIGINT NOT NULL  ENCODE az64	  ,blocks_64k BIGINT NOT NULL  ENCODE az64	  ,blocks_128k BIGINT NOT NULL  ENCODE az64	  ,blocks_256k BIGINT NOT NULL  ENCODE az64	  ,blocks_512k BIGINT NOT NULL  ENCODE az64	  ,blocks_1m BIGINT NOT NULL  ENCODE az64	  ,blocks_2m BIGINT NOT NULL  ENCODE az64	  ,blocks_4m BIGINT NOT NULL  ENCODE az64	  ,blocks_8m BIGINT NOT NULL  ENCODE az64	  ,blocks_16m BIGINT NOT NULL  ENCODE az64	  ,blocks_32m BIGINT NOT NULL  ENCODE az64	  ,blocks_64m BIGINT NOT NULL  ENCODE az64	  ,blocks_128m BIGINT NOT NULL  ENCODE az64	  ,blocks_256m BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_mem_fragmentation owner to rdsdb;--DROP TABLE pg_catalog.stv_mem_freelist;CREATE TABLE IF NOT EXISTS pg_catalog.stv_mem_freelist(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,uid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,requested BIGINT NOT NULL  ENCODE az64	  ,roundedsize BIGINT NOT NULL  ENCODE az64	  ,page BIGINT NOT NULL  ENCODE az64	  ,leaked INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_mem_freelist owner to rdsdb;--DROP TABLE pg_catalog.stv_mem_freelist_len;CREATE TABLE IF NOT EXISTS pg_catalog.stv_mem_freelist_len(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,allocated BIGINT NOT NULL  ENCODE az64	  ,buffercount INTEGER NOT NULL  ENCODE az64	  ,pagecount INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_mem_freelist_len owner to rdsdb;--DROP TABLE pg_catalog.stv_mem_leaks;CREATE TABLE IF NOT EXISTS pg_catalog.stv_mem_leaks(	recordtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,uid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,requested BIGINT NOT NULL  ENCODE az64	  ,allocated BIGINT NOT NULL  ENCODE az64	  ,page BIGINT NOT NULL  ENCODE az64	  ,leaked INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_mem_leaks owner to rdsdb;--DROP TABLE pg_catalog.stv_ml_manager_status;CREATE TABLE IF NOT EXISTS pg_catalog.stv_ml_manager_status(	pid INTEGER NOT NULL  ENCODE az64	  ,status CHAR(64) NOT NULL  ENCODE lzo	  ,last_update_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,last_message CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_ml_manager_status owner to rdsdb;--DROP TABLE pg_catalog.stv_ml_model_info;CREATE TABLE IF NOT EXISTS pg_catalog.stv_ml_model_info(	schema_name CHAR(128) NOT NULL  ENCODE lzo	  ,user_name CHAR(128) NOT NULL  ENCODE lzo	  ,model_name CHAR(128) NOT NULL  ENCODE lzo	  ,life_cycle CHAR(20) NOT NULL  ENCODE lzo	  ,is_refreshable INTEGER NOT NULL  ENCODE az64	  ,model_state CHAR(128) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_ml_model_info owner to rdsdb;--DROP TABLE pg_catalog.stv_mv_deps;CREATE TABLE IF NOT EXISTS pg_catalog.stv_mv_deps(	db_name CHAR(128) NOT NULL  ENCODE lzo	  ,"schema" CHAR(128) NOT NULL  ENCODE lzo	  ,name CHAR(128) NOT NULL  ENCODE lzo	  ,ref_schema CHAR(128) NOT NULL  ENCODE lzo	  ,ref_name CHAR(128) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_mv_deps owner to rdsdb;--DROP TABLE pg_catalog.stv_mv_info;CREATE TABLE IF NOT EXISTS pg_catalog.stv_mv_info(	db_name CHAR(128) NOT NULL  ENCODE lzo	  ,"schema" CHAR(128) NOT NULL  ENCODE lzo	  ,name CHAR(128) NOT NULL  ENCODE lzo	  ,updated_upto_xid BIGINT NOT NULL  ENCODE az64	  ,is_stale CHAR(1) NOT NULL  ENCODE lzo	  ,owner_user_name CHAR(128) NOT NULL  ENCODE lzo	  ,state INTEGER NOT NULL  ENCODE az64	  ,autorefresh CHAR(1) NOT NULL  ENCODE lzo	  ,autorewrite CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_mv_info owner to rdsdb;--DROP TABLE pg_catalog.stv_net_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stv_net_stat(	node INTEGER NOT NULL  ENCODE az64	  ,iface CHAR(20) NOT NULL  ENCODE lzo	  ,rxbytes BIGINT NOT NULL  ENCODE az64	  ,rxpackets BIGINT NOT NULL  ENCODE az64	  ,rxerrors BIGINT NOT NULL  ENCODE az64	  ,rxdrops BIGINT NOT NULL  ENCODE az64	  ,rxfifo BIGINT NOT NULL  ENCODE az64	  ,rxframe BIGINT NOT NULL  ENCODE az64	  ,rxcompressed BIGINT NOT NULL  ENCODE az64	  ,rxmulticast BIGINT NOT NULL  ENCODE az64	  ,txbytes BIGINT NOT NULL  ENCODE az64	  ,txpackets BIGINT NOT NULL  ENCODE az64	  ,txerrors BIGINT NOT NULL  ENCODE az64	  ,txdrops BIGINT NOT NULL  ENCODE az64	  ,txfifo BIGINT NOT NULL  ENCODE az64	  ,txcollisions BIGINT NOT NULL  ENCODE az64	  ,txcarrier BIGINT NOT NULL  ENCODE az64	  ,txcompressed BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_net_stat owner to rdsdb;--DROP TABLE pg_catalog.stv_networks;CREATE TABLE IF NOT EXISTS pg_catalog.stv_networks(	ip CHAR(15) NOT NULL  ENCODE lzo	  ,"network" CHAR(32) NOT NULL  ENCODE lzo	  ,state CHAR(4) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_networks owner to rdsdb;--DROP TABLE pg_catalog.stv_node_storage_capacity;CREATE TABLE IF NOT EXISTS pg_catalog.stv_node_storage_capacity(	node INTEGER NOT NULL  ENCODE az64	  ,used BIGINT NOT NULL  ENCODE az64	  ,capacity BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_node_storage_capacity owner to rdsdb;--DROP TABLE pg_catalog.stv_nodes;CREATE TABLE IF NOT EXISTS pg_catalog.stv_nodes(	ip CHAR(15) NOT NULL  ENCODE lzo	  ,duty CHAR(16) NOT NULL  ENCODE lzo	  ,is_pingable CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_nodes owner to rdsdb;--DROP TABLE pg_catalog.stv_partitions;CREATE TABLE IF NOT EXISTS pg_catalog.stv_partitions(	"owner" INTEGER NOT NULL  ENCODE az64	  ,"host" INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,part_begin BIGINT NOT NULL  ENCODE az64	  ,part_end BIGINT NOT NULL  ENCODE az64	  ,used INTEGER NOT NULL  ENCODE az64	  ,tossed INTEGER NOT NULL  ENCODE az64	  ,capacity INTEGER NOT NULL  ENCODE az64	  ,reads BIGINT NOT NULL  ENCODE az64	  ,writes BIGINT NOT NULL  ENCODE az64	  ,seek_forward INTEGER NOT NULL  ENCODE az64	  ,seek_back INTEGER NOT NULL  ENCODE az64	  ,is_san INTEGER NOT NULL  ENCODE az64	  ,failed INTEGER NOT NULL  ENCODE az64	  ,mbps INTEGER NOT NULL  ENCODE az64	  ,mount CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_partitions owner to rdsdb;--DROP TABLE pg_catalog.stv_pg_wal_length;CREATE TABLE IF NOT EXISTS pg_catalog.stv_pg_wal_length(	num_blocks INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_pg_wal_length owner to rdsdb;--DROP TABLE pg_catalog.stv_proc_stat;CREATE TABLE IF NOT EXISTS pg_catalog.stv_proc_stat(	node INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64	  ,elapsed INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,tasknum INTEGER NOT NULL  ENCODE az64	  ,utime BIGINT NOT NULL  ENCODE az64	  ,stime BIGINT NOT NULL  ENCODE az64	  ,memory BIGINT NOT NULL  ENCODE az64	  ,name CHAR(50) NOT NULL  ENCODE lzo	  ,state CHAR(1) NOT NULL  ENCODE lzo	  ,ppid INTEGER NOT NULL  ENCODE az64	  ,pgrp INTEGER NOT NULL  ENCODE az64	  ,"session" INTEGER NOT NULL  ENCODE az64	  ,tty_nr INTEGER NOT NULL  ENCODE az64	  ,tpgid INTEGER NOT NULL  ENCODE az64	  ,flags BIGINT NOT NULL  ENCODE az64	  ,minflt BIGINT NOT NULL  ENCODE az64	  ,cminflt BIGINT NOT NULL  ENCODE az64	  ,majflt BIGINT NOT NULL  ENCODE az64	  ,cmajflt BIGINT NOT NULL  ENCODE az64	  ,cutime BIGINT NOT NULL  ENCODE az64	  ,cstime BIGINT NOT NULL  ENCODE az64	  ,priority BIGINT NOT NULL  ENCODE az64	  ,nice BIGINT NOT NULL  ENCODE az64	  ,ignore0 BIGINT NOT NULL  ENCODE az64	  ,itrealvalue BIGINT NOT NULL  ENCODE az64	  ,starttime BIGINT NOT NULL  ENCODE az64	  ,vsize BIGINT NOT NULL  ENCODE az64	  ,rss BIGINT NOT NULL  ENCODE az64	  ,rlim BIGINT NOT NULL  ENCODE az64	  ,startcode BIGINT NOT NULL  ENCODE az64	  ,endcode BIGINT NOT NULL  ENCODE az64	  ,startstack BIGINT NOT NULL  ENCODE az64	  ,kstkesp BIGINT NOT NULL  ENCODE az64	  ,kstkeip BIGINT NOT NULL  ENCODE az64	  ,signal BIGINT NOT NULL  ENCODE az64	  ,blocked BIGINT NOT NULL  ENCODE az64	  ,sigignore BIGINT NOT NULL  ENCODE az64	  ,sigcatch BIGINT NOT NULL  ENCODE az64	  ,wchan BIGINT NOT NULL  ENCODE az64	  ,nswap BIGINT NOT NULL  ENCODE az64	  ,cnswap BIGINT NOT NULL  ENCODE az64	  ,exit_signal INTEGER NOT NULL  ENCODE az64	  ,processor INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_proc_stat owner to rdsdb;--DROP TABLE pg_catalog.stv_process_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_process_state(	pid INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"process_type" INTEGER NOT NULL  ENCODE az64	  ,process_type_str CHAR(64) NOT NULL  ENCODE lzo	  ,record_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,mem_current_virtual_kb BIGINT NOT NULL  ENCODE az64	  ,mem_peak_virtual_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_kb BIGINT NOT NULL  ENCODE az64	  ,mem_peak_rss_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_anon_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_file_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_rss_shared_kb BIGINT NOT NULL  ENCODE az64	  ,mem_current_swap_kb BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_process_state owner to rdsdb;--DROP TABLE pg_catalog.stv_profiler;CREATE TABLE IF NOT EXISTS pg_catalog.stv_profiler(	node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,context CHAR(512) NOT NULL  ENCODE lzo	  ,elapsed_time BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_profiler owner to rdsdb;--DROP TABLE pg_catalog.stv_query_mem_leaks;CREATE TABLE IF NOT EXISTS pg_catalog.stv_query_mem_leaks(	isquery CHAR(1) NOT NULL  ENCODE lzo	  ,id INTEGER NOT NULL  ENCODE az64	  ,pname CHAR(15) NOT NULL  ENCODE lzo	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,"type" INTEGER NOT NULL  ENCODE az64	  ,rounded BIGINT NOT NULL  ENCODE az64	  ,itemcount BIGINT NOT NULL  ENCODE az64	  ,totalrequested BIGINT NOT NULL  ENCODE az64	  ,totalrounded BIGINT NOT NULL  ENCODE az64	  ,totalconsumed BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_query_mem_leaks owner to rdsdb;--DROP TABLE pg_catalog.stv_query_mem_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stv_query_mem_stats(	node INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,cur_mem_count BIGINT NOT NULL  ENCODE az64	  ,cur_mem_size BIGINT NOT NULL  ENCODE az64	  ,cur_pin_count BIGINT NOT NULL  ENCODE az64	  ,cur_unpin_count BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_query_mem_stats owner to rdsdb;--DROP TABLE pg_catalog.stv_query_mem_stats_by_type;CREATE TABLE IF NOT EXISTS pg_catalog.stv_query_mem_stats_by_type(	node INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(25) NOT NULL  ENCODE lzo	  ,allocated_count BIGINT NOT NULL  ENCODE az64	  ,freed_count BIGINT NOT NULL  ENCODE az64	  ,max_mem_count BIGINT NOT NULL  ENCODE az64	  ,allocated_size BIGINT NOT NULL  ENCODE az64	  ,freed_size BIGINT NOT NULL  ENCODE az64	  ,max_mem_size BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_query_mem_stats_by_type owner to rdsdb;--DROP TABLE pg_catalog.stv_query_metrics;CREATE TABLE IF NOT EXISTS pg_catalog.stv_query_metrics(	userid INTEGER NOT NULL  ENCODE az64	  ,service_class INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,segment INTEGER NOT NULL  ENCODE az64	  ,step_type INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,slices INTEGER NOT NULL  ENCODE az64	  ,max_rows BIGINT NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,max_cpu_time BIGINT NOT NULL  ENCODE az64	  ,cpu_time BIGINT NOT NULL  ENCODE az64	  ,max_blocks_read INTEGER NOT NULL  ENCODE az64	  ,blocks_read BIGINT NOT NULL  ENCODE az64	  ,max_run_time BIGINT NOT NULL  ENCODE az64	  ,run_time BIGINT NOT NULL  ENCODE az64	  ,max_blocks_to_disk BIGINT NOT NULL  ENCODE az64	  ,blocks_to_disk BIGINT NOT NULL  ENCODE az64	  ,step INTEGER NOT NULL  ENCODE az64	  ,max_query_scan_size BIGINT NOT NULL  ENCODE az64	  ,query_scan_size BIGINT NOT NULL  ENCODE az64	  ,query_priority INTEGER NOT NULL  ENCODE az64	  ,query_queue_time BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_query_metrics owner to rdsdb;--DROP TABLE pg_catalog.stv_query_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stv_query_stats(	node_num BIGINT NOT NULL  ENCODE az64	  ,query_id BIGINT NOT NULL  ENCODE az64	  ,temp_blocks BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_query_stats owner to rdsdb;--DROP TABLE pg_catalog.stv_recent_io;CREATE TABLE IF NOT EXISTS pg_catalog.stv_recent_io(	slice INTEGER NOT NULL  ENCODE az64	  ,tbl INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,is_write INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,prefetched INTEGER NOT NULL  ENCODE az64	  ,node_num INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64	  ,io_size INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_recent_io owner to rdsdb;--DROP TABLE pg_catalog.stv_recents;CREATE TABLE IF NOT EXISTS pg_catalog.stv_recents(	userid INTEGER NOT NULL  ENCODE az64	  ,status CHAR(20) NOT NULL  ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,duration BIGINT NOT NULL  ENCODE az64	  ,user_name CHAR(50) NOT NULL  ENCODE lzo	  ,db_name CHAR(50) NOT NULL  ENCODE lzo	  ,query CHAR(600) NOT NULL  ENCODE lzo	  ,pid INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_recents owner to rdsdb;--DROP TABLE pg_catalog.stv_resize_library_import;CREATE TABLE IF NOT EXISTS pg_catalog.stv_resize_library_import(	library_name CHAR(128) NOT NULL  ENCODE lzo	  ,owner_name CHAR(128) NOT NULL  ENCODE lzo	  ,language_name CHAR(128) NOT NULL  ENCODE lzo	  ,is_imported INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_resize_library_import owner to rdsdb;--DROP TABLE pg_catalog.stv_resize_ml_model_import;CREATE TABLE IF NOT EXISTS pg_catalog.stv_resize_ml_model_import(	model_name CHAR(128) NOT NULL  ENCODE lzo	  ,db_name CHAR(128) NOT NULL  ENCODE lzo	  ,schema_name CHAR(128) NOT NULL  ENCODE lzo	  ,model_version INTEGER NOT NULL  ENCODE az64	  ,is_imported INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_resize_ml_model_import owner to rdsdb;--DROP TABLE pg_catalog.stv_resize_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_resize_state(	status CHAR(20) NOT NULL  ENCODE lzo	  ,origin CHAR(24) NOT NULL  ENCODE lzo	  ,snapshot_copied INTEGER NOT NULL  ENCODE az64	  ,rebuild_xid INTEGER NOT NULL  ENCODE az64	  ,schema_imported INTEGER NOT NULL  ENCODE az64	  ,metadata_imported INTEGER NOT NULL  ENCODE az64	  ,total_tables INTEGER NOT NULL  ENCODE az64	  ,tables_imported INTEGER NOT NULL  ENCODE az64	  ,total_libraries INTEGER NOT NULL  ENCODE az64	  ,libraries_imported INTEGER NOT NULL  ENCODE az64	  ,retries_left INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,failure_reason CHAR(256) NOT NULL  ENCODE lzo	  ,src_instance_type CHAR(20) NOT NULL  ENCODE lzo	  ,dst_instance_type CHAR(20) NOT NULL  ENCODE lzo	  ,src_node_cnt INTEGER NOT NULL  ENCODE az64	  ,dst_node_cnt INTEGER NOT NULL  ENCODE az64	  ,binary_resize_disabled INTEGER NOT NULL  ENCODE az64	  ,parallel_table_transfer INTEGER NOT NULL  ENCODE az64	  ,total_ml_models INTEGER NOT NULL  ENCODE az64	  ,ml_models_imported INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_resize_state owner to rdsdb;--DROP TABLE pg_catalog.stv_resize_table_import;CREATE TABLE IF NOT EXISTS pg_catalog.stv_resize_table_import(	table_id INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(128) NOT NULL  ENCODE lzo	  ,db_name CHAR(128) NOT NULL  ENCODE lzo	  ,schema_name CHAR(128) NOT NULL  ENCODE lzo	  ,is_imported INTEGER NOT NULL  ENCODE az64	  ,import_state INTEGER NOT NULL  ENCODE az64	  ,starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,endtime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,row_count BIGINT NOT NULL  ENCODE az64	  ,sorted_rows BIGINT NOT NULL  ENCODE az64	  ,src_blk_cnt BIGINT NOT NULL  ENCODE az64	  ,tgt_blk_cnt BIGINT NOT NULL  ENCODE az64	  ,src_blk_cnt_perc DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,dist_style INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_resize_table_import owner to rdsdb;--DROP TABLE pg_catalog.stv_restore_table_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_restore_table_state(	table_id INTEGER NOT NULL  ENCODE az64	  ,node INTEGER NOT NULL  ENCODE az64	  ,total_blocks BIGINT NOT NULL  ENCODE az64	  ,blocks_restored BIGINT NOT NULL  ENCODE az64	  ,in_progress INTEGER NOT NULL  ENCODE az64	  ,allow_snapshot_delete INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_restore_table_state owner to rdsdb;--DROP TABLE pg_catalog.stv_result_cache;CREATE TABLE IF NOT EXISTS pg_catalog.stv_result_cache(	cache_id INTEGER NOT NULL  ENCODE az64	  ,source_query INTEGER NOT NULL  ENCODE az64	  ,invalidated_by BIGINT NOT NULL  ENCODE az64	  ,result_size_rows BIGINT NOT NULL  ENCODE az64	  ,result_size_bytes BIGINT NOT NULL  ENCODE az64	  ,hit_count BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_result_cache owner to rdsdb;--DROP TABLE pg_catalog.stv_s3_commit_mid;CREATE TABLE IF NOT EXISTS pg_catalog.stv_s3_commit_mid(	node INTEGER NOT NULL  ENCODE az64	  ,checksum BIGINT NOT NULL  ENCODE az64	  ,prolog_guid CHAR(120) NOT NULL  ENCODE lzo	  ,s3_commit_list_guid CHAR(120) NOT NULL  ENCODE lzo	  ,s3_commit_state INTEGER NOT NULL  ENCODE az64	  ,s3_commit_enabled INTEGER NOT NULL  ENCODE az64	  ,topology_file_version INTEGER NOT NULL  ENCODE az64	  ,prev_prolog_guid CHAR(120) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_s3_commit_mid owner to rdsdb;--DROP TABLE pg_catalog.stv_schema_quota_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_schema_quota_state(	db_id INTEGER NOT NULL  ENCODE az64	  ,schema_id INTEGER NOT NULL  ENCODE az64	  ,is_created INTEGER NOT NULL  ENCODE az64	  ,is_updated INTEGER NOT NULL  ENCODE az64	  ,is_deleted INTEGER NOT NULL  ENCODE az64	  ,ddl_change_xid BIGINT NOT NULL  ENCODE az64	  ,"quota" INTEGER NOT NULL  ENCODE az64	  ,disk_usage INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_schema_quota_state owner to rdsdb;--DROP TABLE pg_catalog.stv_sem_usage;CREATE TABLE IF NOT EXISTS pg_catalog.stv_sem_usage(	node INTEGER NOT NULL  ENCODE az64	  ,count BIGINT NOT NULL  ENCODE az64	  ,waiting_time BIGINT NOT NULL  ENCODE az64	  ,longest BIGINT NOT NULL  ENCODE az64	  ,longest_timestamp TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,mutex_requests BIGINT NOT NULL  ENCODE az64	  ,name CHAR(25) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_sem_usage owner to rdsdb;--DROP TABLE pg_catalog.stv_session_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_session_state(	process INTEGER NOT NULL  ENCODE az64	  ,num_prepared_stmts BIGINT NOT NULL  ENCODE az64	  ,bytes_used BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_session_state owner to rdsdb;--DROP TABLE pg_catalog.stv_sessions;CREATE TABLE IF NOT EXISTS pg_catalog.stv_sessions(	starttime TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,process INTEGER NOT NULL  ENCODE az64	  ,user_name CHAR(50) NOT NULL  ENCODE lzo	  ,db_name CHAR(50) NOT NULL  ENCODE lzo	  ,timeout_sec INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_sessions owner to rdsdb;--DROP TABLE pg_catalog.stv_shmmem_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stv_shmmem_stats(	node INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(25) NOT NULL  ENCODE lzo	  ,allocated BIGINT NOT NULL  ENCODE az64	  ,freed BIGINT NOT NULL  ENCODE az64	  ,highmark BIGINT NOT NULL  ENCODE az64	  ,allocated_size BIGINT NOT NULL  ENCODE az64	  ,freed_size BIGINT NOT NULL  ENCODE az64	  ,highmark_size BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_shmmem_stats owner to rdsdb;--DROP TABLE pg_catalog.stv_slices;CREATE TABLE IF NOT EXISTS pg_catalog.stv_slices(	node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,localslice INTEGER NOT NULL  ENCODE az64	  ,"type" CHAR(1) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_slices owner to rdsdb;--DROP TABLE pg_catalog.stv_spectrum_cache_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_spectrum_cache_state(	node INTEGER NOT NULL  ENCODE az64	  ,cache_disabled INTEGER NOT NULL  ENCODE az64	  ,seconds_to_reenable INTEGER NOT NULL  ENCODE az64	  ,valid_encryption_key INTEGER NOT NULL  ENCODE az64	  ,ddb_table CHAR(100) NOT NULL  ENCODE lzo	  ,"s3_bucket" CHAR(100) NOT NULL  ENCODE lzo	  ,tokens_available INTEGER NOT NULL  ENCODE az64	  ,max_tokens INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_spectrum_cache_state owner to rdsdb;--DROP TABLE pg_catalog.stv_spx_mem_stats;CREATE TABLE IF NOT EXISTS pg_catalog.stv_spx_mem_stats(	total_size BIGINT NOT NULL  ENCODE az64	  ,allocated BIGINT NOT NULL  ENCODE az64	  ,allocated_size BIGINT NOT NULL  ENCODE az64	  ,available_size BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_spx_mem_stats owner to rdsdb;--DROP TABLE pg_catalog.stv_startup_recovery_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_startup_recovery_state(	db_id INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,table_name CHAR(137) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_startup_recovery_state owner to rdsdb;--DROP TABLE pg_catalog.stv_storage_oid_map;CREATE TABLE IF NOT EXISTS pg_catalog.stv_storage_oid_map(	"key" CHAR(128) NOT NULL  ENCODE lzo	  ,storage_oid BIGINT NOT NULL  ENCODE az64	  ,external_oid BIGINT NOT NULL  ENCODE az64	  ,"host" CHAR(64) NOT NULL  ENCODE lzo	  ,db_name CHAR(128) NOT NULL  ENCODE lzo	  ,schema_name CHAR(128) NOT NULL  ENCODE lzo	  ,table_name CHAR(128) NOT NULL  ENCODE lzo	  ,ddl_end_version BIGINT NOT NULL  ENCODE az64	  ,grafted_sb_version BIGINT NOT NULL  ENCODE az64	  ,current_dml_end_version BIGINT NOT NULL  ENCODE az64	  ,current_structure_chg_version BIGINT NOT NULL  ENCODE az64	  ,target_dml_end_version BIGINT NOT NULL  ENCODE az64	  ,target_structure_chg_version BIGINT NOT NULL  ENCODE az64	  ,in_grafting INTEGER NOT NULL  ENCODE az64	  ,ref_count INTEGER NOT NULL  ENCODE az64	  ,marked_for_deletion INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_storage_oid_map owner to rdsdb;--DROP TABLE pg_catalog.stv_superblock;CREATE TABLE IF NOT EXISTS pg_catalog.stv_superblock(	node INTEGER NOT NULL  ENCODE az64	  ,fs_version BIGINT NOT NULL  ENCODE az64	  ,sb_version BIGINT NOT NULL  ENCODE az64	  ,defrag_version BIGINT NOT NULL  ENCODE az64	  ,num_blocks INTEGER NOT NULL  ENCODE az64	  ,high_qid BIGINT NOT NULL  ENCODE az64	  ,crc INTEGER NOT NULL  ENCODE az64	  ,flags INTEGER NOT NULL  ENCODE az64	  ,num_uncommitted BIGINT NOT NULL  ENCODE az64	  ,active_log INTEGER NOT NULL  ENCODE az64	  ,is_extended_superblock INTEGER NOT NULL  ENCODE az64	  ,superblock_capacity BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_superblock owner to rdsdb;--DROP TABLE pg_catalog.stv_superblock_locations;CREATE TABLE IF NOT EXISTS pg_catalog.stv_superblock_locations(	"owner" INTEGER NOT NULL  ENCODE az64	  ,"host" INTEGER NOT NULL  ENCODE az64	  ,diskno INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_superblock_locations owner to rdsdb;--DROP TABLE pg_catalog.stv_table_interval_map;CREATE TABLE IF NOT EXISTS pg_catalog.stv_table_interval_map(	table_id INTEGER NOT NULL  ENCODE az64	  ,modified_version BIGINT NOT NULL  ENCODE az64	  ,backup_version BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_table_interval_map owner to rdsdb;--DROP TABLE pg_catalog.stv_table_partition_summary;CREATE TABLE IF NOT EXISTS pg_catalog.stv_table_partition_summary(	id INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,sorted_rows BIGINT NOT NULL  ENCODE az64	  ,num_blocks BIGINT NOT NULL  ENCODE az64	  ,num_parts INTEGER NOT NULL  ENCODE az64	  ,num_overlap_parts INTEGER NOT NULL  ENCODE az64	  ,parts_sorted INTEGER NOT NULL  ENCODE az64	  ,parts_clustered INTEGER NOT NULL  ENCODE az64	  ,parts_hot INTEGER NOT NULL  ENCODE az64	  ,sorted_perc INTEGER NOT NULL  ENCODE az64	  ,clustered_perc INTEGER NOT NULL  ENCODE az64	  ,frag_perc INTEGER NOT NULL  ENCODE az64	  ,min_part_sz BIGINT NOT NULL  ENCODE az64	  ,max_part_sz BIGINT NOT NULL  ENCODE az64	  ,avg_part_sz BIGINT NOT NULL  ENCODE az64	  ,avg_part_query_usage INTEGER NOT NULL  ENCODE az64	  ,version BIGINT NOT NULL  ENCODE az64	  ,scan_count BIGINT NOT NULL  ENCODE az64	  ,full_sort_scan_count BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_table_partition_summary owner to rdsdb;--DROP TABLE pg_catalog.stv_table_partitions;CREATE TABLE IF NOT EXISTS pg_catalog.stv_table_partitions(	id INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,partition_id BIGINT NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,flags INTEGER NOT NULL  ENCODE az64	  ,num_blocks BIGINT NOT NULL  ENCODE az64	  ,num_overlapping_partitions INTEGER NOT NULL  ENCODE az64	  ,degree_of_overlap INTEGER NOT NULL  ENCODE az64	  ,is_hot CHAR(1) NOT NULL  ENCODE lzo	  ,is_sorted CHAR(1) NOT NULL  ENCODE lzo	  ,is_range_partitioned CHAR(1) NOT NULL  ENCODE lzo	  ,qpd INTEGER NOT NULL  ENCODE az64	  ,total_wasted_blocks BIGINT NOT NULL  ENCODE az64	  ,total_blocks_read BIGINT NOT NULL  ENCODE az64	  ,total_blocks_used BIGINT NOT NULL  ENCODE az64	  ,no_loss_scans_count BIGINT NOT NULL  ENCODE az64	  ,zero_bias_scans_count BIGINT NOT NULL  ENCODE az64	  ,scan_count BIGINT NOT NULL  ENCODE az64	  ,first_qpd_rise_ts TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,first_marked_hot_ts TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,num_scans_to_mark_hot BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_table_partitions owner to rdsdb;--DROP TABLE pg_catalog.stv_table_vacuum_advisor_info;CREATE TABLE IF NOT EXISTS pg_catalog.stv_table_vacuum_advisor_info(	table_id INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,eventname CHAR(100) NOT NULL  ENCODE lzo	  ,impact BIGINT NOT NULL  ENCODE az64	  ,num_blocks BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_table_vacuum_advisor_info owner to rdsdb;--DROP TABLE pg_catalog.stv_tbl_column_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_tbl_column_state(	node INTEGER NOT NULL  ENCODE az64	  ,table_id INTEGER NOT NULL  ENCODE az64	  ,sort_keys_num INTEGER NOT NULL  ENCODE az64	  ,sort_groups_num INTEGER NOT NULL  ENCODE az64	  ,z_indexed INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,col_sortkey_ordinal INTEGER NOT NULL  ENCODE az64	  ,col_sortgroup INTEGER NOT NULL  ENCODE az64	  ,col_sortkey_id INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_tbl_column_state owner to rdsdb;--DROP TABLE pg_catalog.stv_tbl_fragmentation;CREATE TABLE IF NOT EXISTS pg_catalog.stv_tbl_fragmentation(	tbl INTEGER NOT NULL  ENCODE az64	  ,num_cols INTEGER NOT NULL  ENCODE az64	  ,"diststyle" CHAR(100) NOT NULL  ENCODE lzo	  ,node INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,num_blocks INTEGER NOT NULL  ENCODE az64	  ,num_rows INTEGER NOT NULL  ENCODE az64	  ,occupancy DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,max_blockchain_length INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_tbl_fragmentation owner to rdsdb;--DROP TABLE pg_catalog.stv_tbl_perm;CREATE TABLE IF NOT EXISTS pg_catalog.stv_tbl_perm(	slice INTEGER NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,name CHAR(128) NOT NULL  ENCODE lzo	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,sorted_rows BIGINT NOT NULL  ENCODE az64	  ,"temp" INTEGER NOT NULL  ENCODE az64	  ,db_id INTEGER NOT NULL  ENCODE az64	  ,insert_pristine INTEGER NOT NULL  ENCODE az64	  ,delete_pristine INTEGER NOT NULL  ENCODE az64	  ,"backup" INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_tbl_perm owner to rdsdb;--DROP TABLE pg_catalog.stv_tbl_perm_property;CREATE TABLE IF NOT EXISTS pg_catalog.stv_tbl_perm_property(	slice INTEGER NOT NULL  ENCODE az64	  ,db_id INTEGER NOT NULL  ENCODE az64	  ,namespace_id INTEGER NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,name CHAR(72) NOT NULL  ENCODE lzo	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,sorted_rows BIGINT NOT NULL  ENCODE az64	  ,"temp" INTEGER NOT NULL  ENCODE az64	  ,insert_pristine INTEGER NOT NULL  ENCODE az64	  ,delete_pristine INTEGER NOT NULL  ENCODE az64	  ,"backup" INTEGER NOT NULL  ENCODE az64	  ,dist INTEGER NOT NULL  ENCODE az64	  ,ddl_end_version BIGINT NOT NULL  ENCODE az64	  ,total_col_num INTEGER NOT NULL  ENCODE az64	  ,shadow_col_num INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_tbl_perm_property owner to rdsdb;--DROP TABLE pg_catalog.stv_tbl_trans;CREATE TABLE IF NOT EXISTS pg_catalog.stv_tbl_trans(	slice INTEGER NOT NULL  ENCODE az64	  ,id INTEGER NOT NULL  ENCODE az64	  ,"rows" BIGINT NOT NULL  ENCODE az64	  ,size BIGINT NOT NULL  ENCODE az64	  ,query_id BIGINT NOT NULL  ENCODE az64	  ,ref_cnt INTEGER NOT NULL  ENCODE az64	  ,from_suspended INTEGER NOT NULL  ENCODE az64	  ,prep_swap INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_tbl_trans owner to rdsdb;--DROP TABLE pg_catalog.stv_transactions;CREATE TABLE IF NOT EXISTS pg_catalog.stv_transactions(	xid BIGINT NOT NULL  ENCODE az64	  ,pid BIGINT NOT NULL  ENCODE az64	  ,start_ts TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_ts TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,w_table_id INTEGER NOT NULL  ENCODE az64	  ,rtl_count INTEGER NOT NULL  ENCODE az64	  ,wtl_count INTEGER NOT NULL  ENCODE az64	  ,skip_lock INTEGER NOT NULL  ENCODE az64	  ,ended INTEGER NOT NULL  ENCODE az64	  ,in_rollback INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_transactions owner to rdsdb;--DROP TABLE pg_catalog.stv_underrepped_blocks;CREATE TABLE IF NOT EXISTS pg_catalog.stv_underrepped_blocks(	slice INTEGER NOT NULL  ENCODE az64	  ,sb_pos INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_underrepped_blocks owner to rdsdb;--DROP TABLE pg_catalog.stv_unused_hdr_fields_with_defaults;CREATE TABLE IF NOT EXISTS pg_catalog.stv_unused_hdr_fields_with_defaults(	node INTEGER NOT NULL  ENCODE az64	  ,num_toss_gen_id_with_dflts BIGINT NOT NULL  ENCODE az64	  ,m_flags_13thb_with_dflts BIGINT NOT NULL  ENCODE az64	  ,max_used_hdrs BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_unused_hdr_fields_with_defaults owner to rdsdb;--DROP TABLE pg_catalog.stv_vacuum_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_vacuum_state(	slice BIGINT NOT NULL  ENCODE az64	  ,table_id BIGINT NOT NULL  ENCODE az64	  ,seq BIGINT NOT NULL  ENCODE az64	  ,operation BIGINT NOT NULL  ENCODE az64	  ,merge_start INTEGER NOT NULL  ENCODE az64	  ,merge_end INTEGER NOT NULL  ENCODE az64	  ,part INTEGER NOT NULL  ENCODE az64	  ,part_rows BIGINT NOT NULL  ENCODE az64	  ,part_rows_processed BIGINT NOT NULL  ENCODE az64	  ,unsorted_rows BIGINT NOT NULL  ENCODE az64	  ,total_rows BIGINT NOT NULL  ENCODE az64	  ,last_processed_row BIGINT NOT NULL  ENCODE az64	  ,deleted_rows BIGINT NOT NULL  ENCODE az64	  ,inserted_rows BIGINT NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,xid BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_vacuum_state owner to rdsdb;--DROP TABLE pg_catalog.stv_vpid;CREATE TABLE IF NOT EXISTS pg_catalog.stv_vpid(	vpid INTEGER NOT NULL  ENCODE az64	  ,pid INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_vpid owner to rdsdb;--DROP TABLE pg_catalog.stv_wlm_classification_config;CREATE TABLE IF NOT EXISTS pg_catalog.stv_wlm_classification_config(	id INTEGER NOT NULL  ENCODE az64	  ,condition CHAR(128) NOT NULL  ENCODE lzo	  ,action_seq INTEGER NOT NULL  ENCODE az64	  ,"action" CHAR(64) NOT NULL  ENCODE lzo	  ,action_service_class INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_wlm_classification_config owner to rdsdb;--DROP TABLE pg_catalog.stv_wlm_config;CREATE TABLE IF NOT EXISTS pg_catalog.stv_wlm_config(	name CHAR(64) NOT NULL  ENCODE lzo	  ,value CHAR(128) NOT NULL  ENCODE lzo	  ,command CHAR(128) NOT NULL  ENCODE lzo	  ,"comment" CHAR(128) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_wlm_config owner to rdsdb;--DROP TABLE pg_catalog.stv_wlm_config_internal;CREATE TABLE IF NOT EXISTS pg_catalog.stv_wlm_config_internal(	name CHAR(64) NOT NULL  ENCODE lzo	  ,value CHAR(128) NOT NULL  ENCODE lzo	  ,command CHAR(128) NOT NULL  ENCODE lzo	  ,"comment" CHAR(128) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_wlm_config_internal owner to rdsdb;--DROP TABLE pg_catalog.stv_wlm_qmr_config;CREATE TABLE IF NOT EXISTS pg_catalog.stv_wlm_qmr_config(	service_class INTEGER NOT NULL  ENCODE az64	  ,rule_name CHAR(256) NOT NULL  ENCODE lzo	  ,"action" CHAR(256) NOT NULL  ENCODE lzo	  ,metric_name CHAR(256) NOT NULL  ENCODE lzo	  ,metric_operator CHAR(2) NOT NULL  ENCODE lzo	  ,metric_value DOUBLE PRECISION NOT NULL  ENCODE RAW	  ,action_value CHAR(256) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_wlm_qmr_config owner to rdsdb;--DROP TABLE pg_catalog.stv_wlm_query_queue_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_wlm_query_queue_state(	service_class INTEGER NOT NULL  ENCODE az64	  ,"position" INTEGER NOT NULL  ENCODE az64	  ,task INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slot_count INTEGER NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,queue_time BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_wlm_query_queue_state owner to rdsdb;--DROP TABLE pg_catalog.stv_wlm_query_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_wlm_query_state(	xid BIGINT NOT NULL  ENCODE az64	  ,task INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,service_class INTEGER NOT NULL  ENCODE az64	  ,slot_count INTEGER NOT NULL  ENCODE az64	  ,wlm_start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,state CHAR(16) NOT NULL  ENCODE lzo	  ,queue_time BIGINT NOT NULL  ENCODE az64	  ,exec_time BIGINT NOT NULL  ENCODE az64	  ,query_priority CHAR(20) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_wlm_query_state owner to rdsdb;--DROP TABLE pg_catalog.stv_wlm_query_task_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_wlm_query_task_state(	service_class INTEGER NOT NULL  ENCODE az64	  ,task INTEGER NOT NULL  ENCODE az64	  ,query INTEGER NOT NULL  ENCODE az64	  ,slot_count INTEGER NOT NULL  ENCODE az64	  ,start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,exec_time BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_wlm_query_task_state owner to rdsdb;--DROP TABLE pg_catalog.stv_wlm_service_class_config;CREATE TABLE IF NOT EXISTS pg_catalog.stv_wlm_service_class_config(	service_class INTEGER NOT NULL  ENCODE az64	  ,queueing_strategy CHAR(32) NOT NULL  ENCODE lzo	  ,num_query_tasks INTEGER NOT NULL  ENCODE az64	  ,target_num_query_tasks INTEGER NOT NULL  ENCODE az64	  ,evictable CHAR(8) NOT NULL  ENCODE lzo	  ,eviction_threshold BIGINT NOT NULL  ENCODE az64	  ,query_working_mem INTEGER NOT NULL  ENCODE az64	  ,target_query_working_mem INTEGER NOT NULL  ENCODE az64	  ,min_step_mem INTEGER NOT NULL  ENCODE az64	  ,name CHAR(64) NOT NULL  ENCODE lzo	  ,max_execution_time INTEGER NOT NULL  ENCODE az64	  ,user_group_wild_card CHAR(8) NOT NULL  ENCODE lzo	  ,query_group_wild_card CHAR(8) NOT NULL  ENCODE lzo	  ,concurrency_scaling CHAR(20) NOT NULL  ENCODE lzo	  ,query_priority CHAR(20) NOT NULL  ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_wlm_service_class_config owner to rdsdb;--DROP TABLE pg_catalog.stv_wlm_service_class_state;CREATE TABLE IF NOT EXISTS pg_catalog.stv_wlm_service_class_state(	service_class INTEGER NOT NULL  ENCODE az64	  ,num_queued_queries INTEGER NOT NULL  ENCODE az64	  ,num_executing_queries INTEGER NOT NULL  ENCODE az64	  ,num_serviced_queries INTEGER NOT NULL  ENCODE az64	  ,num_executed_queries INTEGER NOT NULL  ENCODE az64	  ,num_evicted_queries INTEGER NOT NULL  ENCODE az64	  ,num_concurrency_scaling_queries INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_wlm_service_class_state owner to rdsdb;--DROP TABLE pg_catalog.stv_xact;CREATE TABLE IF NOT EXISTS pg_catalog.stv_xact(	xid BIGINT NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.stv_xact owner to rdsdb;--DROP TABLE pg_catalog.systable_globaldict;CREATE TABLE IF NOT EXISTS pg_catalog.systable_globaldict(	basetable_id INTEGER NOT NULL  ENCODE az64	  ,col INTEGER NOT NULL  ENCODE az64	  ,gdict_tbl_id INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.systable_globaldict owner to rdsdb;--DROP TABLE pg_catalog.systable_schema;CREATE TABLE IF NOT EXISTS pg_catalog.systable_schema(	filepos INTEGER NOT NULL  ENCODE az64	  ,name CHAR(128) NOT NULL  ENCODE lzo	  ,content CHAR(4096) NOT NULL  ENCODE lzo	  ,length INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.systable_schema owner to rdsdb;--DROP TABLE pg_catalog.systable_topology;CREATE TABLE IF NOT EXISTS pg_catalog.systable_topology(	hash INTEGER NOT NULL  ENCODE az64	  ,slice INTEGER NOT NULL  ENCODE az64	  ,mirror INTEGER NOT NULL  ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_catalog.systable_topology owner to rdsdb;--DROP TABLE pg_internal.redshift_auto_health_check_2953183;CREATE TABLE IF NOT EXISTS pg_internal.redshift_auto_health_check_2953183(	a INTEGER ENCODE az64)DISTSTYLE EVEN;ALTER TABLE pg_internal.redshift_auto_health_check_2953183 owner to rdsdb;--DROP TABLE public.customer;CREATE TABLE IF NOT EXISTS public.customer(	c_tenantid BIGINT NOT NULL  ENCODE az64	  ,c_custid BIGINT NOT NULL  ENCODE az64	  ,c_name VARCHAR(25) NOT NULL  ENCODE lzo	  ,c_region VARCHAR(40) NOT NULL  ENCODE lzo	  ,PRIMARY KEY (c_tenantid , c_custid))DISTSTYLE AUTO;ALTER TABLE public.customer owner to awsuser;--DROP TABLE public.dim_eqpmnt;CREATE TABLE IF NOT EXISTS public.dim_eqpmnt(	dim_eqpmnt_id BIGINT NOT NULL DEFAULT default_identity(155892 , 0 , ('1 ,1'::character varying)::text) ENCODE az64	  ,eqpmnt_oprtnl_id BIGINT NOT NULL  ENCODE RAW	  ,customer_oprtnl_id BIGINT NOT NULL  ENCODE az64	  ,location_oprtnl_id BIGINT ENCODE az64	  ,mfr_serial_number VARCHAR(30) ENCODE lzo	  ,eqpmnt_bk VARCHAR(166) ENCODE lzo	  ,eqpmnt_name VARCHAR(30) ENCODE lzo	  ,birth_year SMALLINT ENCODE az64	  ,service_weight_kg NUMERIC(13 ,3) ENCODE az64	  ,capacity_weight_kg NUMERIC(13 ,3) ENCODE az64	  ,impact_setting_disabled_flag BOOLEAN ENCODE RAW	  ,sense_at_rest_flag BOOLEAN ENCODE RAW	  ,eqpmnt_source_type_text_id VARCHAR(256) ENCODE lzo	  ,eqpmnt_source_ref_id VARCHAR(100) ENCODE lzo	  ,module_bk VARCHAR(18) ENCODE lzo	  ,assctn_user_oprtnl_id BIGINT ENCODE az64	  ,assctn_auto_flag BOOLEAN ENCODE RAW	  ,assctn_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,eqpmnt_avail_status VARCHAR(50) ENCODE lzo	  ,dim_pin_setting_id BIGINT NOT NULL  ENCODE az64	  ,dim_meter_setting_id BIGINT NOT NULL  ENCODE az64	  ,dim_impact_setting_id BIGINT NOT NULL  ENCODE az64	  ,eqpmnt_model_oprtnl_id BIGINT NOT NULL  ENCODE az64	  ,eqpmnt_model_name VARCHAR(65) ENCODE lzo	  ,eqpmnt_model_desc VARCHAR(100) ENCODE lzo	  ,model_engine_type_text_id VARCHAR(6) ENCODE lzo	  ,model_wired_io_flag BOOLEAN ENCODE RAW	  ,model_source_type_text_id VARCHAR(256) ENCODE lzo	  ,model_source_ref_id VARCHAR(100) ENCODE lzo	  ,model_dim_pin_setting_id BIGINT NOT NULL  ENCODE az64	  ,model_dim_meter_setting_id BIGINT NOT NULL  ENCODE az64	  ,model_dim_impact_setting_id BIGINT NOT NULL  ENCODE az64	  ,eqpmnt_type_oprtnl_id BIGINT NOT NULL  ENCODE az64	  ,eqpmnt_type_name VARCHAR(65) ENCODE lzo	  ,eqpmnt_type_desc VARCHAR(100) ENCODE lzo	  ,eqpmnt_mfr_oprtnl_id BIGINT NOT NULL  ENCODE az64	  ,eqpmnt_mfr_bk VARCHAR(4) ENCODE lzo	  ,eqpmnt_mfr_name VARCHAR(100) ENCODE lzo	  ,fltstts_mfr_bk CHAR(3) ENCODE lzo	  ,deleted_flag BOOLEAN NOT NULL DEFAULT 0 ENCODE RAW	  ,start_dt_utc TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE RAW	  ,end_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,current_flag BOOLEAN NOT NULL DEFAULT 1 ENCODE RAW	  ,force_valid_hour_meter_flag BOOLEAN NOT NULL DEFAULT 0 ENCODE RAW	  ,insert_dt_utc TIMESTAMP WITHOUT TIME ZONE  DEFAULT ('now'::character varying)::timestamp without time zone ENCODE az64	  ,update_dt_utc TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,PRIMARY KEY (dim_eqpmnt_id))DISTSTYLE ALL SORTKEY (	eqpmnt_oprtnl_id	  , start_dt_utc	);ALTER TABLE public.dim_eqpmnt owner to awsuser;--DROP TABLE public.event;CREATE TABLE IF NOT EXISTS public.event(	eventid INTEGER NOT NULL  ENCODE az64	  ,venueid SMALLINT NOT NULL  ENCODE az64	  ,catid SMALLINT NOT NULL  ENCODE az64	  ,dateid SMALLINT NOT NULL  ENCODE RAW	  ,eventname VARCHAR(200) ENCODE lzo	  ,starttime TIMESTAMP WITHOUT TIME ZONE ENCODE az64)DISTSTYLE KEY DISTKEY (eventid) SORTKEY (	dateid	);ALTER TABLE public.event owner to awsuser;--DROP TABLE public.graduate;CREATE TABLE IF NOT EXISTS public.graduate(	name VARCHAR(50) ENCODE lzo	  ,continent VARCHAR(50) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE public.graduate owner to awsuser;--DROP TABLE public.h_aircraft;CREATE TABLE IF NOT EXISTS public.h_aircraft(	aircraft_sk BIGINT ENCODE az64	  ,tailnum VARCHAR(50) ENCODE lzo	  ,create_ts TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,data_source VARCHAR(50) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE public.h_aircraft owner to awsuser;--DROP TABLE public.h_airport;CREATE TABLE IF NOT EXISTS public.h_airport(	airport_sk BIGINT ENCODE az64	  ,iata_code VARCHAR(50) ENCODE lzo	  ,create_ts TIMESTAMP WITHOUT TIME ZONE ENCODE az64)DISTSTYLE AUTO;ALTER TABLE public.h_airport owner to awsuser;--DROP TABLE public.h_flight;CREATE TABLE IF NOT EXISTS public.h_flight(	flight_sk BIGINT ENCODE az64	  ,flightnum VARCHAR(50) ENCODE lzo	  ,dest_airport_id BIGINT ENCODE az64	  ,origin_airport_id VARCHAR(50) ENCODE lzo	  ,data_source VARCHAR(50) ENCODE lzo	  ,create_ts TIMESTAMP WITHOUT TIME ZONE ENCODE az64)DISTSTYLE AUTO;ALTER TABLE public.h_flight owner to awsuser;--DROP TABLE public.l_airline_id;CREATE TABLE IF NOT EXISTS public.l_airline_id(	code INTEGER ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE public.l_airline_id owner to awsuser;--DROP TABLE public.l_airport_id;CREATE TABLE IF NOT EXISTS public.l_airport_id(	code INTEGER ENCODE az64	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE public.l_airport_id owner to awsuser;--DROP TABLE public.l_flight_aircraft;CREATE TABLE IF NOT EXISTS public.l_flight_aircraft(	flight_sk BIGINT ENCODE az64	  ,aircraft_sk BIGINT ENCODE az64)DISTSTYLE AUTO;ALTER TABLE public.l_flight_aircraft owner to awsuser;--DROP TABLE public.l_flight_from;CREATE TABLE IF NOT EXISTS public.l_flight_from(	flight_sk BIGINT ENCODE az64	  ,airport_sk BIGINT ENCODE az64)DISTSTYLE AUTO;ALTER TABLE public.l_flight_from owner to awsuser;--DROP TABLE public.l_flight_to;CREATE TABLE IF NOT EXISTS public.l_flight_to(	flight_sk BIGINT ENCODE az64	  ,airport_sk BIGINT ENCODE az64)DISTSTYLE AUTO;ALTER TABLE public.l_flight_to owner to awsuser;--DROP TABLE public.logs;CREATE TABLE IF NOT EXISTS public.logs(	id INTEGER ENCODE az64	  ,num INTEGER ENCODE az64)DISTSTYLE AUTO;ALTER TABLE public.logs owner to awsuser;--DROP TABLE public.mv_tbl__cancelled_flights__0;CREATE TABLE IF NOT EXISTS public.mv_tbl__cancelled_flights__0(	count BIGINT ENCODE az64	  ,"year" INTEGER ENCODE az64	  ,"month" INTEGER ENCODE az64	  ,uniquecarrier VARCHAR(255) ENCODE lzo	  ,airlineid INTEGER ENCODE az64	  ,code CHAR(4) ENCODE lzo	  ,description VARCHAR(255) ENCODE lzo)DISTSTYLE EVEN;ALTER TABLE public.mv_tbl__cancelled_flights__0 owner to rdsdb;--DROP TABLE public.orders;CREATE TABLE IF NOT EXISTS public.orders(	o_orderkey BIGINT NOT NULL  ENCODE az64	  ,o_custkey BIGINT ENCODE az64	  ,o_orderstatus VARCHAR(1) ENCODE lzo	  ,o_totalprice NUMERIC(18 ,4) ENCODE az64	  ,o_orderdate DATE ENCODE RAW	  ,o_orderpriority VARCHAR(15) ENCODE lzo	  ,o_clerk VARCHAR(15) ENCODE lzo	  ,o_shippriority INTEGER ENCODE az64	  ,o_comment VARCHAR(80) ENCODE lzo)DISTSTYLE KEY DISTKEY (o_orderkey) SORTKEY (	o_orderdate	);ALTER TABLE public.orders owner to awsuser;--DROP TABLE public.orders_bckup;CREATE TABLE IF NOT EXISTS public.orders_bckup(	o_orderkey BIGINT NOT NULL  ENCODE RAW	  ,o_custkey BIGINT ENCODE RAW	  ,o_orderstatus VARCHAR(1) ENCODE RAW	  ,o_totalprice NUMERIC(18 ,0) ENCODE RAW	  ,o_orderdate DATE ENCODE RAW	  ,o_orderpriority VARCHAR(15) ENCODE RAW	  ,o_clerk VARCHAR(15) ENCODE RAW	  ,o_shippriority INTEGER ENCODE RAW	  ,o_comment VARCHAR(80) ENCODE RAW)DISTSTYLE KEY DISTKEY (o_orderkey) SORTKEY (	o_orderkey	  , o_custkey	  , o_orderstatus	  , o_totalprice	  , o_orderpriority	  , o_clerk	  , o_shippriority	  , o_comment	  , o_orderdate	);ALTER TABLE public.orders_bckup owner to awsuser;--DROP TABLE public.s_aircraft;CREATE TABLE IF NOT EXISTS public.s_aircraft(	aircraft_sk BIGINT ENCODE az64	  ,manufacturer VARCHAR(100) ENCODE lzo	  ,"model" VARCHAR(50) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE public.s_aircraft owner to awsuser;--DROP TABLE public.s_flight;CREATE TABLE IF NOT EXISTS public.s_flight(	flight_sk BIGINT ENCODE az64	  ,scheduled_dep BIGINT ENCODE az64	  ,actual_dep BIGINT ENCODE az64	  ,scheduled_arrival BIGINT ENCODE az64	  ,actual_arrival BIGINT ENCODE az64	  ,delay_in_mins BIGINT ENCODE az64)DISTSTYLE AUTO;ALTER TABLE public.s_flight owner to awsuser;--DROP TABLE public.sales;CREATE TABLE IF NOT EXISTS public.sales(	s_tenantid BIGINT NOT NULL  ENCODE az64	  ,s_orderid BIGINT NOT NULL  ENCODE az64	  ,s_custid BIGINT NOT NULL  ENCODE az64	  ,s_totalprice NUMERIC(12 ,2) NOT NULL  ENCODE az64	  ,s_orderdate DATE NOT NULL  ENCODE az64	  ,PRIMARY KEY (s_tenantid , s_orderid))DISTSTYLE AUTO;ALTER TABLE public.sales owner to awsuser;--DROP TABLE public.salesrecord;CREATE TABLE IF NOT EXISTS public.salesrecord(	"region" VARCHAR(40) ENCODE lzo	  ,country VARCHAR(40) ENCODE lzo	  ,itemtype VARCHAR(40) ENCODE lzo	  ,saleschannel VARCHAR(40) ENCODE lzo	  ,orderpriority VARCHAR(40) ENCODE lzo	  ,orderdate VARCHAR(40) ENCODE lzo	  ,orderid BIGINT ENCODE az64	  ,shipdate DATE ENCODE az64	  ,unitsold BIGINT ENCODE az64	  ,unitprice DOUBLE PRECISION ENCODE RAW	  ,unitcost DOUBLE PRECISION ENCODE RAW	  ,totalrevenue DOUBLE PRECISION ENCODE RAW	  ,totalcost DOUBLE PRECISION ENCODE RAW	  ,totalprofit DOUBLE PRECISION ENCODE RAW)DISTSTYLE AUTO;ALTER TABLE public.salesrecord owner to awsuser;--DROP TABLE public.salesrecord_v2;CREATE TABLE IF NOT EXISTS public.salesrecord_v2(	"region" VARCHAR(40) ENCODE lzo	  ,country VARCHAR(40) ENCODE lzo	  ,itemtype VARCHAR(40) ENCODE lzo	  ,saleschannel VARCHAR(40) ENCODE lzo	  ,orderpriority VARCHAR(40) ENCODE lzo	  ,orderdate VARCHAR(40) ENCODE lzo	  ,orderid BIGINT ENCODE az64	  ,shipdate DATE ENCODE az64	  ,unitsold BIGINT ENCODE az64	  ,unitprice DOUBLE PRECISION ENCODE RAW	  ,unitcost DOUBLE PRECISION ENCODE RAW	  ,totalrevenue DOUBLE PRECISION ENCODE RAW	  ,totalcost DOUBLE PRECISION ENCODE RAW	  ,totalprofit DOUBLE PRECISION ENCODE RAW	  ,rank BIGINT ENCODE az64)DISTSTYLE EVEN;ALTER TABLE public.salesrecord_v2 owner to awsuser;--DROP TABLE public.stg_flightinfo;CREATE TABLE IF NOT EXISTS public.stg_flightinfo(	current_year INTEGER ENCODE az64	  ,current_quarter INTEGER ENCODE az64	  ,current_month INTEGER ENCODE az64	  ,day_of_month INTEGER ENCODE az64	  ,day_of_week INTEGER ENCODE az64	  ,fl_date DATE ENCODE az64	  ,op_unique_carrier VARCHAR(50) ENCODE lzo	  ,op_carrier_airline_id INTEGER ENCODE az64	  ,op_carrier VARCHAR(50) ENCODE lzo	  ,tail_num VARCHAR(50) ENCODE lzo	  ,op_carrier_fl_num VARCHAR(50) ENCODE lzo	  ,origin_airport_id VARCHAR(50) ENCODE lzo	  ,origin_airport_seq_id VARCHAR(50) ENCODE lzo	  ,origin_city_market_id VARCHAR(50) ENCODE lzo	  ,origin VARCHAR(50) ENCODE lzo	  ,origin_city_name VARCHAR(50) ENCODE lzo	  ,origin_state_abr VARCHAR(50) ENCODE lzo	  ,origin_state_fips INTEGER ENCODE az64	  ,origin_state_nm VARCHAR(50) ENCODE lzo	  ,dest_airport_id BIGINT ENCODE az64	  ,dest_airport_seq_id BIGINT ENCODE az64	  ,dest_city_market_id VARCHAR(50) ENCODE lzo	  ,dest VARCHAR(50) ENCODE lzo	  ,dest_city_name VARCHAR(50) ENCODE lzo	  ,dest_state_abr VARCHAR(50) ENCODE lzo	  ,dest_state_nm VARCHAR(50) ENCODE lzo	  ,crs_dep_time BIGINT ENCODE az64	  ,dep_time DOUBLE PRECISION ENCODE RAW	  ,dep_delay_new DOUBLE PRECISION ENCODE RAW	  ,crs_arr_time DOUBLE PRECISION ENCODE RAW	  ,arr_time DOUBLE PRECISION ENCODE RAW	  ,arr_delay DOUBLE PRECISION ENCODE RAW)DISTSTYLE AUTO;ALTER TABLE public.stg_flightinfo owner to awsuser;--DROP TABLE public.tenant;CREATE TABLE IF NOT EXISTS public.tenant(	t_tenantid BIGINT NOT NULL  ENCODE az64	  ,t_name VARCHAR(50) NOT NULL  ENCODE lzo	  ,t_namespace VARCHAR(50) ENCODE lzo	  ,t_account VARCHAR(16) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE public.tenant owner to awsuser;--DROP TABLE public.test;CREATE TABLE IF NOT EXISTS public.test(	order_id INTEGER ENCODE RAW)DISTSTYLE AUTO SORTKEY (	order_id	);ALTER TABLE public.test owner to awsuser;--DROP TABLE public.test_json;CREATE TABLE IF NOT EXISTS public.test_json(	id INTEGER  DEFAULT "identity"(238093 , 0 , '0 ,1'::text) ENCODE az64	  ,json_strings VARCHAR(256) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE public.test_json owner to awsuser;--DROP TABLE public.test_table;CREATE TABLE IF NOT EXISTS public.test_table(	remark VARCHAR(256) ENCODE lzo	  ,t VARCHAR(256) ENCODE lzo	  ,i INTEGER ENCODE az64)DISTSTYLE AUTO;ALTER TABLE public.test_table owner to awsuser;--DROP TABLE public.test_table_char;CREATE TABLE IF NOT EXISTS public.test_table_char(	remark VARCHAR(256) ENCODE lzo	  ,t CHAR(20) ENCODE lzo	  ,i INTEGER ENCODE az64)DISTSTYLE AUTO;ALTER TABLE public.test_table_char owner to awsuser;--DROP TABLE public.trips;CREATE TABLE IF NOT EXISTS public.trips(	id INTEGER ENCODE az64	  ,client_id INTEGER ENCODE az64	  ,driver_id INTEGER ENCODE az64	  ,city_id INTEGER ENCODE az64	  ,status VARCHAR(100) ENCODE lzo	  ,request_at DATE ENCODE az64)DISTSTYLE AUTO;ALTER TABLE public.trips owner to awsuser;--DROP TABLE public.user_group_assoc;CREATE TABLE IF NOT EXISTS public.user_group_assoc(	group_name_assoc VARCHAR(50) ENCODE lzo	  ,user_id_assoc INTEGER ENCODE az64	  ,user_name_assoc VARCHAR(50) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE public.user_group_assoc owner to awsuser;--DROP TABLE public.users;CREATE TABLE IF NOT EXISTS public.users(	users_id INTEGER ENCODE az64	  ,banned VARCHAR(10) ENCODE lzo	  ,role VARCHAR(10) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE public.users owner to awsuser;--DROP TABLE public.workorderrouting;CREATE TABLE IF NOT EXISTS public.workorderrouting(	workorderid INTEGER NOT NULL  ENCODE az64	  ,productid INTEGER NOT NULL  ENCODE az64	  ,operationsequence INTEGER NOT NULL  ENCODE az64	  ,locationid INTEGER NOT NULL  ENCODE az64	  ,scheduledstartdate TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,scheduledenddate TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64	  ,actualstartdate TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,actualenddate TIMESTAMP WITHOUT TIME ZONE ENCODE az64	  ,actualresourcehrs NUMERIC(9 ,4) ENCODE az64	  ,plannedcost NUMERIC(19 ,4) NOT NULL  ENCODE az64	  ,actualcost NUMERIC(19 ,4) ENCODE az64	  ,modifieddate TIMESTAMP WITHOUT TIME ZONE NOT NULL  ENCODE az64)DISTSTYLE AUTO;ALTER TABLE public.workorderrouting owner to awsuser;--DROP TABLE webapp.test1;CREATE TABLE IF NOT EXISTS webapp.test1(	col1 VARCHAR(10) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE webapp.test1 owner to awsuser;--DROP TABLE webapp.test2;CREATE TABLE IF NOT EXISTS webapp.test2(	col2 VARCHAR(10) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE webapp.test2 owner to awsuser;--DROP TABLE webapp.test3;CREATE TABLE IF NOT EXISTS webapp.test3(	col3 VARCHAR(10) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE webapp.test3 owner to awsuser;--DROP TABLE webapp.test4;CREATE TABLE IF NOT EXISTS webapp.test4(	col3 VARCHAR(10) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE webapp.test4 owner to awsuser;--DROP TABLE webapp2.test11;CREATE TABLE IF NOT EXISTS webapp2.test11(	col1 VARCHAR(10) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE webapp2.test11 owner to awsuser;--DROP TABLE webapp2.test12;CREATE TABLE IF NOT EXISTS webapp2.test12(	col1 VARCHAR(10) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE webapp2.test12 owner to awsuser;--DROP TABLE webapp2.test13;CREATE TABLE IF NOT EXISTS webapp2.test13(	col1 VARCHAR(10) ENCODE lzo)DISTSTYLE AUTO;ALTER TABLE webapp2.test13 owner to webdevuser1;

